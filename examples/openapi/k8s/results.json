[
    "http://127.0.0.1:8000/.well-known/openid-configuration/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/componentstatuses",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/componentstatuses/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/configmaps",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/endpoints",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/events",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/limitranges",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "finalizers": [
                    ""
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "phase": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//bindings",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "target": {
                "apiVersion": "",
                "fieldPath": "",
                "kind": "",
                "name": "",
                "namespace": "",
                "resourceVersion": "",
                "uid": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//configmaps",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//configmaps",
    "post",
    {
        "data": {
            "apiVersion": "",
            "immutable": true,
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//configmaps",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//configmaps/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//configmaps/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "immutable": true,
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//configmaps/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//configmaps/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//endpoints",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//endpoints",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "hostname": "",
                            "ip": "",
                            "nodeName": "",
                            "targetRef": {
                                "apiVersion": "",
                                "fieldPath": "",
                                "kind": "",
                                "name": "",
                                "namespace": "",
                                "resourceVersion": "",
                                "uid": ""
                            }
                        }
                    ],
                    "notReadyAddresses": [
                        {
                            "hostname": "",
                            "ip": "",
                            "nodeName": "",
                            "targetRef": {
                                "apiVersion": "",
                                "fieldPath": "",
                                "kind": "",
                                "name": "",
                                "namespace": "",
                                "resourceVersion": "",
                                "uid": ""
                            }
                        }
                    ],
                    "ports": [
                        {
                            "appProtocol": "",
                            "name": "",
                            "port": 0,
                            "protocol": ""
                        }
                    ]
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//endpoints",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//endpoints/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//endpoints/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "hostname": "",
                            "ip": "",
                            "nodeName": "",
                            "targetRef": {
                                "apiVersion": "",
                                "fieldPath": "",
                                "kind": "",
                                "name": "",
                                "namespace": "",
                                "resourceVersion": "",
                                "uid": ""
                            }
                        }
                    ],
                    "notReadyAddresses": [
                        {
                            "hostname": "",
                            "ip": "",
                            "nodeName": "",
                            "targetRef": {
                                "apiVersion": "",
                                "fieldPath": "",
                                "kind": "",
                                "name": "",
                                "namespace": "",
                                "resourceVersion": "",
                                "uid": ""
                            }
                        }
                    ],
                    "ports": [
                        {
                            "appProtocol": "",
                            "name": "",
                            "port": 0,
                            "protocol": ""
                        }
                    ]
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//endpoints/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//endpoints/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//events",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//events",
    "post",
    {
        "data": {
            "action": "",
            "apiVersion": "",
            "count": 0,
            "eventTime": "2020-12-12T%12:12:12Z",
            "firstTimestamp": "2020-12-12T%12:12:12Z",
            "involvedObject": {
                "apiVersion": "",
                "fieldPath": "",
                "kind": "",
                "name": "",
                "namespace": "",
                "resourceVersion": "",
                "uid": ""
            },
            "kind": "",
            "lastTimestamp": "2020-12-12T%12:12:12Z",
            "message": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "reason": "",
            "related": {
                "apiVersion": "",
                "fieldPath": "",
                "kind": "",
                "name": "",
                "namespace": "",
                "resourceVersion": "",
                "uid": ""
            },
            "reportingComponent": "",
            "reportingInstance": "",
            "series": {
                "count": 0,
                "lastObservedTime": "2020-12-12T%12:12:12Z"
            },
            "source": {
                "component": "",
                "host": ""
            },
            "type": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//events",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//events/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//events/",
    "put",
    {
        "data": {
            "action": "",
            "apiVersion": "",
            "count": 0,
            "eventTime": "2020-12-12T%12:12:12Z",
            "firstTimestamp": "2020-12-12T%12:12:12Z",
            "involvedObject": {
                "apiVersion": "",
                "fieldPath": "",
                "kind": "",
                "name": "",
                "namespace": "",
                "resourceVersion": "",
                "uid": ""
            },
            "kind": "",
            "lastTimestamp": "2020-12-12T%12:12:12Z",
            "message": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "reason": "",
            "related": {
                "apiVersion": "",
                "fieldPath": "",
                "kind": "",
                "name": "",
                "namespace": "",
                "resourceVersion": "",
                "uid": ""
            },
            "reportingComponent": "",
            "reportingInstance": "",
            "series": {
                "count": 0,
                "lastObservedTime": "2020-12-12T%12:12:12Z"
            },
            "source": {
                "component": "",
                "host": ""
            },
            "type": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//events/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//events/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//limitranges",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//limitranges",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "limits": [
                    {
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//limitranges",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//limitranges/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//limitranges/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "limits": [
                    {
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//limitranges/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//limitranges/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//persistentvolumeclaims",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//persistentvolumeclaims",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "accessModes": [
                    ""
                ],
                "dataSource": {
                    "apiGroup": "",
                    "kind": "",
                    "name": ""
                },
                "dataSourceRef": {
                    "apiGroup": "",
                    "kind": "",
                    "name": ""
                },
                "resources": {},
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "storageClassName": "",
                "volumeMode": "",
                "volumeName": ""
            },
            "status": {
                "accessModes": [
                    ""
                ],
                "conditions": [
                    {
                        "lastProbeTime": "2020-12-12T%12:12:12Z",
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "phase": "",
                "resizeStatus": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//persistentvolumeclaims",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//persistentvolumeclaims/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//persistentvolumeclaims/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "accessModes": [
                    ""
                ],
                "dataSource": {
                    "apiGroup": "",
                    "kind": "",
                    "name": ""
                },
                "dataSourceRef": {
                    "apiGroup": "",
                    "kind": "",
                    "name": ""
                },
                "resources": {},
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "storageClassName": "",
                "volumeMode": "",
                "volumeName": ""
            },
            "status": {
                "accessModes": [
                    ""
                ],
                "conditions": [
                    {
                        "lastProbeTime": "2020-12-12T%12:12:12Z",
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "phase": "",
                "resizeStatus": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//persistentvolumeclaims/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//persistentvolumeclaims/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//persistentvolumeclaims//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//persistentvolumeclaims//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "accessModes": [
                    ""
                ],
                "dataSource": {
                    "apiGroup": "",
                    "kind": "",
                    "name": ""
                },
                "dataSourceRef": {
                    "apiGroup": "",
                    "kind": "",
                    "name": ""
                },
                "resources": {},
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "storageClassName": "",
                "volumeMode": "",
                "volumeName": ""
            },
            "status": {
                "accessModes": [
                    ""
                ],
                "conditions": [
                    {
                        "lastProbeTime": "2020-12-12T%12:12:12Z",
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "phase": "",
                "resizeStatus": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//persistentvolumeclaims//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "activeDeadlineSeconds": 0,
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ],
                                    "matchFields": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "weight": 0
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ],
                                    "matchFields": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaceSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaces": [
                                        ""
                                    ],
                                    "topologyKey": ""
                                },
                                "weight": 0
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "namespaceSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "namespaces": [
                                    ""
                                ],
                                "topologyKey": ""
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaceSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaces": [
                                        ""
                                    ],
                                    "topologyKey": ""
                                },
                                "weight": 0
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "namespaceSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "namespaces": [
                                    ""
                                ],
                                "topologyKey": ""
                            }
                        ]
                    }
                },
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            ""
                        ],
                        "command": [
                            ""
                        ],
                        "env": [
                            {
                                "name": "",
                                "value": "",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    },
                                    "fieldRef": {
                                        "apiVersion": "",
                                        "fieldPath": ""
                                    },
                                    "resourceFieldRef": {
                                        "containerName": "",
                                        "divisor": "",
                                        "resource": ""
                                    },
                                    "secretKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "",
                                    "optional": true
                                },
                                "prefix": "",
                                "secretRef": {
                                    "name": "",
                                    "optional": true
                                }
                            }
                        ],
                        "image": "",
                        "imagePullPolicy": "",
                        "lifecycle": {
                            "postStart": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            },
                            "preStop": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            }
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "name": "",
                        "ports": [
                            {
                                "containerPort": 0,
                                "hostIP": "",
                                "hostPort": 0,
                                "name": "",
                                "protocol": ""
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "capabilities": {
                                "add": [
                                    ""
                                ],
                                "drop": [
                                    ""
                                ]
                            },
                            "privileged": true,
                            "procMount": "",
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "startupProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "stdin": true,
                        "stdinOnce": true,
                        "terminationMessagePath": "",
                        "terminationMessagePolicy": "",
                        "tty": true,
                        "volumeDevices": [
                            {
                                "devicePath": "",
                                "name": ""
                            }
                        ],
                        "volumeMounts": [
                            {
                                "mountPath": "",
                                "mountPropagation": "",
                                "name": "",
                                "readOnly": true,
                                "subPath": "",
                                "subPathExpr": ""
                            }
                        ],
                        "workingDir": ""
                    }
                ],
                "dnsConfig": {
                    "nameservers": [
                        ""
                    ],
                    "options": [
                        {
                            "name": "",
                            "value": ""
                        }
                    ],
                    "searches": [
                        ""
                    ]
                },
                "dnsPolicy": "",
                "enableServiceLinks": true,
                "ephemeralContainers": [
                    {
                        "args": [
                            ""
                        ],
                        "command": [
                            ""
                        ],
                        "env": [
                            {
                                "name": "",
                                "value": "",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    },
                                    "fieldRef": {
                                        "apiVersion": "",
                                        "fieldPath": ""
                                    },
                                    "resourceFieldRef": {
                                        "containerName": "",
                                        "divisor": "",
                                        "resource": ""
                                    },
                                    "secretKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "",
                                    "optional": true
                                },
                                "prefix": "",
                                "secretRef": {
                                    "name": "",
                                    "optional": true
                                }
                            }
                        ],
                        "image": "",
                        "imagePullPolicy": "",
                        "lifecycle": {
                            "postStart": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            },
                            "preStop": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            }
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "name": "",
                        "ports": [
                            {
                                "containerPort": 0,
                                "hostIP": "",
                                "hostPort": 0,
                                "name": "",
                                "protocol": ""
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "capabilities": {
                                "add": [
                                    ""
                                ],
                                "drop": [
                                    ""
                                ]
                            },
                            "privileged": true,
                            "procMount": "",
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "startupProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "stdin": true,
                        "stdinOnce": true,
                        "targetContainerName": "",
                        "terminationMessagePath": "",
                        "terminationMessagePolicy": "",
                        "tty": true,
                        "volumeDevices": [
                            {
                                "devicePath": "",
                                "name": ""
                            }
                        ],
                        "volumeMounts": [
                            {
                                "mountPath": "",
                                "mountPropagation": "",
                                "name": "",
                                "readOnly": true,
                                "subPath": "",
                                "subPathExpr": ""
                            }
                        ],
                        "workingDir": ""
                    }
                ],
                "hostAliases": [
                    {
                        "hostnames": [
                            ""
                        ],
                        "ip": ""
                    }
                ],
                "hostIPC": true,
                "hostNetwork": true,
                "hostPID": true,
                "hostname": "",
                "imagePullSecrets": [
                    {
                        "name": ""
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            ""
                        ],
                        "command": [
                            ""
                        ],
                        "env": [
                            {
                                "name": "",
                                "value": "",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    },
                                    "fieldRef": {
                                        "apiVersion": "",
                                        "fieldPath": ""
                                    },
                                    "resourceFieldRef": {
                                        "containerName": "",
                                        "divisor": "",
                                        "resource": ""
                                    },
                                    "secretKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "",
                                    "optional": true
                                },
                                "prefix": "",
                                "secretRef": {
                                    "name": "",
                                    "optional": true
                                }
                            }
                        ],
                        "image": "",
                        "imagePullPolicy": "",
                        "lifecycle": {
                            "postStart": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            },
                            "preStop": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            }
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "name": "",
                        "ports": [
                            {
                                "containerPort": 0,
                                "hostIP": "",
                                "hostPort": 0,
                                "name": "",
                                "protocol": ""
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "capabilities": {
                                "add": [
                                    ""
                                ],
                                "drop": [
                                    ""
                                ]
                            },
                            "privileged": true,
                            "procMount": "",
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "startupProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "stdin": true,
                        "stdinOnce": true,
                        "terminationMessagePath": "",
                        "terminationMessagePolicy": "",
                        "tty": true,
                        "volumeDevices": [
                            {
                                "devicePath": "",
                                "name": ""
                            }
                        ],
                        "volumeMounts": [
                            {
                                "mountPath": "",
                                "mountPropagation": "",
                                "name": "",
                                "readOnly": true,
                                "subPath": "",
                                "subPathExpr": ""
                            }
                        ],
                        "workingDir": ""
                    }
                ],
                "nodeName": "",
                "os": {
                    "name": ""
                },
                "preemptionPolicy": "",
                "priority": 0,
                "priorityClassName": "",
                "readinessGates": [
                    {
                        "conditionType": ""
                    }
                ],
                "restartPolicy": "",
                "runtimeClassName": "",
                "schedulerName": "",
                "securityContext": {
                    "fsGroup": 0,
                    "fsGroupChangePolicy": "",
                    "runAsGroup": 0,
                    "runAsNonRoot": true,
                    "runAsUser": 0,
                    "seLinuxOptions": {
                        "level": "",
                        "role": "",
                        "type": "",
                        "user": ""
                    },
                    "seccompProfile": {
                        "localhostProfile": "",
                        "type": ""
                    },
                    "supplementalGroups": [
                        0
                    ],
                    "sysctls": [
                        {
                            "name": "",
                            "value": ""
                        }
                    ],
                    "windowsOptions": {
                        "gmsaCredentialSpec": "",
                        "gmsaCredentialSpecName": "",
                        "hostProcess": true,
                        "runAsUserName": ""
                    }
                },
                "serviceAccount": "",
                "serviceAccountName": "",
                "setHostnameAsFQDN": true,
                "shareProcessNamespace": true,
                "subdomain": "",
                "terminationGracePeriodSeconds": 0,
                "tolerations": [
                    {
                        "effect": "",
                        "key": "",
                        "operator": "",
                        "tolerationSeconds": 0,
                        "value": ""
                    }
                ],
                "topologySpreadConstraints": [
                    {
                        "labelSelector": {
                            "matchExpressions": [
                                {
                                    "key": "",
                                    "operator": "",
                                    "values": [
                                        ""
                                    ]
                                }
                            ]
                        },
                        "maxSkew": 0,
                        "topologyKey": "",
                        "whenUnsatisfiable": ""
                    }
                ],
                "volumes": [
                    {
                        "awsElasticBlockStore": {
                            "fsType": "",
                            "partition": 0,
                            "readOnly": true,
                            "volumeID": ""
                        },
                        "azureDisk": {
                            "cachingMode": "",
                            "diskName": "",
                            "diskURI": "",
                            "fsType": "",
                            "kind": "",
                            "readOnly": true
                        },
                        "azureFile": {
                            "readOnly": true,
                            "secretName": "",
                            "shareName": ""
                        },
                        "cephfs": {
                            "monitors": [
                                ""
                            ],
                            "path": "",
                            "readOnly": true,
                            "secretFile": "",
                            "secretRef": {
                                "name": ""
                            },
                            "user": ""
                        },
                        "cinder": {
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "volumeID": ""
                        },
                        "configMap": {
                            "defaultMode": 0,
                            "items": [
                                {
                                    "key": "",
                                    "mode": 0,
                                    "path": ""
                                }
                            ],
                            "name": "",
                            "optional": true
                        },
                        "csi": {
                            "driver": "",
                            "fsType": "",
                            "nodePublishSecretRef": {
                                "name": ""
                            },
                            "readOnly": true
                        },
                        "downwardAPI": {
                            "defaultMode": 0,
                            "items": [
                                {
                                    "fieldRef": {
                                        "apiVersion": "",
                                        "fieldPath": ""
                                    },
                                    "mode": 0,
                                    "path": "",
                                    "resourceFieldRef": {
                                        "containerName": "",
                                        "divisor": "",
                                        "resource": ""
                                    }
                                }
                            ]
                        },
                        "emptyDir": {
                            "medium": "",
                            "sizeLimit": ""
                        },
                        "ephemeral": {
                            "volumeClaimTemplate": {
                                "metadata": {
                                    "clusterName": "",
                                    "creationTimestamp": "2020-12-12T%12:12:12Z",
                                    "deletionGracePeriodSeconds": 0,
                                    "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                    "finalizers": [
                                        ""
                                    ],
                                    "generateName": "",
                                    "generation": 0,
                                    "managedFields": [
                                        {
                                            "apiVersion": "",
                                            "fieldsType": "",
                                            "fieldsV1": {},
                                            "manager": "",
                                            "operation": "",
                                            "subresource": "",
                                            "time": "2020-12-12T%12:12:12Z"
                                        }
                                    ],
                                    "name": "",
                                    "namespace": "",
                                    "ownerReferences": [
                                        {
                                            "apiVersion": "",
                                            "blockOwnerDeletion": true,
                                            "controller": true,
                                            "kind": "",
                                            "name": "",
                                            "uid": ""
                                        }
                                    ],
                                    "resourceVersion": "",
                                    "selfLink": "",
                                    "uid": ""
                                },
                                "spec": {
                                    "accessModes": [
                                        ""
                                    ],
                                    "dataSource": {
                                        "apiGroup": "",
                                        "kind": "",
                                        "name": ""
                                    },
                                    "dataSourceRef": {
                                        "apiGroup": "",
                                        "kind": "",
                                        "name": ""
                                    },
                                    "resources": {},
                                    "selector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "storageClassName": "",
                                    "volumeMode": "",
                                    "volumeName": ""
                                }
                            }
                        },
                        "fc": {
                            "fsType": "",
                            "lun": 0,
                            "readOnly": true,
                            "targetWWNs": [
                                ""
                            ],
                            "wwids": [
                                ""
                            ]
                        },
                        "flexVolume": {
                            "driver": "",
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            }
                        },
                        "flocker": {
                            "datasetName": "",
                            "datasetUUID": ""
                        },
                        "gcePersistentDisk": {
                            "fsType": "",
                            "partition": 0,
                            "pdName": "",
                            "readOnly": true
                        },
                        "gitRepo": {
                            "directory": "",
                            "repository": "",
                            "revision": ""
                        },
                        "glusterfs": {
                            "endpoints": "",
                            "path": "",
                            "readOnly": true
                        },
                        "hostPath": {
                            "path": "",
                            "type": ""
                        },
                        "iscsi": {
                            "chapAuthDiscovery": true,
                            "chapAuthSession": true,
                            "fsType": "",
                            "initiatorName": "",
                            "iqn": "",
                            "iscsiInterface": "",
                            "lun": 0,
                            "portals": [
                                ""
                            ],
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "targetPortal": ""
                        },
                        "name": "",
                        "nfs": {
                            "path": "",
                            "readOnly": true,
                            "server": ""
                        },
                        "persistentVolumeClaim": {
                            "claimName": "",
                            "readOnly": true
                        },
                        "photonPersistentDisk": {
                            "fsType": "",
                            "pdID": ""
                        },
                        "portworxVolume": {
                            "fsType": "",
                            "readOnly": true,
                            "volumeID": ""
                        },
                        "projected": {
                            "defaultMode": 0,
                            "sources": [
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "",
                                                "mode": 0,
                                                "path": ""
                                            }
                                        ],
                                        "name": "",
                                        "optional": true
                                    },
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "",
                                                    "fieldPath": ""
                                                },
                                                "mode": 0,
                                                "path": "",
                                                "resourceFieldRef": {
                                                    "containerName": "",
                                                    "divisor": "",
                                                    "resource": ""
                                                }
                                            }
                                        ]
                                    },
                                    "secret": {
                                        "items": [
                                            {
                                                "key": "",
                                                "mode": 0,
                                                "path": ""
                                            }
                                        ],
                                        "name": "",
                                        "optional": true
                                    },
                                    "serviceAccountToken": {
                                        "audience": "",
                                        "expirationSeconds": 0,
                                        "path": ""
                                    }
                                }
                            ]
                        },
                        "quobyte": {
                            "group": "",
                            "readOnly": true,
                            "registry": "",
                            "tenant": "",
                            "user": "",
                            "volume": ""
                        },
                        "rbd": {
                            "fsType": "",
                            "image": "",
                            "keyring": "",
                            "monitors": [
                                ""
                            ],
                            "pool": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "user": ""
                        },
                        "scaleIO": {
                            "fsType": "",
                            "gateway": "",
                            "protectionDomain": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "sslEnabled": true,
                            "storageMode": "",
                            "storagePool": "",
                            "system": "",
                            "volumeName": ""
                        },
                        "secret": {
                            "defaultMode": 0,
                            "items": [
                                {
                                    "key": "",
                                    "mode": 0,
                                    "path": ""
                                }
                            ],
                            "optional": true,
                            "secretName": ""
                        },
                        "storageos": {
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "volumeName": "",
                            "volumeNamespace": ""
                        },
                        "vsphereVolume": {
                            "fsType": "",
                            "storagePolicyID": "",
                            "storagePolicyName": "",
                            "volumePath": ""
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": "2020-12-12T%12:12:12Z",
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "",
                        "image": "",
                        "imageID": "",
                        "lastState": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        },
                        "name": "",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        }
                    }
                ],
                "ephemeralContainerStatuses": [
                    {
                        "containerID": "",
                        "image": "",
                        "imageID": "",
                        "lastState": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        },
                        "name": "",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        }
                    }
                ],
                "hostIP": "",
                "initContainerStatuses": [
                    {
                        "containerID": "",
                        "image": "",
                        "imageID": "",
                        "lastState": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        },
                        "name": "",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        }
                    }
                ],
                "message": "",
                "nominatedNodeName": "",
                "phase": "",
                "podIP": "",
                "podIPs": [
                    {
                        "ip": ""
                    }
                ],
                "qosClass": "",
                "reason": "",
                "startTime": "2020-12-12T%12:12:12Z"
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "activeDeadlineSeconds": 0,
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ],
                                    "matchFields": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "weight": 0
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ],
                                    "matchFields": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaceSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaces": [
                                        ""
                                    ],
                                    "topologyKey": ""
                                },
                                "weight": 0
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "namespaceSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "namespaces": [
                                    ""
                                ],
                                "topologyKey": ""
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaceSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaces": [
                                        ""
                                    ],
                                    "topologyKey": ""
                                },
                                "weight": 0
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "namespaceSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "namespaces": [
                                    ""
                                ],
                                "topologyKey": ""
                            }
                        ]
                    }
                },
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            ""
                        ],
                        "command": [
                            ""
                        ],
                        "env": [
                            {
                                "name": "",
                                "value": "",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    },
                                    "fieldRef": {
                                        "apiVersion": "",
                                        "fieldPath": ""
                                    },
                                    "resourceFieldRef": {
                                        "containerName": "",
                                        "divisor": "",
                                        "resource": ""
                                    },
                                    "secretKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "",
                                    "optional": true
                                },
                                "prefix": "",
                                "secretRef": {
                                    "name": "",
                                    "optional": true
                                }
                            }
                        ],
                        "image": "",
                        "imagePullPolicy": "",
                        "lifecycle": {
                            "postStart": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            },
                            "preStop": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            }
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "name": "",
                        "ports": [
                            {
                                "containerPort": 0,
                                "hostIP": "",
                                "hostPort": 0,
                                "name": "",
                                "protocol": ""
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "capabilities": {
                                "add": [
                                    ""
                                ],
                                "drop": [
                                    ""
                                ]
                            },
                            "privileged": true,
                            "procMount": "",
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "startupProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "stdin": true,
                        "stdinOnce": true,
                        "terminationMessagePath": "",
                        "terminationMessagePolicy": "",
                        "tty": true,
                        "volumeDevices": [
                            {
                                "devicePath": "",
                                "name": ""
                            }
                        ],
                        "volumeMounts": [
                            {
                                "mountPath": "",
                                "mountPropagation": "",
                                "name": "",
                                "readOnly": true,
                                "subPath": "",
                                "subPathExpr": ""
                            }
                        ],
                        "workingDir": ""
                    }
                ],
                "dnsConfig": {
                    "nameservers": [
                        ""
                    ],
                    "options": [
                        {
                            "name": "",
                            "value": ""
                        }
                    ],
                    "searches": [
                        ""
                    ]
                },
                "dnsPolicy": "",
                "enableServiceLinks": true,
                "ephemeralContainers": [
                    {
                        "args": [
                            ""
                        ],
                        "command": [
                            ""
                        ],
                        "env": [
                            {
                                "name": "",
                                "value": "",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    },
                                    "fieldRef": {
                                        "apiVersion": "",
                                        "fieldPath": ""
                                    },
                                    "resourceFieldRef": {
                                        "containerName": "",
                                        "divisor": "",
                                        "resource": ""
                                    },
                                    "secretKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "",
                                    "optional": true
                                },
                                "prefix": "",
                                "secretRef": {
                                    "name": "",
                                    "optional": true
                                }
                            }
                        ],
                        "image": "",
                        "imagePullPolicy": "",
                        "lifecycle": {
                            "postStart": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            },
                            "preStop": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            }
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "name": "",
                        "ports": [
                            {
                                "containerPort": 0,
                                "hostIP": "",
                                "hostPort": 0,
                                "name": "",
                                "protocol": ""
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "capabilities": {
                                "add": [
                                    ""
                                ],
                                "drop": [
                                    ""
                                ]
                            },
                            "privileged": true,
                            "procMount": "",
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "startupProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "stdin": true,
                        "stdinOnce": true,
                        "targetContainerName": "",
                        "terminationMessagePath": "",
                        "terminationMessagePolicy": "",
                        "tty": true,
                        "volumeDevices": [
                            {
                                "devicePath": "",
                                "name": ""
                            }
                        ],
                        "volumeMounts": [
                            {
                                "mountPath": "",
                                "mountPropagation": "",
                                "name": "",
                                "readOnly": true,
                                "subPath": "",
                                "subPathExpr": ""
                            }
                        ],
                        "workingDir": ""
                    }
                ],
                "hostAliases": [
                    {
                        "hostnames": [
                            ""
                        ],
                        "ip": ""
                    }
                ],
                "hostIPC": true,
                "hostNetwork": true,
                "hostPID": true,
                "hostname": "",
                "imagePullSecrets": [
                    {
                        "name": ""
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            ""
                        ],
                        "command": [
                            ""
                        ],
                        "env": [
                            {
                                "name": "",
                                "value": "",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    },
                                    "fieldRef": {
                                        "apiVersion": "",
                                        "fieldPath": ""
                                    },
                                    "resourceFieldRef": {
                                        "containerName": "",
                                        "divisor": "",
                                        "resource": ""
                                    },
                                    "secretKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "",
                                    "optional": true
                                },
                                "prefix": "",
                                "secretRef": {
                                    "name": "",
                                    "optional": true
                                }
                            }
                        ],
                        "image": "",
                        "imagePullPolicy": "",
                        "lifecycle": {
                            "postStart": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            },
                            "preStop": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            }
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "name": "",
                        "ports": [
                            {
                                "containerPort": 0,
                                "hostIP": "",
                                "hostPort": 0,
                                "name": "",
                                "protocol": ""
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "capabilities": {
                                "add": [
                                    ""
                                ],
                                "drop": [
                                    ""
                                ]
                            },
                            "privileged": true,
                            "procMount": "",
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "startupProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "stdin": true,
                        "stdinOnce": true,
                        "terminationMessagePath": "",
                        "terminationMessagePolicy": "",
                        "tty": true,
                        "volumeDevices": [
                            {
                                "devicePath": "",
                                "name": ""
                            }
                        ],
                        "volumeMounts": [
                            {
                                "mountPath": "",
                                "mountPropagation": "",
                                "name": "",
                                "readOnly": true,
                                "subPath": "",
                                "subPathExpr": ""
                            }
                        ],
                        "workingDir": ""
                    }
                ],
                "nodeName": "",
                "os": {
                    "name": ""
                },
                "preemptionPolicy": "",
                "priority": 0,
                "priorityClassName": "",
                "readinessGates": [
                    {
                        "conditionType": ""
                    }
                ],
                "restartPolicy": "",
                "runtimeClassName": "",
                "schedulerName": "",
                "securityContext": {
                    "fsGroup": 0,
                    "fsGroupChangePolicy": "",
                    "runAsGroup": 0,
                    "runAsNonRoot": true,
                    "runAsUser": 0,
                    "seLinuxOptions": {
                        "level": "",
                        "role": "",
                        "type": "",
                        "user": ""
                    },
                    "seccompProfile": {
                        "localhostProfile": "",
                        "type": ""
                    },
                    "supplementalGroups": [
                        0
                    ],
                    "sysctls": [
                        {
                            "name": "",
                            "value": ""
                        }
                    ],
                    "windowsOptions": {
                        "gmsaCredentialSpec": "",
                        "gmsaCredentialSpecName": "",
                        "hostProcess": true,
                        "runAsUserName": ""
                    }
                },
                "serviceAccount": "",
                "serviceAccountName": "",
                "setHostnameAsFQDN": true,
                "shareProcessNamespace": true,
                "subdomain": "",
                "terminationGracePeriodSeconds": 0,
                "tolerations": [
                    {
                        "effect": "",
                        "key": "",
                        "operator": "",
                        "tolerationSeconds": 0,
                        "value": ""
                    }
                ],
                "topologySpreadConstraints": [
                    {
                        "labelSelector": {
                            "matchExpressions": [
                                {
                                    "key": "",
                                    "operator": "",
                                    "values": [
                                        ""
                                    ]
                                }
                            ]
                        },
                        "maxSkew": 0,
                        "topologyKey": "",
                        "whenUnsatisfiable": ""
                    }
                ],
                "volumes": [
                    {
                        "awsElasticBlockStore": {
                            "fsType": "",
                            "partition": 0,
                            "readOnly": true,
                            "volumeID": ""
                        },
                        "azureDisk": {
                            "cachingMode": "",
                            "diskName": "",
                            "diskURI": "",
                            "fsType": "",
                            "kind": "",
                            "readOnly": true
                        },
                        "azureFile": {
                            "readOnly": true,
                            "secretName": "",
                            "shareName": ""
                        },
                        "cephfs": {
                            "monitors": [
                                ""
                            ],
                            "path": "",
                            "readOnly": true,
                            "secretFile": "",
                            "secretRef": {
                                "name": ""
                            },
                            "user": ""
                        },
                        "cinder": {
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "volumeID": ""
                        },
                        "configMap": {
                            "defaultMode": 0,
                            "items": [
                                {
                                    "key": "",
                                    "mode": 0,
                                    "path": ""
                                }
                            ],
                            "name": "",
                            "optional": true
                        },
                        "csi": {
                            "driver": "",
                            "fsType": "",
                            "nodePublishSecretRef": {
                                "name": ""
                            },
                            "readOnly": true
                        },
                        "downwardAPI": {
                            "defaultMode": 0,
                            "items": [
                                {
                                    "fieldRef": {
                                        "apiVersion": "",
                                        "fieldPath": ""
                                    },
                                    "mode": 0,
                                    "path": "",
                                    "resourceFieldRef": {
                                        "containerName": "",
                                        "divisor": "",
                                        "resource": ""
                                    }
                                }
                            ]
                        },
                        "emptyDir": {
                            "medium": "",
                            "sizeLimit": ""
                        },
                        "ephemeral": {
                            "volumeClaimTemplate": {
                                "metadata": {
                                    "clusterName": "",
                                    "creationTimestamp": "2020-12-12T%12:12:12Z",
                                    "deletionGracePeriodSeconds": 0,
                                    "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                    "finalizers": [
                                        ""
                                    ],
                                    "generateName": "",
                                    "generation": 0,
                                    "managedFields": [
                                        {
                                            "apiVersion": "",
                                            "fieldsType": "",
                                            "fieldsV1": {},
                                            "manager": "",
                                            "operation": "",
                                            "subresource": "",
                                            "time": "2020-12-12T%12:12:12Z"
                                        }
                                    ],
                                    "name": "",
                                    "namespace": "",
                                    "ownerReferences": [
                                        {
                                            "apiVersion": "",
                                            "blockOwnerDeletion": true,
                                            "controller": true,
                                            "kind": "",
                                            "name": "",
                                            "uid": ""
                                        }
                                    ],
                                    "resourceVersion": "",
                                    "selfLink": "",
                                    "uid": ""
                                },
                                "spec": {
                                    "accessModes": [
                                        ""
                                    ],
                                    "dataSource": {
                                        "apiGroup": "",
                                        "kind": "",
                                        "name": ""
                                    },
                                    "dataSourceRef": {
                                        "apiGroup": "",
                                        "kind": "",
                                        "name": ""
                                    },
                                    "resources": {},
                                    "selector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "storageClassName": "",
                                    "volumeMode": "",
                                    "volumeName": ""
                                }
                            }
                        },
                        "fc": {
                            "fsType": "",
                            "lun": 0,
                            "readOnly": true,
                            "targetWWNs": [
                                ""
                            ],
                            "wwids": [
                                ""
                            ]
                        },
                        "flexVolume": {
                            "driver": "",
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            }
                        },
                        "flocker": {
                            "datasetName": "",
                            "datasetUUID": ""
                        },
                        "gcePersistentDisk": {
                            "fsType": "",
                            "partition": 0,
                            "pdName": "",
                            "readOnly": true
                        },
                        "gitRepo": {
                            "directory": "",
                            "repository": "",
                            "revision": ""
                        },
                        "glusterfs": {
                            "endpoints": "",
                            "path": "",
                            "readOnly": true
                        },
                        "hostPath": {
                            "path": "",
                            "type": ""
                        },
                        "iscsi": {
                            "chapAuthDiscovery": true,
                            "chapAuthSession": true,
                            "fsType": "",
                            "initiatorName": "",
                            "iqn": "",
                            "iscsiInterface": "",
                            "lun": 0,
                            "portals": [
                                ""
                            ],
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "targetPortal": ""
                        },
                        "name": "",
                        "nfs": {
                            "path": "",
                            "readOnly": true,
                            "server": ""
                        },
                        "persistentVolumeClaim": {
                            "claimName": "",
                            "readOnly": true
                        },
                        "photonPersistentDisk": {
                            "fsType": "",
                            "pdID": ""
                        },
                        "portworxVolume": {
                            "fsType": "",
                            "readOnly": true,
                            "volumeID": ""
                        },
                        "projected": {
                            "defaultMode": 0,
                            "sources": [
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "",
                                                "mode": 0,
                                                "path": ""
                                            }
                                        ],
                                        "name": "",
                                        "optional": true
                                    },
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "",
                                                    "fieldPath": ""
                                                },
                                                "mode": 0,
                                                "path": "",
                                                "resourceFieldRef": {
                                                    "containerName": "",
                                                    "divisor": "",
                                                    "resource": ""
                                                }
                                            }
                                        ]
                                    },
                                    "secret": {
                                        "items": [
                                            {
                                                "key": "",
                                                "mode": 0,
                                                "path": ""
                                            }
                                        ],
                                        "name": "",
                                        "optional": true
                                    },
                                    "serviceAccountToken": {
                                        "audience": "",
                                        "expirationSeconds": 0,
                                        "path": ""
                                    }
                                }
                            ]
                        },
                        "quobyte": {
                            "group": "",
                            "readOnly": true,
                            "registry": "",
                            "tenant": "",
                            "user": "",
                            "volume": ""
                        },
                        "rbd": {
                            "fsType": "",
                            "image": "",
                            "keyring": "",
                            "monitors": [
                                ""
                            ],
                            "pool": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "user": ""
                        },
                        "scaleIO": {
                            "fsType": "",
                            "gateway": "",
                            "protectionDomain": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "sslEnabled": true,
                            "storageMode": "",
                            "storagePool": "",
                            "system": "",
                            "volumeName": ""
                        },
                        "secret": {
                            "defaultMode": 0,
                            "items": [
                                {
                                    "key": "",
                                    "mode": 0,
                                    "path": ""
                                }
                            ],
                            "optional": true,
                            "secretName": ""
                        },
                        "storageos": {
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "volumeName": "",
                            "volumeNamespace": ""
                        },
                        "vsphereVolume": {
                            "fsType": "",
                            "storagePolicyID": "",
                            "storagePolicyName": "",
                            "volumePath": ""
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": "2020-12-12T%12:12:12Z",
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "",
                        "image": "",
                        "imageID": "",
                        "lastState": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        },
                        "name": "",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        }
                    }
                ],
                "ephemeralContainerStatuses": [
                    {
                        "containerID": "",
                        "image": "",
                        "imageID": "",
                        "lastState": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        },
                        "name": "",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        }
                    }
                ],
                "hostIP": "",
                "initContainerStatuses": [
                    {
                        "containerID": "",
                        "image": "",
                        "imageID": "",
                        "lastState": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        },
                        "name": "",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        }
                    }
                ],
                "message": "",
                "nominatedNodeName": "",
                "phase": "",
                "podIP": "",
                "podIPs": [
                    {
                        "ip": ""
                    }
                ],
                "qosClass": "",
                "reason": "",
                "startTime": "2020-12-12T%12:12:12Z"
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//attach",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "container": "",
            "stderr": true,
            "stdin": true,
            "stdout": true,
            "tty": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//attach",
    "post",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "container": "",
            "stderr": true,
            "stdin": true,
            "stdout": true,
            "tty": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//binding",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "target": {
                "apiVersion": "",
                "fieldPath": "",
                "kind": "",
                "name": "",
                "namespace": "",
                "resourceVersion": "",
                "uid": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//ephemeralcontainers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//ephemeralcontainers",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "activeDeadlineSeconds": 0,
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ],
                                    "matchFields": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "weight": 0
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ],
                                    "matchFields": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaceSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaces": [
                                        ""
                                    ],
                                    "topologyKey": ""
                                },
                                "weight": 0
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "namespaceSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "namespaces": [
                                    ""
                                ],
                                "topologyKey": ""
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaceSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaces": [
                                        ""
                                    ],
                                    "topologyKey": ""
                                },
                                "weight": 0
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "namespaceSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "namespaces": [
                                    ""
                                ],
                                "topologyKey": ""
                            }
                        ]
                    }
                },
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            ""
                        ],
                        "command": [
                            ""
                        ],
                        "env": [
                            {
                                "name": "",
                                "value": "",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    },
                                    "fieldRef": {
                                        "apiVersion": "",
                                        "fieldPath": ""
                                    },
                                    "resourceFieldRef": {
                                        "containerName": "",
                                        "divisor": "",
                                        "resource": ""
                                    },
                                    "secretKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "",
                                    "optional": true
                                },
                                "prefix": "",
                                "secretRef": {
                                    "name": "",
                                    "optional": true
                                }
                            }
                        ],
                        "image": "",
                        "imagePullPolicy": "",
                        "lifecycle": {
                            "postStart": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            },
                            "preStop": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            }
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "name": "",
                        "ports": [
                            {
                                "containerPort": 0,
                                "hostIP": "",
                                "hostPort": 0,
                                "name": "",
                                "protocol": ""
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "capabilities": {
                                "add": [
                                    ""
                                ],
                                "drop": [
                                    ""
                                ]
                            },
                            "privileged": true,
                            "procMount": "",
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "startupProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "stdin": true,
                        "stdinOnce": true,
                        "terminationMessagePath": "",
                        "terminationMessagePolicy": "",
                        "tty": true,
                        "volumeDevices": [
                            {
                                "devicePath": "",
                                "name": ""
                            }
                        ],
                        "volumeMounts": [
                            {
                                "mountPath": "",
                                "mountPropagation": "",
                                "name": "",
                                "readOnly": true,
                                "subPath": "",
                                "subPathExpr": ""
                            }
                        ],
                        "workingDir": ""
                    }
                ],
                "dnsConfig": {
                    "nameservers": [
                        ""
                    ],
                    "options": [
                        {
                            "name": "",
                            "value": ""
                        }
                    ],
                    "searches": [
                        ""
                    ]
                },
                "dnsPolicy": "",
                "enableServiceLinks": true,
                "ephemeralContainers": [
                    {
                        "args": [
                            ""
                        ],
                        "command": [
                            ""
                        ],
                        "env": [
                            {
                                "name": "",
                                "value": "",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    },
                                    "fieldRef": {
                                        "apiVersion": "",
                                        "fieldPath": ""
                                    },
                                    "resourceFieldRef": {
                                        "containerName": "",
                                        "divisor": "",
                                        "resource": ""
                                    },
                                    "secretKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "",
                                    "optional": true
                                },
                                "prefix": "",
                                "secretRef": {
                                    "name": "",
                                    "optional": true
                                }
                            }
                        ],
                        "image": "",
                        "imagePullPolicy": "",
                        "lifecycle": {
                            "postStart": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            },
                            "preStop": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            }
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "name": "",
                        "ports": [
                            {
                                "containerPort": 0,
                                "hostIP": "",
                                "hostPort": 0,
                                "name": "",
                                "protocol": ""
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "capabilities": {
                                "add": [
                                    ""
                                ],
                                "drop": [
                                    ""
                                ]
                            },
                            "privileged": true,
                            "procMount": "",
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "startupProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "stdin": true,
                        "stdinOnce": true,
                        "targetContainerName": "",
                        "terminationMessagePath": "",
                        "terminationMessagePolicy": "",
                        "tty": true,
                        "volumeDevices": [
                            {
                                "devicePath": "",
                                "name": ""
                            }
                        ],
                        "volumeMounts": [
                            {
                                "mountPath": "",
                                "mountPropagation": "",
                                "name": "",
                                "readOnly": true,
                                "subPath": "",
                                "subPathExpr": ""
                            }
                        ],
                        "workingDir": ""
                    }
                ],
                "hostAliases": [
                    {
                        "hostnames": [
                            ""
                        ],
                        "ip": ""
                    }
                ],
                "hostIPC": true,
                "hostNetwork": true,
                "hostPID": true,
                "hostname": "",
                "imagePullSecrets": [
                    {
                        "name": ""
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            ""
                        ],
                        "command": [
                            ""
                        ],
                        "env": [
                            {
                                "name": "",
                                "value": "",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    },
                                    "fieldRef": {
                                        "apiVersion": "",
                                        "fieldPath": ""
                                    },
                                    "resourceFieldRef": {
                                        "containerName": "",
                                        "divisor": "",
                                        "resource": ""
                                    },
                                    "secretKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "",
                                    "optional": true
                                },
                                "prefix": "",
                                "secretRef": {
                                    "name": "",
                                    "optional": true
                                }
                            }
                        ],
                        "image": "",
                        "imagePullPolicy": "",
                        "lifecycle": {
                            "postStart": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            },
                            "preStop": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            }
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "name": "",
                        "ports": [
                            {
                                "containerPort": 0,
                                "hostIP": "",
                                "hostPort": 0,
                                "name": "",
                                "protocol": ""
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "capabilities": {
                                "add": [
                                    ""
                                ],
                                "drop": [
                                    ""
                                ]
                            },
                            "privileged": true,
                            "procMount": "",
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "startupProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "stdin": true,
                        "stdinOnce": true,
                        "terminationMessagePath": "",
                        "terminationMessagePolicy": "",
                        "tty": true,
                        "volumeDevices": [
                            {
                                "devicePath": "",
                                "name": ""
                            }
                        ],
                        "volumeMounts": [
                            {
                                "mountPath": "",
                                "mountPropagation": "",
                                "name": "",
                                "readOnly": true,
                                "subPath": "",
                                "subPathExpr": ""
                            }
                        ],
                        "workingDir": ""
                    }
                ],
                "nodeName": "",
                "os": {
                    "name": ""
                },
                "preemptionPolicy": "",
                "priority": 0,
                "priorityClassName": "",
                "readinessGates": [
                    {
                        "conditionType": ""
                    }
                ],
                "restartPolicy": "",
                "runtimeClassName": "",
                "schedulerName": "",
                "securityContext": {
                    "fsGroup": 0,
                    "fsGroupChangePolicy": "",
                    "runAsGroup": 0,
                    "runAsNonRoot": true,
                    "runAsUser": 0,
                    "seLinuxOptions": {
                        "level": "",
                        "role": "",
                        "type": "",
                        "user": ""
                    },
                    "seccompProfile": {
                        "localhostProfile": "",
                        "type": ""
                    },
                    "supplementalGroups": [
                        0
                    ],
                    "sysctls": [
                        {
                            "name": "",
                            "value": ""
                        }
                    ],
                    "windowsOptions": {
                        "gmsaCredentialSpec": "",
                        "gmsaCredentialSpecName": "",
                        "hostProcess": true,
                        "runAsUserName": ""
                    }
                },
                "serviceAccount": "",
                "serviceAccountName": "",
                "setHostnameAsFQDN": true,
                "shareProcessNamespace": true,
                "subdomain": "",
                "terminationGracePeriodSeconds": 0,
                "tolerations": [
                    {
                        "effect": "",
                        "key": "",
                        "operator": "",
                        "tolerationSeconds": 0,
                        "value": ""
                    }
                ],
                "topologySpreadConstraints": [
                    {
                        "labelSelector": {
                            "matchExpressions": [
                                {
                                    "key": "",
                                    "operator": "",
                                    "values": [
                                        ""
                                    ]
                                }
                            ]
                        },
                        "maxSkew": 0,
                        "topologyKey": "",
                        "whenUnsatisfiable": ""
                    }
                ],
                "volumes": [
                    {
                        "awsElasticBlockStore": {
                            "fsType": "",
                            "partition": 0,
                            "readOnly": true,
                            "volumeID": ""
                        },
                        "azureDisk": {
                            "cachingMode": "",
                            "diskName": "",
                            "diskURI": "",
                            "fsType": "",
                            "kind": "",
                            "readOnly": true
                        },
                        "azureFile": {
                            "readOnly": true,
                            "secretName": "",
                            "shareName": ""
                        },
                        "cephfs": {
                            "monitors": [
                                ""
                            ],
                            "path": "",
                            "readOnly": true,
                            "secretFile": "",
                            "secretRef": {
                                "name": ""
                            },
                            "user": ""
                        },
                        "cinder": {
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "volumeID": ""
                        },
                        "configMap": {
                            "defaultMode": 0,
                            "items": [
                                {
                                    "key": "",
                                    "mode": 0,
                                    "path": ""
                                }
                            ],
                            "name": "",
                            "optional": true
                        },
                        "csi": {
                            "driver": "",
                            "fsType": "",
                            "nodePublishSecretRef": {
                                "name": ""
                            },
                            "readOnly": true
                        },
                        "downwardAPI": {
                            "defaultMode": 0,
                            "items": [
                                {
                                    "fieldRef": {
                                        "apiVersion": "",
                                        "fieldPath": ""
                                    },
                                    "mode": 0,
                                    "path": "",
                                    "resourceFieldRef": {
                                        "containerName": "",
                                        "divisor": "",
                                        "resource": ""
                                    }
                                }
                            ]
                        },
                        "emptyDir": {
                            "medium": "",
                            "sizeLimit": ""
                        },
                        "ephemeral": {
                            "volumeClaimTemplate": {
                                "metadata": {
                                    "clusterName": "",
                                    "creationTimestamp": "2020-12-12T%12:12:12Z",
                                    "deletionGracePeriodSeconds": 0,
                                    "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                    "finalizers": [
                                        ""
                                    ],
                                    "generateName": "",
                                    "generation": 0,
                                    "managedFields": [
                                        {
                                            "apiVersion": "",
                                            "fieldsType": "",
                                            "fieldsV1": {},
                                            "manager": "",
                                            "operation": "",
                                            "subresource": "",
                                            "time": "2020-12-12T%12:12:12Z"
                                        }
                                    ],
                                    "name": "",
                                    "namespace": "",
                                    "ownerReferences": [
                                        {
                                            "apiVersion": "",
                                            "blockOwnerDeletion": true,
                                            "controller": true,
                                            "kind": "",
                                            "name": "",
                                            "uid": ""
                                        }
                                    ],
                                    "resourceVersion": "",
                                    "selfLink": "",
                                    "uid": ""
                                },
                                "spec": {
                                    "accessModes": [
                                        ""
                                    ],
                                    "dataSource": {
                                        "apiGroup": "",
                                        "kind": "",
                                        "name": ""
                                    },
                                    "dataSourceRef": {
                                        "apiGroup": "",
                                        "kind": "",
                                        "name": ""
                                    },
                                    "resources": {},
                                    "selector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "storageClassName": "",
                                    "volumeMode": "",
                                    "volumeName": ""
                                }
                            }
                        },
                        "fc": {
                            "fsType": "",
                            "lun": 0,
                            "readOnly": true,
                            "targetWWNs": [
                                ""
                            ],
                            "wwids": [
                                ""
                            ]
                        },
                        "flexVolume": {
                            "driver": "",
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            }
                        },
                        "flocker": {
                            "datasetName": "",
                            "datasetUUID": ""
                        },
                        "gcePersistentDisk": {
                            "fsType": "",
                            "partition": 0,
                            "pdName": "",
                            "readOnly": true
                        },
                        "gitRepo": {
                            "directory": "",
                            "repository": "",
                            "revision": ""
                        },
                        "glusterfs": {
                            "endpoints": "",
                            "path": "",
                            "readOnly": true
                        },
                        "hostPath": {
                            "path": "",
                            "type": ""
                        },
                        "iscsi": {
                            "chapAuthDiscovery": true,
                            "chapAuthSession": true,
                            "fsType": "",
                            "initiatorName": "",
                            "iqn": "",
                            "iscsiInterface": "",
                            "lun": 0,
                            "portals": [
                                ""
                            ],
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "targetPortal": ""
                        },
                        "name": "",
                        "nfs": {
                            "path": "",
                            "readOnly": true,
                            "server": ""
                        },
                        "persistentVolumeClaim": {
                            "claimName": "",
                            "readOnly": true
                        },
                        "photonPersistentDisk": {
                            "fsType": "",
                            "pdID": ""
                        },
                        "portworxVolume": {
                            "fsType": "",
                            "readOnly": true,
                            "volumeID": ""
                        },
                        "projected": {
                            "defaultMode": 0,
                            "sources": [
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "",
                                                "mode": 0,
                                                "path": ""
                                            }
                                        ],
                                        "name": "",
                                        "optional": true
                                    },
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "",
                                                    "fieldPath": ""
                                                },
                                                "mode": 0,
                                                "path": "",
                                                "resourceFieldRef": {
                                                    "containerName": "",
                                                    "divisor": "",
                                                    "resource": ""
                                                }
                                            }
                                        ]
                                    },
                                    "secret": {
                                        "items": [
                                            {
                                                "key": "",
                                                "mode": 0,
                                                "path": ""
                                            }
                                        ],
                                        "name": "",
                                        "optional": true
                                    },
                                    "serviceAccountToken": {
                                        "audience": "",
                                        "expirationSeconds": 0,
                                        "path": ""
                                    }
                                }
                            ]
                        },
                        "quobyte": {
                            "group": "",
                            "readOnly": true,
                            "registry": "",
                            "tenant": "",
                            "user": "",
                            "volume": ""
                        },
                        "rbd": {
                            "fsType": "",
                            "image": "",
                            "keyring": "",
                            "monitors": [
                                ""
                            ],
                            "pool": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "user": ""
                        },
                        "scaleIO": {
                            "fsType": "",
                            "gateway": "",
                            "protectionDomain": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "sslEnabled": true,
                            "storageMode": "",
                            "storagePool": "",
                            "system": "",
                            "volumeName": ""
                        },
                        "secret": {
                            "defaultMode": 0,
                            "items": [
                                {
                                    "key": "",
                                    "mode": 0,
                                    "path": ""
                                }
                            ],
                            "optional": true,
                            "secretName": ""
                        },
                        "storageos": {
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "volumeName": "",
                            "volumeNamespace": ""
                        },
                        "vsphereVolume": {
                            "fsType": "",
                            "storagePolicyID": "",
                            "storagePolicyName": "",
                            "volumePath": ""
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": "2020-12-12T%12:12:12Z",
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "",
                        "image": "",
                        "imageID": "",
                        "lastState": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        },
                        "name": "",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        }
                    }
                ],
                "ephemeralContainerStatuses": [
                    {
                        "containerID": "",
                        "image": "",
                        "imageID": "",
                        "lastState": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        },
                        "name": "",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        }
                    }
                ],
                "hostIP": "",
                "initContainerStatuses": [
                    {
                        "containerID": "",
                        "image": "",
                        "imageID": "",
                        "lastState": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        },
                        "name": "",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        }
                    }
                ],
                "message": "",
                "nominatedNodeName": "",
                "phase": "",
                "podIP": "",
                "podIPs": [
                    {
                        "ip": ""
                    }
                ],
                "qosClass": "",
                "reason": "",
                "startTime": "2020-12-12T%12:12:12Z"
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//ephemeralcontainers",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//eviction",
    "post",
    {
        "data": {
            "apiVersion": "",
            "deleteOptions": {
                "apiVersion": "",
                "dryRun": [
                    ""
                ],
                "gracePeriodSeconds": 0,
                "kind": "",
                "orphanDependents": true,
                "preconditions": {
                    "resourceVersion": "",
                    "uid": ""
                },
                "propagationPolicy": ""
            },
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//exec",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "command": "",
            "container": "",
            "stderr": true,
            "stdin": true,
            "stdout": true,
            "tty": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//exec",
    "post",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "command": "",
            "container": "",
            "stderr": true,
            "stdin": true,
            "stdout": true,
            "tty": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//log",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "container": "",
            "follow": true,
            "insecureSkipTLSVerifyBackend": true,
            "limitBytes": 0,
            "pretty": "",
            "previous": true,
            "sinceSeconds": 0,
            "tailLines": 0,
            "timestamps": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//portforward",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "ports": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//portforward",
    "post",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "ports": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//proxy",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//proxy",
    "put",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//proxy",
    "post",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//proxy",
    "delete",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//proxy",
    "options",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//proxy",
    "head",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//proxy",
    "patch",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//proxy/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//proxy/",
    "put",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//proxy/",
    "post",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//proxy/",
    "delete",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//proxy/",
    "options",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//proxy/",
    "head",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//proxy/",
    "patch",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "activeDeadlineSeconds": 0,
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ],
                                    "matchFields": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "weight": 0
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ],
                                    "matchFields": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaceSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaces": [
                                        ""
                                    ],
                                    "topologyKey": ""
                                },
                                "weight": 0
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "namespaceSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "namespaces": [
                                    ""
                                ],
                                "topologyKey": ""
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaceSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaces": [
                                        ""
                                    ],
                                    "topologyKey": ""
                                },
                                "weight": 0
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "namespaceSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "namespaces": [
                                    ""
                                ],
                                "topologyKey": ""
                            }
                        ]
                    }
                },
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            ""
                        ],
                        "command": [
                            ""
                        ],
                        "env": [
                            {
                                "name": "",
                                "value": "",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    },
                                    "fieldRef": {
                                        "apiVersion": "",
                                        "fieldPath": ""
                                    },
                                    "resourceFieldRef": {
                                        "containerName": "",
                                        "divisor": "",
                                        "resource": ""
                                    },
                                    "secretKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "",
                                    "optional": true
                                },
                                "prefix": "",
                                "secretRef": {
                                    "name": "",
                                    "optional": true
                                }
                            }
                        ],
                        "image": "",
                        "imagePullPolicy": "",
                        "lifecycle": {
                            "postStart": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            },
                            "preStop": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            }
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "name": "",
                        "ports": [
                            {
                                "containerPort": 0,
                                "hostIP": "",
                                "hostPort": 0,
                                "name": "",
                                "protocol": ""
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "capabilities": {
                                "add": [
                                    ""
                                ],
                                "drop": [
                                    ""
                                ]
                            },
                            "privileged": true,
                            "procMount": "",
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "startupProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "stdin": true,
                        "stdinOnce": true,
                        "terminationMessagePath": "",
                        "terminationMessagePolicy": "",
                        "tty": true,
                        "volumeDevices": [
                            {
                                "devicePath": "",
                                "name": ""
                            }
                        ],
                        "volumeMounts": [
                            {
                                "mountPath": "",
                                "mountPropagation": "",
                                "name": "",
                                "readOnly": true,
                                "subPath": "",
                                "subPathExpr": ""
                            }
                        ],
                        "workingDir": ""
                    }
                ],
                "dnsConfig": {
                    "nameservers": [
                        ""
                    ],
                    "options": [
                        {
                            "name": "",
                            "value": ""
                        }
                    ],
                    "searches": [
                        ""
                    ]
                },
                "dnsPolicy": "",
                "enableServiceLinks": true,
                "ephemeralContainers": [
                    {
                        "args": [
                            ""
                        ],
                        "command": [
                            ""
                        ],
                        "env": [
                            {
                                "name": "",
                                "value": "",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    },
                                    "fieldRef": {
                                        "apiVersion": "",
                                        "fieldPath": ""
                                    },
                                    "resourceFieldRef": {
                                        "containerName": "",
                                        "divisor": "",
                                        "resource": ""
                                    },
                                    "secretKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "",
                                    "optional": true
                                },
                                "prefix": "",
                                "secretRef": {
                                    "name": "",
                                    "optional": true
                                }
                            }
                        ],
                        "image": "",
                        "imagePullPolicy": "",
                        "lifecycle": {
                            "postStart": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            },
                            "preStop": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            }
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "name": "",
                        "ports": [
                            {
                                "containerPort": 0,
                                "hostIP": "",
                                "hostPort": 0,
                                "name": "",
                                "protocol": ""
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "capabilities": {
                                "add": [
                                    ""
                                ],
                                "drop": [
                                    ""
                                ]
                            },
                            "privileged": true,
                            "procMount": "",
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "startupProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "stdin": true,
                        "stdinOnce": true,
                        "targetContainerName": "",
                        "terminationMessagePath": "",
                        "terminationMessagePolicy": "",
                        "tty": true,
                        "volumeDevices": [
                            {
                                "devicePath": "",
                                "name": ""
                            }
                        ],
                        "volumeMounts": [
                            {
                                "mountPath": "",
                                "mountPropagation": "",
                                "name": "",
                                "readOnly": true,
                                "subPath": "",
                                "subPathExpr": ""
                            }
                        ],
                        "workingDir": ""
                    }
                ],
                "hostAliases": [
                    {
                        "hostnames": [
                            ""
                        ],
                        "ip": ""
                    }
                ],
                "hostIPC": true,
                "hostNetwork": true,
                "hostPID": true,
                "hostname": "",
                "imagePullSecrets": [
                    {
                        "name": ""
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            ""
                        ],
                        "command": [
                            ""
                        ],
                        "env": [
                            {
                                "name": "",
                                "value": "",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    },
                                    "fieldRef": {
                                        "apiVersion": "",
                                        "fieldPath": ""
                                    },
                                    "resourceFieldRef": {
                                        "containerName": "",
                                        "divisor": "",
                                        "resource": ""
                                    },
                                    "secretKeyRef": {
                                        "key": "",
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "",
                                    "optional": true
                                },
                                "prefix": "",
                                "secretRef": {
                                    "name": "",
                                    "optional": true
                                }
                            }
                        ],
                        "image": "",
                        "imagePullPolicy": "",
                        "lifecycle": {
                            "postStart": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            },
                            "preStop": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                }
                            }
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "name": "",
                        "ports": [
                            {
                                "containerPort": 0,
                                "hostIP": "",
                                "hostPort": 0,
                                "name": "",
                                "protocol": ""
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "capabilities": {
                                "add": [
                                    ""
                                ],
                                "drop": [
                                    ""
                                ]
                            },
                            "privileged": true,
                            "procMount": "",
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "startupProbe": {
                            "exec": {
                                "command": [
                                    ""
                                ]
                            },
                            "failureThreshold": 0,
                            "grpc": {
                                "port": 0,
                                "service": ""
                            },
                            "httpGet": {
                                "host": "",
                                "httpHeaders": [
                                    {
                                        "name": "",
                                        "value": ""
                                    }
                                ],
                                "path": "",
                                "port": "",
                                "scheme": ""
                            },
                            "initialDelaySeconds": 0,
                            "periodSeconds": 0,
                            "successThreshold": 0,
                            "tcpSocket": {
                                "host": "",
                                "port": ""
                            },
                            "terminationGracePeriodSeconds": 0,
                            "timeoutSeconds": 0
                        },
                        "stdin": true,
                        "stdinOnce": true,
                        "terminationMessagePath": "",
                        "terminationMessagePolicy": "",
                        "tty": true,
                        "volumeDevices": [
                            {
                                "devicePath": "",
                                "name": ""
                            }
                        ],
                        "volumeMounts": [
                            {
                                "mountPath": "",
                                "mountPropagation": "",
                                "name": "",
                                "readOnly": true,
                                "subPath": "",
                                "subPathExpr": ""
                            }
                        ],
                        "workingDir": ""
                    }
                ],
                "nodeName": "",
                "os": {
                    "name": ""
                },
                "preemptionPolicy": "",
                "priority": 0,
                "priorityClassName": "",
                "readinessGates": [
                    {
                        "conditionType": ""
                    }
                ],
                "restartPolicy": "",
                "runtimeClassName": "",
                "schedulerName": "",
                "securityContext": {
                    "fsGroup": 0,
                    "fsGroupChangePolicy": "",
                    "runAsGroup": 0,
                    "runAsNonRoot": true,
                    "runAsUser": 0,
                    "seLinuxOptions": {
                        "level": "",
                        "role": "",
                        "type": "",
                        "user": ""
                    },
                    "seccompProfile": {
                        "localhostProfile": "",
                        "type": ""
                    },
                    "supplementalGroups": [
                        0
                    ],
                    "sysctls": [
                        {
                            "name": "",
                            "value": ""
                        }
                    ],
                    "windowsOptions": {
                        "gmsaCredentialSpec": "",
                        "gmsaCredentialSpecName": "",
                        "hostProcess": true,
                        "runAsUserName": ""
                    }
                },
                "serviceAccount": "",
                "serviceAccountName": "",
                "setHostnameAsFQDN": true,
                "shareProcessNamespace": true,
                "subdomain": "",
                "terminationGracePeriodSeconds": 0,
                "tolerations": [
                    {
                        "effect": "",
                        "key": "",
                        "operator": "",
                        "tolerationSeconds": 0,
                        "value": ""
                    }
                ],
                "topologySpreadConstraints": [
                    {
                        "labelSelector": {
                            "matchExpressions": [
                                {
                                    "key": "",
                                    "operator": "",
                                    "values": [
                                        ""
                                    ]
                                }
                            ]
                        },
                        "maxSkew": 0,
                        "topologyKey": "",
                        "whenUnsatisfiable": ""
                    }
                ],
                "volumes": [
                    {
                        "awsElasticBlockStore": {
                            "fsType": "",
                            "partition": 0,
                            "readOnly": true,
                            "volumeID": ""
                        },
                        "azureDisk": {
                            "cachingMode": "",
                            "diskName": "",
                            "diskURI": "",
                            "fsType": "",
                            "kind": "",
                            "readOnly": true
                        },
                        "azureFile": {
                            "readOnly": true,
                            "secretName": "",
                            "shareName": ""
                        },
                        "cephfs": {
                            "monitors": [
                                ""
                            ],
                            "path": "",
                            "readOnly": true,
                            "secretFile": "",
                            "secretRef": {
                                "name": ""
                            },
                            "user": ""
                        },
                        "cinder": {
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "volumeID": ""
                        },
                        "configMap": {
                            "defaultMode": 0,
                            "items": [
                                {
                                    "key": "",
                                    "mode": 0,
                                    "path": ""
                                }
                            ],
                            "name": "",
                            "optional": true
                        },
                        "csi": {
                            "driver": "",
                            "fsType": "",
                            "nodePublishSecretRef": {
                                "name": ""
                            },
                            "readOnly": true
                        },
                        "downwardAPI": {
                            "defaultMode": 0,
                            "items": [
                                {
                                    "fieldRef": {
                                        "apiVersion": "",
                                        "fieldPath": ""
                                    },
                                    "mode": 0,
                                    "path": "",
                                    "resourceFieldRef": {
                                        "containerName": "",
                                        "divisor": "",
                                        "resource": ""
                                    }
                                }
                            ]
                        },
                        "emptyDir": {
                            "medium": "",
                            "sizeLimit": ""
                        },
                        "ephemeral": {
                            "volumeClaimTemplate": {
                                "metadata": {
                                    "clusterName": "",
                                    "creationTimestamp": "2020-12-12T%12:12:12Z",
                                    "deletionGracePeriodSeconds": 0,
                                    "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                    "finalizers": [
                                        ""
                                    ],
                                    "generateName": "",
                                    "generation": 0,
                                    "managedFields": [
                                        {
                                            "apiVersion": "",
                                            "fieldsType": "",
                                            "fieldsV1": {},
                                            "manager": "",
                                            "operation": "",
                                            "subresource": "",
                                            "time": "2020-12-12T%12:12:12Z"
                                        }
                                    ],
                                    "name": "",
                                    "namespace": "",
                                    "ownerReferences": [
                                        {
                                            "apiVersion": "",
                                            "blockOwnerDeletion": true,
                                            "controller": true,
                                            "kind": "",
                                            "name": "",
                                            "uid": ""
                                        }
                                    ],
                                    "resourceVersion": "",
                                    "selfLink": "",
                                    "uid": ""
                                },
                                "spec": {
                                    "accessModes": [
                                        ""
                                    ],
                                    "dataSource": {
                                        "apiGroup": "",
                                        "kind": "",
                                        "name": ""
                                    },
                                    "dataSourceRef": {
                                        "apiGroup": "",
                                        "kind": "",
                                        "name": ""
                                    },
                                    "resources": {},
                                    "selector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "storageClassName": "",
                                    "volumeMode": "",
                                    "volumeName": ""
                                }
                            }
                        },
                        "fc": {
                            "fsType": "",
                            "lun": 0,
                            "readOnly": true,
                            "targetWWNs": [
                                ""
                            ],
                            "wwids": [
                                ""
                            ]
                        },
                        "flexVolume": {
                            "driver": "",
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            }
                        },
                        "flocker": {
                            "datasetName": "",
                            "datasetUUID": ""
                        },
                        "gcePersistentDisk": {
                            "fsType": "",
                            "partition": 0,
                            "pdName": "",
                            "readOnly": true
                        },
                        "gitRepo": {
                            "directory": "",
                            "repository": "",
                            "revision": ""
                        },
                        "glusterfs": {
                            "endpoints": "",
                            "path": "",
                            "readOnly": true
                        },
                        "hostPath": {
                            "path": "",
                            "type": ""
                        },
                        "iscsi": {
                            "chapAuthDiscovery": true,
                            "chapAuthSession": true,
                            "fsType": "",
                            "initiatorName": "",
                            "iqn": "",
                            "iscsiInterface": "",
                            "lun": 0,
                            "portals": [
                                ""
                            ],
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "targetPortal": ""
                        },
                        "name": "",
                        "nfs": {
                            "path": "",
                            "readOnly": true,
                            "server": ""
                        },
                        "persistentVolumeClaim": {
                            "claimName": "",
                            "readOnly": true
                        },
                        "photonPersistentDisk": {
                            "fsType": "",
                            "pdID": ""
                        },
                        "portworxVolume": {
                            "fsType": "",
                            "readOnly": true,
                            "volumeID": ""
                        },
                        "projected": {
                            "defaultMode": 0,
                            "sources": [
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "",
                                                "mode": 0,
                                                "path": ""
                                            }
                                        ],
                                        "name": "",
                                        "optional": true
                                    },
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "",
                                                    "fieldPath": ""
                                                },
                                                "mode": 0,
                                                "path": "",
                                                "resourceFieldRef": {
                                                    "containerName": "",
                                                    "divisor": "",
                                                    "resource": ""
                                                }
                                            }
                                        ]
                                    },
                                    "secret": {
                                        "items": [
                                            {
                                                "key": "",
                                                "mode": 0,
                                                "path": ""
                                            }
                                        ],
                                        "name": "",
                                        "optional": true
                                    },
                                    "serviceAccountToken": {
                                        "audience": "",
                                        "expirationSeconds": 0,
                                        "path": ""
                                    }
                                }
                            ]
                        },
                        "quobyte": {
                            "group": "",
                            "readOnly": true,
                            "registry": "",
                            "tenant": "",
                            "user": "",
                            "volume": ""
                        },
                        "rbd": {
                            "fsType": "",
                            "image": "",
                            "keyring": "",
                            "monitors": [
                                ""
                            ],
                            "pool": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "user": ""
                        },
                        "scaleIO": {
                            "fsType": "",
                            "gateway": "",
                            "protectionDomain": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "sslEnabled": true,
                            "storageMode": "",
                            "storagePool": "",
                            "system": "",
                            "volumeName": ""
                        },
                        "secret": {
                            "defaultMode": 0,
                            "items": [
                                {
                                    "key": "",
                                    "mode": 0,
                                    "path": ""
                                }
                            ],
                            "optional": true,
                            "secretName": ""
                        },
                        "storageos": {
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": ""
                            },
                            "volumeName": "",
                            "volumeNamespace": ""
                        },
                        "vsphereVolume": {
                            "fsType": "",
                            "storagePolicyID": "",
                            "storagePolicyName": "",
                            "volumePath": ""
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": "2020-12-12T%12:12:12Z",
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "",
                        "image": "",
                        "imageID": "",
                        "lastState": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        },
                        "name": "",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        }
                    }
                ],
                "ephemeralContainerStatuses": [
                    {
                        "containerID": "",
                        "image": "",
                        "imageID": "",
                        "lastState": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        },
                        "name": "",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        }
                    }
                ],
                "hostIP": "",
                "initContainerStatuses": [
                    {
                        "containerID": "",
                        "image": "",
                        "imageID": "",
                        "lastState": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        },
                        "name": "",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "terminated": {
                                "containerID": "",
                                "exitCode": 0,
                                "finishedAt": "2020-12-12T%12:12:12Z",
                                "message": "",
                                "reason": "",
                                "signal": 0,
                                "startedAt": "2020-12-12T%12:12:12Z"
                            },
                            "waiting": {
                                "message": "",
                                "reason": ""
                            }
                        }
                    }
                ],
                "message": "",
                "nominatedNodeName": "",
                "phase": "",
                "podIP": "",
                "podIPs": [
                    {
                        "ip": ""
                    }
                ],
                "qosClass": "",
                "reason": "",
                "startTime": "2020-12-12T%12:12:12Z"
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//pods//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//podtemplates",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//podtemplates",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "template": {
                "metadata": {
                    "clusterName": "",
                    "creationTimestamp": "2020-12-12T%12:12:12Z",
                    "deletionGracePeriodSeconds": 0,
                    "deletionTimestamp": "2020-12-12T%12:12:12Z",
                    "finalizers": [
                        ""
                    ],
                    "generateName": "",
                    "generation": 0,
                    "managedFields": [
                        {
                            "apiVersion": "",
                            "fieldsType": "",
                            "fieldsV1": {},
                            "manager": "",
                            "operation": "",
                            "subresource": "",
                            "time": "2020-12-12T%12:12:12Z"
                        }
                    ],
                    "name": "",
                    "namespace": "",
                    "ownerReferences": [
                        {
                            "apiVersion": "",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "",
                            "name": "",
                            "uid": ""
                        }
                    ],
                    "resourceVersion": "",
                    "selfLink": "",
                    "uid": ""
                },
                "spec": {
                    "activeDeadlineSeconds": 0,
                    "affinity": {
                        "nodeAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": [
                                {
                                    "preference": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ],
                                        "matchFields": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "weight": 0
                                }
                            ],
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                    {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ],
                                        "matchFields": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "podAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": [
                                {
                                    "podAffinityTerm": {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    },
                                    "weight": 0
                                }
                            ],
                            "requiredDuringSchedulingIgnoredDuringExecution": [
                                {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaceSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaces": [
                                        ""
                                    ],
                                    "topologyKey": ""
                                }
                            ]
                        },
                        "podAntiAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": [
                                {
                                    "podAffinityTerm": {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    },
                                    "weight": 0
                                }
                            ],
                            "requiredDuringSchedulingIgnoredDuringExecution": [
                                {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaceSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaces": [
                                        ""
                                    ],
                                    "topologyKey": ""
                                }
                            ]
                        }
                    },
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "args": [
                                ""
                            ],
                            "command": [
                                ""
                            ],
                            "env": [
                                {
                                    "name": "",
                                    "value": "",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "",
                                            "name": "",
                                            "optional": true
                                        },
                                        "fieldRef": {
                                            "apiVersion": "",
                                            "fieldPath": ""
                                        },
                                        "resourceFieldRef": {
                                            "containerName": "",
                                            "divisor": "",
                                            "resource": ""
                                        },
                                        "secretKeyRef": {
                                            "key": "",
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                }
                            ],
                            "envFrom": [
                                {
                                    "configMapRef": {
                                        "name": "",
                                        "optional": true
                                    },
                                    "prefix": "",
                                    "secretRef": {
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            ],
                            "image": "",
                            "imagePullPolicy": "",
                            "lifecycle": {
                                "postStart": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    }
                                },
                                "preStop": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    }
                                }
                            },
                            "livenessProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "name": "",
                            "ports": [
                                {
                                    "containerPort": 0,
                                    "hostIP": "",
                                    "hostPort": 0,
                                    "name": "",
                                    "protocol": ""
                                }
                            ],
                            "readinessProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "resources": {},
                            "securityContext": {
                                "allowPrivilegeEscalation": true,
                                "capabilities": {
                                    "add": [
                                        ""
                                    ],
                                    "drop": [
                                        ""
                                    ]
                                },
                                "privileged": true,
                                "procMount": "",
                                "readOnlyRootFilesystem": true,
                                "runAsGroup": 0,
                                "runAsNonRoot": true,
                                "runAsUser": 0,
                                "seLinuxOptions": {
                                    "level": "",
                                    "role": "",
                                    "type": "",
                                    "user": ""
                                },
                                "seccompProfile": {
                                    "localhostProfile": "",
                                    "type": ""
                                },
                                "windowsOptions": {
                                    "gmsaCredentialSpec": "",
                                    "gmsaCredentialSpecName": "",
                                    "hostProcess": true,
                                    "runAsUserName": ""
                                }
                            },
                            "startupProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "stdin": true,
                            "stdinOnce": true,
                            "terminationMessagePath": "",
                            "terminationMessagePolicy": "",
                            "tty": true,
                            "volumeDevices": [
                                {
                                    "devicePath": "",
                                    "name": ""
                                }
                            ],
                            "volumeMounts": [
                                {
                                    "mountPath": "",
                                    "mountPropagation": "",
                                    "name": "",
                                    "readOnly": true,
                                    "subPath": "",
                                    "subPathExpr": ""
                                }
                            ],
                            "workingDir": ""
                        }
                    ],
                    "dnsConfig": {
                        "nameservers": [
                            ""
                        ],
                        "options": [
                            {
                                "name": "",
                                "value": ""
                            }
                        ],
                        "searches": [
                            ""
                        ]
                    },
                    "dnsPolicy": "",
                    "enableServiceLinks": true,
                    "ephemeralContainers": [
                        {
                            "args": [
                                ""
                            ],
                            "command": [
                                ""
                            ],
                            "env": [
                                {
                                    "name": "",
                                    "value": "",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "",
                                            "name": "",
                                            "optional": true
                                        },
                                        "fieldRef": {
                                            "apiVersion": "",
                                            "fieldPath": ""
                                        },
                                        "resourceFieldRef": {
                                            "containerName": "",
                                            "divisor": "",
                                            "resource": ""
                                        },
                                        "secretKeyRef": {
                                            "key": "",
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                }
                            ],
                            "envFrom": [
                                {
                                    "configMapRef": {
                                        "name": "",
                                        "optional": true
                                    },
                                    "prefix": "",
                                    "secretRef": {
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            ],
                            "image": "",
                            "imagePullPolicy": "",
                            "lifecycle": {
                                "postStart": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    }
                                },
                                "preStop": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    }
                                }
                            },
                            "livenessProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "name": "",
                            "ports": [
                                {
                                    "containerPort": 0,
                                    "hostIP": "",
                                    "hostPort": 0,
                                    "name": "",
                                    "protocol": ""
                                }
                            ],
                            "readinessProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "resources": {},
                            "securityContext": {
                                "allowPrivilegeEscalation": true,
                                "capabilities": {
                                    "add": [
                                        ""
                                    ],
                                    "drop": [
                                        ""
                                    ]
                                },
                                "privileged": true,
                                "procMount": "",
                                "readOnlyRootFilesystem": true,
                                "runAsGroup": 0,
                                "runAsNonRoot": true,
                                "runAsUser": 0,
                                "seLinuxOptions": {
                                    "level": "",
                                    "role": "",
                                    "type": "",
                                    "user": ""
                                },
                                "seccompProfile": {
                                    "localhostProfile": "",
                                    "type": ""
                                },
                                "windowsOptions": {
                                    "gmsaCredentialSpec": "",
                                    "gmsaCredentialSpecName": "",
                                    "hostProcess": true,
                                    "runAsUserName": ""
                                }
                            },
                            "startupProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "stdin": true,
                            "stdinOnce": true,
                            "targetContainerName": "",
                            "terminationMessagePath": "",
                            "terminationMessagePolicy": "",
                            "tty": true,
                            "volumeDevices": [
                                {
                                    "devicePath": "",
                                    "name": ""
                                }
                            ],
                            "volumeMounts": [
                                {
                                    "mountPath": "",
                                    "mountPropagation": "",
                                    "name": "",
                                    "readOnly": true,
                                    "subPath": "",
                                    "subPathExpr": ""
                                }
                            ],
                            "workingDir": ""
                        }
                    ],
                    "hostAliases": [
                        {
                            "hostnames": [
                                ""
                            ],
                            "ip": ""
                        }
                    ],
                    "hostIPC": true,
                    "hostNetwork": true,
                    "hostPID": true,
                    "hostname": "",
                    "imagePullSecrets": [
                        {
                            "name": ""
                        }
                    ],
                    "initContainers": [
                        {
                            "args": [
                                ""
                            ],
                            "command": [
                                ""
                            ],
                            "env": [
                                {
                                    "name": "",
                                    "value": "",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "",
                                            "name": "",
                                            "optional": true
                                        },
                                        "fieldRef": {
                                            "apiVersion": "",
                                            "fieldPath": ""
                                        },
                                        "resourceFieldRef": {
                                            "containerName": "",
                                            "divisor": "",
                                            "resource": ""
                                        },
                                        "secretKeyRef": {
                                            "key": "",
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                }
                            ],
                            "envFrom": [
                                {
                                    "configMapRef": {
                                        "name": "",
                                        "optional": true
                                    },
                                    "prefix": "",
                                    "secretRef": {
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            ],
                            "image": "",
                            "imagePullPolicy": "",
                            "lifecycle": {
                                "postStart": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    }
                                },
                                "preStop": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    }
                                }
                            },
                            "livenessProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "name": "",
                            "ports": [
                                {
                                    "containerPort": 0,
                                    "hostIP": "",
                                    "hostPort": 0,
                                    "name": "",
                                    "protocol": ""
                                }
                            ],
                            "readinessProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "resources": {},
                            "securityContext": {
                                "allowPrivilegeEscalation": true,
                                "capabilities": {
                                    "add": [
                                        ""
                                    ],
                                    "drop": [
                                        ""
                                    ]
                                },
                                "privileged": true,
                                "procMount": "",
                                "readOnlyRootFilesystem": true,
                                "runAsGroup": 0,
                                "runAsNonRoot": true,
                                "runAsUser": 0,
                                "seLinuxOptions": {
                                    "level": "",
                                    "role": "",
                                    "type": "",
                                    "user": ""
                                },
                                "seccompProfile": {
                                    "localhostProfile": "",
                                    "type": ""
                                },
                                "windowsOptions": {
                                    "gmsaCredentialSpec": "",
                                    "gmsaCredentialSpecName": "",
                                    "hostProcess": true,
                                    "runAsUserName": ""
                                }
                            },
                            "startupProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "stdin": true,
                            "stdinOnce": true,
                            "terminationMessagePath": "",
                            "terminationMessagePolicy": "",
                            "tty": true,
                            "volumeDevices": [
                                {
                                    "devicePath": "",
                                    "name": ""
                                }
                            ],
                            "volumeMounts": [
                                {
                                    "mountPath": "",
                                    "mountPropagation": "",
                                    "name": "",
                                    "readOnly": true,
                                    "subPath": "",
                                    "subPathExpr": ""
                                }
                            ],
                            "workingDir": ""
                        }
                    ],
                    "nodeName": "",
                    "os": {
                        "name": ""
                    },
                    "preemptionPolicy": "",
                    "priority": 0,
                    "priorityClassName": "",
                    "readinessGates": [
                        {
                            "conditionType": ""
                        }
                    ],
                    "restartPolicy": "",
                    "runtimeClassName": "",
                    "schedulerName": "",
                    "securityContext": {
                        "fsGroup": 0,
                        "fsGroupChangePolicy": "",
                        "runAsGroup": 0,
                        "runAsNonRoot": true,
                        "runAsUser": 0,
                        "seLinuxOptions": {
                            "level": "",
                            "role": "",
                            "type": "",
                            "user": ""
                        },
                        "seccompProfile": {
                            "localhostProfile": "",
                            "type": ""
                        },
                        "supplementalGroups": [
                            0
                        ],
                        "sysctls": [
                            {
                                "name": "",
                                "value": ""
                            }
                        ],
                        "windowsOptions": {
                            "gmsaCredentialSpec": "",
                            "gmsaCredentialSpecName": "",
                            "hostProcess": true,
                            "runAsUserName": ""
                        }
                    },
                    "serviceAccount": "",
                    "serviceAccountName": "",
                    "setHostnameAsFQDN": true,
                    "shareProcessNamespace": true,
                    "subdomain": "",
                    "terminationGracePeriodSeconds": 0,
                    "tolerations": [
                        {
                            "effect": "",
                            "key": "",
                            "operator": "",
                            "tolerationSeconds": 0,
                            "value": ""
                        }
                    ],
                    "topologySpreadConstraints": [
                        {
                            "labelSelector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "maxSkew": 0,
                            "topologyKey": "",
                            "whenUnsatisfiable": ""
                        }
                    ],
                    "volumes": [
                        {
                            "awsElasticBlockStore": {
                                "fsType": "",
                                "partition": 0,
                                "readOnly": true,
                                "volumeID": ""
                            },
                            "azureDisk": {
                                "cachingMode": "",
                                "diskName": "",
                                "diskURI": "",
                                "fsType": "",
                                "kind": "",
                                "readOnly": true
                            },
                            "azureFile": {
                                "readOnly": true,
                                "secretName": "",
                                "shareName": ""
                            },
                            "cephfs": {
                                "monitors": [
                                    ""
                                ],
                                "path": "",
                                "readOnly": true,
                                "secretFile": "",
                                "secretRef": {
                                    "name": ""
                                },
                                "user": ""
                            },
                            "cinder": {
                                "fsType": "",
                                "readOnly": true,
                                "secretRef": {
                                    "name": ""
                                },
                                "volumeID": ""
                            },
                            "configMap": {
                                "defaultMode": 0,
                                "items": [
                                    {
                                        "key": "",
                                        "mode": 0,
                                        "path": ""
                                    }
                                ],
                                "name": "",
                                "optional": true
                            },
                            "csi": {
                                "driver": "",
                                "fsType": "",
                                "nodePublishSecretRef": {
                                    "name": ""
                                },
                                "readOnly": true
                            },
                            "downwardAPI": {
                                "defaultMode": 0,
                                "items": [
                                    {
                                        "fieldRef": {
                                            "apiVersion": "",
                                            "fieldPath": ""
                                        },
                                        "mode": 0,
                                        "path": "",
                                        "resourceFieldRef": {
                                            "containerName": "",
                                            "divisor": "",
                                            "resource": ""
                                        }
                                    }
                                ]
                            },
                            "emptyDir": {
                                "medium": "",
                                "sizeLimit": ""
                            },
                            "ephemeral": {
                                "volumeClaimTemplate": {
                                    "metadata": {
                                        "clusterName": "",
                                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                                        "deletionGracePeriodSeconds": 0,
                                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                        "finalizers": [
                                            ""
                                        ],
                                        "generateName": "",
                                        "generation": 0,
                                        "managedFields": [
                                            {
                                                "apiVersion": "",
                                                "fieldsType": "",
                                                "fieldsV1": {},
                                                "manager": "",
                                                "operation": "",
                                                "subresource": "",
                                                "time": "2020-12-12T%12:12:12Z"
                                            }
                                        ],
                                        "name": "",
                                        "namespace": "",
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "",
                                                "blockOwnerDeletion": true,
                                                "controller": true,
                                                "kind": "",
                                                "name": "",
                                                "uid": ""
                                            }
                                        ],
                                        "resourceVersion": "",
                                        "selfLink": "",
                                        "uid": ""
                                    },
                                    "spec": {
                                        "accessModes": [
                                            ""
                                        ],
                                        "dataSource": {
                                            "apiGroup": "",
                                            "kind": "",
                                            "name": ""
                                        },
                                        "dataSourceRef": {
                                            "apiGroup": "",
                                            "kind": "",
                                            "name": ""
                                        },
                                        "resources": {},
                                        "selector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "storageClassName": "",
                                        "volumeMode": "",
                                        "volumeName": ""
                                    }
                                }
                            },
                            "fc": {
                                "fsType": "",
                                "lun": 0,
                                "readOnly": true,
                                "targetWWNs": [
                                    ""
                                ],
                                "wwids": [
                                    ""
                                ]
                            },
                            "flexVolume": {
                                "driver": "",
                                "fsType": "",
                                "readOnly": true,
                                "secretRef": {
                                    "name": ""
                                }
                            },
                            "flocker": {
                                "datasetName": "",
                                "datasetUUID": ""
                            },
                            "gcePersistentDisk": {
                                "fsType": "",
                                "partition": 0,
                                "pdName": "",
                                "readOnly": true
                            },
                            "gitRepo": {
                                "directory": "",
                                "repository": "",
                                "revision": ""
                            },
                            "glusterfs": {
                                "endpoints": "",
                                "path": "",
                                "readOnly": true
                            },
                            "hostPath": {
                                "path": "",
                                "type": ""
                            },
                            "iscsi": {
                                "chapAuthDiscovery": true,
                                "chapAuthSession": true,
                                "fsType": "",
                                "initiatorName": "",
                                "iqn": "",
                                "iscsiInterface": "",
                                "lun": 0,
                                "portals": [
                                    ""
                                ],
                                "readOnly": true,
                                "secretRef": {
                                    "name": ""
                                },
                                "targetPortal": ""
                            },
                            "name": "",
                            "nfs": {
                                "path": "",
                                "readOnly": true,
                                "server": ""
                            },
                            "persistentVolumeClaim": {
                                "claimName": "",
                                "readOnly": true
                            },
                            "photonPersistentDisk": {
                                "fsType": "",
                                "pdID": ""
                            },
                            "portworxVolume": {
                                "fsType": "",
                                "readOnly": true,
                                "volumeID": ""
                            },
                            "projected": {
                                "defaultMode": 0,
                                "sources": [
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "",
                                                    "mode": 0,
                                                    "path": ""
                                                }
                                            ],
                                            "name": "",
                                            "optional": true
                                        },
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "mode": 0,
                                                    "path": "",
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    }
                                                }
                                            ]
                                        },
                                        "secret": {
                                            "items": [
                                                {
                                                    "key": "",
                                                    "mode": 0,
                                                    "path": ""
                                                }
                                            ],
                                            "name": "",
                                            "optional": true
                                        },
                                        "serviceAccountToken": {
                                            "audience": "",
                                            "expirationSeconds": 0,
                                            "path": ""
                                        }
                                    }
                                ]
                            },
                            "quobyte": {
                                "group": "",
                                "readOnly": true,
                                "registry": "",
                                "tenant": "",
                                "user": "",
                                "volume": ""
                            },
                            "rbd": {
                                "fsType": "",
                                "image": "",
                                "keyring": "",
                                "monitors": [
                                    ""
                                ],
                                "pool": "",
                                "readOnly": true,
                                "secretRef": {
                                    "name": ""
                                },
                                "user": ""
                            },
                            "scaleIO": {
                                "fsType": "",
                                "gateway": "",
                                "protectionDomain": "",
                                "readOnly": true,
                                "secretRef": {
                                    "name": ""
                                },
                                "sslEnabled": true,
                                "storageMode": "",
                                "storagePool": "",
                                "system": "",
                                "volumeName": ""
                            },
                            "secret": {
                                "defaultMode": 0,
                                "items": [
                                    {
                                        "key": "",
                                        "mode": 0,
                                        "path": ""
                                    }
                                ],
                                "optional": true,
                                "secretName": ""
                            },
                            "storageos": {
                                "fsType": "",
                                "readOnly": true,
                                "secretRef": {
                                    "name": ""
                                },
                                "volumeName": "",
                                "volumeNamespace": ""
                            },
                            "vsphereVolume": {
                                "fsType": "",
                                "storagePolicyID": "",
                                "storagePolicyName": "",
                                "volumePath": ""
                            }
                        }
                    ]
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//podtemplates",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//podtemplates/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//podtemplates/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "template": {
                "metadata": {
                    "clusterName": "",
                    "creationTimestamp": "2020-12-12T%12:12:12Z",
                    "deletionGracePeriodSeconds": 0,
                    "deletionTimestamp": "2020-12-12T%12:12:12Z",
                    "finalizers": [
                        ""
                    ],
                    "generateName": "",
                    "generation": 0,
                    "managedFields": [
                        {
                            "apiVersion": "",
                            "fieldsType": "",
                            "fieldsV1": {},
                            "manager": "",
                            "operation": "",
                            "subresource": "",
                            "time": "2020-12-12T%12:12:12Z"
                        }
                    ],
                    "name": "",
                    "namespace": "",
                    "ownerReferences": [
                        {
                            "apiVersion": "",
                            "blockOwnerDeletion": true,
                            "controller": true,
                            "kind": "",
                            "name": "",
                            "uid": ""
                        }
                    ],
                    "resourceVersion": "",
                    "selfLink": "",
                    "uid": ""
                },
                "spec": {
                    "activeDeadlineSeconds": 0,
                    "affinity": {
                        "nodeAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": [
                                {
                                    "preference": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ],
                                        "matchFields": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "weight": 0
                                }
                            ],
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                    {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ],
                                        "matchFields": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "podAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": [
                                {
                                    "podAffinityTerm": {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    },
                                    "weight": 0
                                }
                            ],
                            "requiredDuringSchedulingIgnoredDuringExecution": [
                                {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaceSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaces": [
                                        ""
                                    ],
                                    "topologyKey": ""
                                }
                            ]
                        },
                        "podAntiAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": [
                                {
                                    "podAffinityTerm": {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    },
                                    "weight": 0
                                }
                            ],
                            "requiredDuringSchedulingIgnoredDuringExecution": [
                                {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaceSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    },
                                    "namespaces": [
                                        ""
                                    ],
                                    "topologyKey": ""
                                }
                            ]
                        }
                    },
                    "automountServiceAccountToken": true,
                    "containers": [
                        {
                            "args": [
                                ""
                            ],
                            "command": [
                                ""
                            ],
                            "env": [
                                {
                                    "name": "",
                                    "value": "",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "",
                                            "name": "",
                                            "optional": true
                                        },
                                        "fieldRef": {
                                            "apiVersion": "",
                                            "fieldPath": ""
                                        },
                                        "resourceFieldRef": {
                                            "containerName": "",
                                            "divisor": "",
                                            "resource": ""
                                        },
                                        "secretKeyRef": {
                                            "key": "",
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                }
                            ],
                            "envFrom": [
                                {
                                    "configMapRef": {
                                        "name": "",
                                        "optional": true
                                    },
                                    "prefix": "",
                                    "secretRef": {
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            ],
                            "image": "",
                            "imagePullPolicy": "",
                            "lifecycle": {
                                "postStart": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    }
                                },
                                "preStop": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    }
                                }
                            },
                            "livenessProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "name": "",
                            "ports": [
                                {
                                    "containerPort": 0,
                                    "hostIP": "",
                                    "hostPort": 0,
                                    "name": "",
                                    "protocol": ""
                                }
                            ],
                            "readinessProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "resources": {},
                            "securityContext": {
                                "allowPrivilegeEscalation": true,
                                "capabilities": {
                                    "add": [
                                        ""
                                    ],
                                    "drop": [
                                        ""
                                    ]
                                },
                                "privileged": true,
                                "procMount": "",
                                "readOnlyRootFilesystem": true,
                                "runAsGroup": 0,
                                "runAsNonRoot": true,
                                "runAsUser": 0,
                                "seLinuxOptions": {
                                    "level": "",
                                    "role": "",
                                    "type": "",
                                    "user": ""
                                },
                                "seccompProfile": {
                                    "localhostProfile": "",
                                    "type": ""
                                },
                                "windowsOptions": {
                                    "gmsaCredentialSpec": "",
                                    "gmsaCredentialSpecName": "",
                                    "hostProcess": true,
                                    "runAsUserName": ""
                                }
                            },
                            "startupProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "stdin": true,
                            "stdinOnce": true,
                            "terminationMessagePath": "",
                            "terminationMessagePolicy": "",
                            "tty": true,
                            "volumeDevices": [
                                {
                                    "devicePath": "",
                                    "name": ""
                                }
                            ],
                            "volumeMounts": [
                                {
                                    "mountPath": "",
                                    "mountPropagation": "",
                                    "name": "",
                                    "readOnly": true,
                                    "subPath": "",
                                    "subPathExpr": ""
                                }
                            ],
                            "workingDir": ""
                        }
                    ],
                    "dnsConfig": {
                        "nameservers": [
                            ""
                        ],
                        "options": [
                            {
                                "name": "",
                                "value": ""
                            }
                        ],
                        "searches": [
                            ""
                        ]
                    },
                    "dnsPolicy": "",
                    "enableServiceLinks": true,
                    "ephemeralContainers": [
                        {
                            "args": [
                                ""
                            ],
                            "command": [
                                ""
                            ],
                            "env": [
                                {
                                    "name": "",
                                    "value": "",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "",
                                            "name": "",
                                            "optional": true
                                        },
                                        "fieldRef": {
                                            "apiVersion": "",
                                            "fieldPath": ""
                                        },
                                        "resourceFieldRef": {
                                            "containerName": "",
                                            "divisor": "",
                                            "resource": ""
                                        },
                                        "secretKeyRef": {
                                            "key": "",
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                }
                            ],
                            "envFrom": [
                                {
                                    "configMapRef": {
                                        "name": "",
                                        "optional": true
                                    },
                                    "prefix": "",
                                    "secretRef": {
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            ],
                            "image": "",
                            "imagePullPolicy": "",
                            "lifecycle": {
                                "postStart": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    }
                                },
                                "preStop": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    }
                                }
                            },
                            "livenessProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "name": "",
                            "ports": [
                                {
                                    "containerPort": 0,
                                    "hostIP": "",
                                    "hostPort": 0,
                                    "name": "",
                                    "protocol": ""
                                }
                            ],
                            "readinessProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "resources": {},
                            "securityContext": {
                                "allowPrivilegeEscalation": true,
                                "capabilities": {
                                    "add": [
                                        ""
                                    ],
                                    "drop": [
                                        ""
                                    ]
                                },
                                "privileged": true,
                                "procMount": "",
                                "readOnlyRootFilesystem": true,
                                "runAsGroup": 0,
                                "runAsNonRoot": true,
                                "runAsUser": 0,
                                "seLinuxOptions": {
                                    "level": "",
                                    "role": "",
                                    "type": "",
                                    "user": ""
                                },
                                "seccompProfile": {
                                    "localhostProfile": "",
                                    "type": ""
                                },
                                "windowsOptions": {
                                    "gmsaCredentialSpec": "",
                                    "gmsaCredentialSpecName": "",
                                    "hostProcess": true,
                                    "runAsUserName": ""
                                }
                            },
                            "startupProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "stdin": true,
                            "stdinOnce": true,
                            "targetContainerName": "",
                            "terminationMessagePath": "",
                            "terminationMessagePolicy": "",
                            "tty": true,
                            "volumeDevices": [
                                {
                                    "devicePath": "",
                                    "name": ""
                                }
                            ],
                            "volumeMounts": [
                                {
                                    "mountPath": "",
                                    "mountPropagation": "",
                                    "name": "",
                                    "readOnly": true,
                                    "subPath": "",
                                    "subPathExpr": ""
                                }
                            ],
                            "workingDir": ""
                        }
                    ],
                    "hostAliases": [
                        {
                            "hostnames": [
                                ""
                            ],
                            "ip": ""
                        }
                    ],
                    "hostIPC": true,
                    "hostNetwork": true,
                    "hostPID": true,
                    "hostname": "",
                    "imagePullSecrets": [
                        {
                            "name": ""
                        }
                    ],
                    "initContainers": [
                        {
                            "args": [
                                ""
                            ],
                            "command": [
                                ""
                            ],
                            "env": [
                                {
                                    "name": "",
                                    "value": "",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "",
                                            "name": "",
                                            "optional": true
                                        },
                                        "fieldRef": {
                                            "apiVersion": "",
                                            "fieldPath": ""
                                        },
                                        "resourceFieldRef": {
                                            "containerName": "",
                                            "divisor": "",
                                            "resource": ""
                                        },
                                        "secretKeyRef": {
                                            "key": "",
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                }
                            ],
                            "envFrom": [
                                {
                                    "configMapRef": {
                                        "name": "",
                                        "optional": true
                                    },
                                    "prefix": "",
                                    "secretRef": {
                                        "name": "",
                                        "optional": true
                                    }
                                }
                            ],
                            "image": "",
                            "imagePullPolicy": "",
                            "lifecycle": {
                                "postStart": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    }
                                },
                                "preStop": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    }
                                }
                            },
                            "livenessProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "name": "",
                            "ports": [
                                {
                                    "containerPort": 0,
                                    "hostIP": "",
                                    "hostPort": 0,
                                    "name": "",
                                    "protocol": ""
                                }
                            ],
                            "readinessProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "resources": {},
                            "securityContext": {
                                "allowPrivilegeEscalation": true,
                                "capabilities": {
                                    "add": [
                                        ""
                                    ],
                                    "drop": [
                                        ""
                                    ]
                                },
                                "privileged": true,
                                "procMount": "",
                                "readOnlyRootFilesystem": true,
                                "runAsGroup": 0,
                                "runAsNonRoot": true,
                                "runAsUser": 0,
                                "seLinuxOptions": {
                                    "level": "",
                                    "role": "",
                                    "type": "",
                                    "user": ""
                                },
                                "seccompProfile": {
                                    "localhostProfile": "",
                                    "type": ""
                                },
                                "windowsOptions": {
                                    "gmsaCredentialSpec": "",
                                    "gmsaCredentialSpecName": "",
                                    "hostProcess": true,
                                    "runAsUserName": ""
                                }
                            },
                            "startupProbe": {
                                "exec": {
                                    "command": [
                                        ""
                                    ]
                                },
                                "failureThreshold": 0,
                                "grpc": {
                                    "port": 0,
                                    "service": ""
                                },
                                "httpGet": {
                                    "host": "",
                                    "httpHeaders": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "path": "",
                                    "port": "",
                                    "scheme": ""
                                },
                                "initialDelaySeconds": 0,
                                "periodSeconds": 0,
                                "successThreshold": 0,
                                "tcpSocket": {
                                    "host": "",
                                    "port": ""
                                },
                                "terminationGracePeriodSeconds": 0,
                                "timeoutSeconds": 0
                            },
                            "stdin": true,
                            "stdinOnce": true,
                            "terminationMessagePath": "",
                            "terminationMessagePolicy": "",
                            "tty": true,
                            "volumeDevices": [
                                {
                                    "devicePath": "",
                                    "name": ""
                                }
                            ],
                            "volumeMounts": [
                                {
                                    "mountPath": "",
                                    "mountPropagation": "",
                                    "name": "",
                                    "readOnly": true,
                                    "subPath": "",
                                    "subPathExpr": ""
                                }
                            ],
                            "workingDir": ""
                        }
                    ],
                    "nodeName": "",
                    "os": {
                        "name": ""
                    },
                    "preemptionPolicy": "",
                    "priority": 0,
                    "priorityClassName": "",
                    "readinessGates": [
                        {
                            "conditionType": ""
                        }
                    ],
                    "restartPolicy": "",
                    "runtimeClassName": "",
                    "schedulerName": "",
                    "securityContext": {
                        "fsGroup": 0,
                        "fsGroupChangePolicy": "",
                        "runAsGroup": 0,
                        "runAsNonRoot": true,
                        "runAsUser": 0,
                        "seLinuxOptions": {
                            "level": "",
                            "role": "",
                            "type": "",
                            "user": ""
                        },
                        "seccompProfile": {
                            "localhostProfile": "",
                            "type": ""
                        },
                        "supplementalGroups": [
                            0
                        ],
                        "sysctls": [
                            {
                                "name": "",
                                "value": ""
                            }
                        ],
                        "windowsOptions": {
                            "gmsaCredentialSpec": "",
                            "gmsaCredentialSpecName": "",
                            "hostProcess": true,
                            "runAsUserName": ""
                        }
                    },
                    "serviceAccount": "",
                    "serviceAccountName": "",
                    "setHostnameAsFQDN": true,
                    "shareProcessNamespace": true,
                    "subdomain": "",
                    "terminationGracePeriodSeconds": 0,
                    "tolerations": [
                        {
                            "effect": "",
                            "key": "",
                            "operator": "",
                            "tolerationSeconds": 0,
                            "value": ""
                        }
                    ],
                    "topologySpreadConstraints": [
                        {
                            "labelSelector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "maxSkew": 0,
                            "topologyKey": "",
                            "whenUnsatisfiable": ""
                        }
                    ],
                    "volumes": [
                        {
                            "awsElasticBlockStore": {
                                "fsType": "",
                                "partition": 0,
                                "readOnly": true,
                                "volumeID": ""
                            },
                            "azureDisk": {
                                "cachingMode": "",
                                "diskName": "",
                                "diskURI": "",
                                "fsType": "",
                                "kind": "",
                                "readOnly": true
                            },
                            "azureFile": {
                                "readOnly": true,
                                "secretName": "",
                                "shareName": ""
                            },
                            "cephfs": {
                                "monitors": [
                                    ""
                                ],
                                "path": "",
                                "readOnly": true,
                                "secretFile": "",
                                "secretRef": {
                                    "name": ""
                                },
                                "user": ""
                            },
                            "cinder": {
                                "fsType": "",
                                "readOnly": true,
                                "secretRef": {
                                    "name": ""
                                },
                                "volumeID": ""
                            },
                            "configMap": {
                                "defaultMode": 0,
                                "items": [
                                    {
                                        "key": "",
                                        "mode": 0,
                                        "path": ""
                                    }
                                ],
                                "name": "",
                                "optional": true
                            },
                            "csi": {
                                "driver": "",
                                "fsType": "",
                                "nodePublishSecretRef": {
                                    "name": ""
                                },
                                "readOnly": true
                            },
                            "downwardAPI": {
                                "defaultMode": 0,
                                "items": [
                                    {
                                        "fieldRef": {
                                            "apiVersion": "",
                                            "fieldPath": ""
                                        },
                                        "mode": 0,
                                        "path": "",
                                        "resourceFieldRef": {
                                            "containerName": "",
                                            "divisor": "",
                                            "resource": ""
                                        }
                                    }
                                ]
                            },
                            "emptyDir": {
                                "medium": "",
                                "sizeLimit": ""
                            },
                            "ephemeral": {
                                "volumeClaimTemplate": {
                                    "metadata": {
                                        "clusterName": "",
                                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                                        "deletionGracePeriodSeconds": 0,
                                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                        "finalizers": [
                                            ""
                                        ],
                                        "generateName": "",
                                        "generation": 0,
                                        "managedFields": [
                                            {
                                                "apiVersion": "",
                                                "fieldsType": "",
                                                "fieldsV1": {},
                                                "manager": "",
                                                "operation": "",
                                                "subresource": "",
                                                "time": "2020-12-12T%12:12:12Z"
                                            }
                                        ],
                                        "name": "",
                                        "namespace": "",
                                        "ownerReferences": [
                                            {
                                                "apiVersion": "",
                                                "blockOwnerDeletion": true,
                                                "controller": true,
                                                "kind": "",
                                                "name": "",
                                                "uid": ""
                                            }
                                        ],
                                        "resourceVersion": "",
                                        "selfLink": "",
                                        "uid": ""
                                    },
                                    "spec": {
                                        "accessModes": [
                                            ""
                                        ],
                                        "dataSource": {
                                            "apiGroup": "",
                                            "kind": "",
                                            "name": ""
                                        },
                                        "dataSourceRef": {
                                            "apiGroup": "",
                                            "kind": "",
                                            "name": ""
                                        },
                                        "resources": {},
                                        "selector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "storageClassName": "",
                                        "volumeMode": "",
                                        "volumeName": ""
                                    }
                                }
                            },
                            "fc": {
                                "fsType": "",
                                "lun": 0,
                                "readOnly": true,
                                "targetWWNs": [
                                    ""
                                ],
                                "wwids": [
                                    ""
                                ]
                            },
                            "flexVolume": {
                                "driver": "",
                                "fsType": "",
                                "readOnly": true,
                                "secretRef": {
                                    "name": ""
                                }
                            },
                            "flocker": {
                                "datasetName": "",
                                "datasetUUID": ""
                            },
                            "gcePersistentDisk": {
                                "fsType": "",
                                "partition": 0,
                                "pdName": "",
                                "readOnly": true
                            },
                            "gitRepo": {
                                "directory": "",
                                "repository": "",
                                "revision": ""
                            },
                            "glusterfs": {
                                "endpoints": "",
                                "path": "",
                                "readOnly": true
                            },
                            "hostPath": {
                                "path": "",
                                "type": ""
                            },
                            "iscsi": {
                                "chapAuthDiscovery": true,
                                "chapAuthSession": true,
                                "fsType": "",
                                "initiatorName": "",
                                "iqn": "",
                                "iscsiInterface": "",
                                "lun": 0,
                                "portals": [
                                    ""
                                ],
                                "readOnly": true,
                                "secretRef": {
                                    "name": ""
                                },
                                "targetPortal": ""
                            },
                            "name": "",
                            "nfs": {
                                "path": "",
                                "readOnly": true,
                                "server": ""
                            },
                            "persistentVolumeClaim": {
                                "claimName": "",
                                "readOnly": true
                            },
                            "photonPersistentDisk": {
                                "fsType": "",
                                "pdID": ""
                            },
                            "portworxVolume": {
                                "fsType": "",
                                "readOnly": true,
                                "volumeID": ""
                            },
                            "projected": {
                                "defaultMode": 0,
                                "sources": [
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "",
                                                    "mode": 0,
                                                    "path": ""
                                                }
                                            ],
                                            "name": "",
                                            "optional": true
                                        },
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "mode": 0,
                                                    "path": "",
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    }
                                                }
                                            ]
                                        },
                                        "secret": {
                                            "items": [
                                                {
                                                    "key": "",
                                                    "mode": 0,
                                                    "path": ""
                                                }
                                            ],
                                            "name": "",
                                            "optional": true
                                        },
                                        "serviceAccountToken": {
                                            "audience": "",
                                            "expirationSeconds": 0,
                                            "path": ""
                                        }
                                    }
                                ]
                            },
                            "quobyte": {
                                "group": "",
                                "readOnly": true,
                                "registry": "",
                                "tenant": "",
                                "user": "",
                                "volume": ""
                            },
                            "rbd": {
                                "fsType": "",
                                "image": "",
                                "keyring": "",
                                "monitors": [
                                    ""
                                ],
                                "pool": "",
                                "readOnly": true,
                                "secretRef": {
                                    "name": ""
                                },
                                "user": ""
                            },
                            "scaleIO": {
                                "fsType": "",
                                "gateway": "",
                                "protectionDomain": "",
                                "readOnly": true,
                                "secretRef": {
                                    "name": ""
                                },
                                "sslEnabled": true,
                                "storageMode": "",
                                "storagePool": "",
                                "system": "",
                                "volumeName": ""
                            },
                            "secret": {
                                "defaultMode": 0,
                                "items": [
                                    {
                                        "key": "",
                                        "mode": 0,
                                        "path": ""
                                    }
                                ],
                                "optional": true,
                                "secretName": ""
                            },
                            "storageos": {
                                "fsType": "",
                                "readOnly": true,
                                "secretRef": {
                                    "name": ""
                                },
                                "volumeName": "",
                                "volumeNamespace": ""
                            },
                            "vsphereVolume": {
                                "fsType": "",
                                "storagePolicyID": "",
                                "storagePolicyName": "",
                                "volumePath": ""
                            }
                        }
                    ]
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//podtemplates/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//podtemplates/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//replicationcontrollers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//replicationcontrollers",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "minReadySeconds": 0,
                "replicas": 0,
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 0,
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "fullyLabeledReplicas": 0,
                "observedGeneration": 0,
                "readyReplicas": 0,
                "replicas": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//replicationcontrollers",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//replicationcontrollers/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//replicationcontrollers/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "minReadySeconds": 0,
                "replicas": 0,
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 0,
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "fullyLabeledReplicas": 0,
                "observedGeneration": 0,
                "readyReplicas": 0,
                "replicas": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//replicationcontrollers/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//replicationcontrollers/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//replicationcontrollers//scale",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//replicationcontrollers//scale",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "replicas": 0
            },
            "status": {
                "replicas": 0,
                "selector": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//replicationcontrollers//scale",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//replicationcontrollers//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//replicationcontrollers//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "minReadySeconds": 0,
                "replicas": 0,
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 0,
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "fullyLabeledReplicas": 0,
                "observedGeneration": 0,
                "readyReplicas": 0,
                "replicas": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//replicationcontrollers//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//resourcequotas",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//resourcequotas",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "scopeSelector": {
                    "matchExpressions": [
                        {
                            "operator": "",
                            "scopeName": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "scopes": [
                    ""
                ]
            },
            "status": {}
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//resourcequotas",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//resourcequotas/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//resourcequotas/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "scopeSelector": {
                    "matchExpressions": [
                        {
                            "operator": "",
                            "scopeName": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "scopes": [
                    ""
                ]
            },
            "status": {}
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//resourcequotas/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//resourcequotas/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//resourcequotas//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//resourcequotas//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "scopeSelector": {
                    "matchExpressions": [
                        {
                            "operator": "",
                            "scopeName": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "scopes": [
                    ""
                ]
            },
            "status": {}
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//resourcequotas//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//secrets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//secrets",
    "post",
    {
        "data": {
            "apiVersion": "",
            "immutable": true,
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "type": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//secrets",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//secrets/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//secrets/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "immutable": true,
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "type": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//secrets/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//secrets/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//serviceaccounts",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//serviceaccounts",
    "post",
    {
        "data": {
            "apiVersion": "",
            "automountServiceAccountToken": true,
            "imagePullSecrets": [
                {
                    "name": ""
                }
            ],
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "secrets": [
                {
                    "apiVersion": "",
                    "fieldPath": "",
                    "kind": "",
                    "name": "",
                    "namespace": "",
                    "resourceVersion": "",
                    "uid": ""
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//serviceaccounts",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//serviceaccounts/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//serviceaccounts/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "automountServiceAccountToken": true,
            "imagePullSecrets": [
                {
                    "name": ""
                }
            ],
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "secrets": [
                {
                    "apiVersion": "",
                    "fieldPath": "",
                    "kind": "",
                    "name": "",
                    "namespace": "",
                    "resourceVersion": "",
                    "uid": ""
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//serviceaccounts/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//serviceaccounts/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//serviceaccounts//token",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "audiences": [
                    ""
                ],
                "boundObjectRef": {
                    "apiVersion": "",
                    "kind": "",
                    "name": "",
                    "uid": ""
                },
                "expirationSeconds": 0
            },
            "status": {
                "expirationTimestamp": "2020-12-12T%12:12:12Z",
                "token": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "allocateLoadBalancerNodePorts": true,
                "clusterIP": "",
                "clusterIPs": [
                    ""
                ],
                "externalIPs": [
                    ""
                ],
                "externalName": "",
                "externalTrafficPolicy": "",
                "healthCheckNodePort": 0,
                "internalTrafficPolicy": "",
                "ipFamilies": [
                    ""
                ],
                "ipFamilyPolicy": "",
                "loadBalancerClass": "",
                "loadBalancerIP": "",
                "loadBalancerSourceRanges": [
                    ""
                ],
                "ports": [
                    {
                        "appProtocol": "",
                        "name": "",
                        "nodePort": 0,
                        "port": 0,
                        "protocol": "",
                        "targetPort": ""
                    }
                ],
                "publishNotReadyAddresses": true,
                "sessionAffinity": "",
                "sessionAffinityConfig": {
                    "clientIP": {
                        "timeoutSeconds": 0
                    }
                },
                "type": ""
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "observedGeneration": 0,
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "loadBalancer": {
                    "ingress": [
                        {
                            "hostname": "",
                            "ip": "",
                            "ports": [
                                {
                                    "error": "",
                                    "port": 0,
                                    "protocol": ""
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "allocateLoadBalancerNodePorts": true,
                "clusterIP": "",
                "clusterIPs": [
                    ""
                ],
                "externalIPs": [
                    ""
                ],
                "externalName": "",
                "externalTrafficPolicy": "",
                "healthCheckNodePort": 0,
                "internalTrafficPolicy": "",
                "ipFamilies": [
                    ""
                ],
                "ipFamilyPolicy": "",
                "loadBalancerClass": "",
                "loadBalancerIP": "",
                "loadBalancerSourceRanges": [
                    ""
                ],
                "ports": [
                    {
                        "appProtocol": "",
                        "name": "",
                        "nodePort": 0,
                        "port": 0,
                        "protocol": "",
                        "targetPort": ""
                    }
                ],
                "publishNotReadyAddresses": true,
                "sessionAffinity": "",
                "sessionAffinityConfig": {
                    "clientIP": {
                        "timeoutSeconds": 0
                    }
                },
                "type": ""
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "observedGeneration": 0,
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "loadBalancer": {
                    "ingress": [
                        {
                            "hostname": "",
                            "ip": "",
                            "ports": [
                                {
                                    "error": "",
                                    "port": 0,
                                    "protocol": ""
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//proxy",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//proxy",
    "put",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//proxy",
    "post",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//proxy",
    "delete",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//proxy",
    "options",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//proxy",
    "head",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//proxy",
    "patch",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//proxy/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//proxy/",
    "put",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//proxy/",
    "post",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//proxy/",
    "delete",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//proxy/",
    "options",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//proxy/",
    "head",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//proxy/",
    "patch",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "allocateLoadBalancerNodePorts": true,
                "clusterIP": "",
                "clusterIPs": [
                    ""
                ],
                "externalIPs": [
                    ""
                ],
                "externalName": "",
                "externalTrafficPolicy": "",
                "healthCheckNodePort": 0,
                "internalTrafficPolicy": "",
                "ipFamilies": [
                    ""
                ],
                "ipFamilyPolicy": "",
                "loadBalancerClass": "",
                "loadBalancerIP": "",
                "loadBalancerSourceRanges": [
                    ""
                ],
                "ports": [
                    {
                        "appProtocol": "",
                        "name": "",
                        "nodePort": 0,
                        "port": 0,
                        "protocol": "",
                        "targetPort": ""
                    }
                ],
                "publishNotReadyAddresses": true,
                "sessionAffinity": "",
                "sessionAffinityConfig": {
                    "clientIP": {
                        "timeoutSeconds": 0
                    }
                },
                "type": ""
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "observedGeneration": 0,
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "loadBalancer": {
                    "ingress": [
                        {
                            "hostname": "",
                            "ip": "",
                            "ports": [
                                {
                                    "error": "",
                                    "port": 0,
                                    "protocol": ""
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//services//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "finalizers": [
                    ""
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "phase": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//finalize",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "finalizers": [
                    ""
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "phase": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "finalizers": [
                    ""
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "phase": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/namespaces//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "configSource": {
                    "configMap": {
                        "kubeletConfigKey": "",
                        "name": "",
                        "namespace": "",
                        "resourceVersion": "",
                        "uid": ""
                    }
                },
                "externalID": "",
                "podCIDR": "",
                "podCIDRs": [
                    ""
                ],
                "providerID": "",
                "taints": [
                    {
                        "effect": "",
                        "key": "",
                        "timeAdded": "2020-12-12T%12:12:12Z",
                        "value": ""
                    }
                ],
                "unschedulable": true
            },
            "status": {
                "addresses": [
                    {
                        "address": "",
                        "type": ""
                    }
                ],
                "conditions": [
                    {
                        "lastHeartbeatTime": "2020-12-12T%12:12:12Z",
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "config": {
                    "active": {
                        "configMap": {
                            "kubeletConfigKey": "",
                            "name": "",
                            "namespace": "",
                            "resourceVersion": "",
                            "uid": ""
                        }
                    },
                    "assigned": {
                        "configMap": {
                            "kubeletConfigKey": "",
                            "name": "",
                            "namespace": "",
                            "resourceVersion": "",
                            "uid": ""
                        }
                    },
                    "error": "",
                    "lastKnownGood": {
                        "configMap": {
                            "kubeletConfigKey": "",
                            "name": "",
                            "namespace": "",
                            "resourceVersion": "",
                            "uid": ""
                        }
                    }
                },
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 0
                    }
                },
                "images": [
                    {
                        "names": [
                            ""
                        ],
                        "sizeBytes": 0
                    }
                ],
                "nodeInfo": {
                    "architecture": "",
                    "bootID": "",
                    "containerRuntimeVersion": "",
                    "kernelVersion": "",
                    "kubeProxyVersion": "",
                    "kubeletVersion": "",
                    "machineID": "",
                    "operatingSystem": "",
                    "osImage": "",
                    "systemUUID": ""
                },
                "phase": "",
                "volumesAttached": [
                    {
                        "devicePath": "",
                        "name": ""
                    }
                ],
                "volumesInUse": [
                    ""
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "configSource": {
                    "configMap": {
                        "kubeletConfigKey": "",
                        "name": "",
                        "namespace": "",
                        "resourceVersion": "",
                        "uid": ""
                    }
                },
                "externalID": "",
                "podCIDR": "",
                "podCIDRs": [
                    ""
                ],
                "providerID": "",
                "taints": [
                    {
                        "effect": "",
                        "key": "",
                        "timeAdded": "2020-12-12T%12:12:12Z",
                        "value": ""
                    }
                ],
                "unschedulable": true
            },
            "status": {
                "addresses": [
                    {
                        "address": "",
                        "type": ""
                    }
                ],
                "conditions": [
                    {
                        "lastHeartbeatTime": "2020-12-12T%12:12:12Z",
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "config": {
                    "active": {
                        "configMap": {
                            "kubeletConfigKey": "",
                            "name": "",
                            "namespace": "",
                            "resourceVersion": "",
                            "uid": ""
                        }
                    },
                    "assigned": {
                        "configMap": {
                            "kubeletConfigKey": "",
                            "name": "",
                            "namespace": "",
                            "resourceVersion": "",
                            "uid": ""
                        }
                    },
                    "error": "",
                    "lastKnownGood": {
                        "configMap": {
                            "kubeletConfigKey": "",
                            "name": "",
                            "namespace": "",
                            "resourceVersion": "",
                            "uid": ""
                        }
                    }
                },
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 0
                    }
                },
                "images": [
                    {
                        "names": [
                            ""
                        ],
                        "sizeBytes": 0
                    }
                ],
                "nodeInfo": {
                    "architecture": "",
                    "bootID": "",
                    "containerRuntimeVersion": "",
                    "kernelVersion": "",
                    "kubeProxyVersion": "",
                    "kubeletVersion": "",
                    "machineID": "",
                    "operatingSystem": "",
                    "osImage": "",
                    "systemUUID": ""
                },
                "phase": "",
                "volumesAttached": [
                    {
                        "devicePath": "",
                        "name": ""
                    }
                ],
                "volumesInUse": [
                    ""
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//proxy",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//proxy",
    "put",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//proxy",
    "post",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//proxy",
    "delete",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//proxy",
    "options",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//proxy",
    "head",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//proxy",
    "patch",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//proxy/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//proxy/",
    "put",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//proxy/",
    "post",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//proxy/",
    "delete",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//proxy/",
    "options",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//proxy/",
    "head",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//proxy/",
    "patch",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "path": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "configSource": {
                    "configMap": {
                        "kubeletConfigKey": "",
                        "name": "",
                        "namespace": "",
                        "resourceVersion": "",
                        "uid": ""
                    }
                },
                "externalID": "",
                "podCIDR": "",
                "podCIDRs": [
                    ""
                ],
                "providerID": "",
                "taints": [
                    {
                        "effect": "",
                        "key": "",
                        "timeAdded": "2020-12-12T%12:12:12Z",
                        "value": ""
                    }
                ],
                "unschedulable": true
            },
            "status": {
                "addresses": [
                    {
                        "address": "",
                        "type": ""
                    }
                ],
                "conditions": [
                    {
                        "lastHeartbeatTime": "2020-12-12T%12:12:12Z",
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "config": {
                    "active": {
                        "configMap": {
                            "kubeletConfigKey": "",
                            "name": "",
                            "namespace": "",
                            "resourceVersion": "",
                            "uid": ""
                        }
                    },
                    "assigned": {
                        "configMap": {
                            "kubeletConfigKey": "",
                            "name": "",
                            "namespace": "",
                            "resourceVersion": "",
                            "uid": ""
                        }
                    },
                    "error": "",
                    "lastKnownGood": {
                        "configMap": {
                            "kubeletConfigKey": "",
                            "name": "",
                            "namespace": "",
                            "resourceVersion": "",
                            "uid": ""
                        }
                    }
                },
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 0
                    }
                },
                "images": [
                    {
                        "names": [
                            ""
                        ],
                        "sizeBytes": 0
                    }
                ],
                "nodeInfo": {
                    "architecture": "",
                    "bootID": "",
                    "containerRuntimeVersion": "",
                    "kernelVersion": "",
                    "kubeProxyVersion": "",
                    "kubeletVersion": "",
                    "machineID": "",
                    "operatingSystem": "",
                    "osImage": "",
                    "systemUUID": ""
                },
                "phase": "",
                "volumesAttached": [
                    {
                        "devicePath": "",
                        "name": ""
                    }
                ],
                "volumesInUse": [
                    ""
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/nodes//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/persistentvolumeclaims",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/persistentvolumes",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/persistentvolumes",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "accessModes": [
                    ""
                ],
                "awsElasticBlockStore": {
                    "fsType": "",
                    "partition": 0,
                    "readOnly": true,
                    "volumeID": ""
                },
                "azureDisk": {
                    "cachingMode": "",
                    "diskName": "",
                    "diskURI": "",
                    "fsType": "",
                    "kind": "",
                    "readOnly": true
                },
                "azureFile": {
                    "readOnly": true,
                    "secretName": "",
                    "secretNamespace": "",
                    "shareName": ""
                },
                "cephfs": {
                    "monitors": [
                        ""
                    ],
                    "path": "",
                    "readOnly": true,
                    "secretFile": "",
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "user": ""
                },
                "cinder": {
                    "fsType": "",
                    "readOnly": true,
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "volumeID": ""
                },
                "claimRef": {
                    "apiVersion": "",
                    "fieldPath": "",
                    "kind": "",
                    "name": "",
                    "namespace": "",
                    "resourceVersion": "",
                    "uid": ""
                },
                "csi": {
                    "controllerExpandSecretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "controllerPublishSecretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "driver": "",
                    "fsType": "",
                    "nodePublishSecretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "nodeStageSecretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "readOnly": true,
                    "volumeHandle": ""
                },
                "fc": {
                    "fsType": "",
                    "lun": 0,
                    "readOnly": true,
                    "targetWWNs": [
                        ""
                    ],
                    "wwids": [
                        ""
                    ]
                },
                "flexVolume": {
                    "driver": "",
                    "fsType": "",
                    "readOnly": true,
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    }
                },
                "flocker": {
                    "datasetName": "",
                    "datasetUUID": ""
                },
                "gcePersistentDisk": {
                    "fsType": "",
                    "partition": 0,
                    "pdName": "",
                    "readOnly": true
                },
                "glusterfs": {
                    "endpoints": "",
                    "endpointsNamespace": "",
                    "path": "",
                    "readOnly": true
                },
                "hostPath": {
                    "path": "",
                    "type": ""
                },
                "iscsi": {
                    "chapAuthDiscovery": true,
                    "chapAuthSession": true,
                    "fsType": "",
                    "initiatorName": "",
                    "iqn": "",
                    "iscsiInterface": "",
                    "lun": 0,
                    "portals": [
                        ""
                    ],
                    "readOnly": true,
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "targetPortal": ""
                },
                "local": {
                    "fsType": "",
                    "path": ""
                },
                "mountOptions": [
                    ""
                ],
                "nfs": {
                    "path": "",
                    "readOnly": true,
                    "server": ""
                },
                "nodeAffinity": {
                    "required": {
                        "nodeSelectorTerms": [
                            {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ],
                                "matchFields": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                },
                "persistentVolumeReclaimPolicy": "",
                "photonPersistentDisk": {
                    "fsType": "",
                    "pdID": ""
                },
                "portworxVolume": {
                    "fsType": "",
                    "readOnly": true,
                    "volumeID": ""
                },
                "quobyte": {
                    "group": "",
                    "readOnly": true,
                    "registry": "",
                    "tenant": "",
                    "user": "",
                    "volume": ""
                },
                "rbd": {
                    "fsType": "",
                    "image": "",
                    "keyring": "",
                    "monitors": [
                        ""
                    ],
                    "pool": "",
                    "readOnly": true,
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "user": ""
                },
                "scaleIO": {
                    "fsType": "",
                    "gateway": "",
                    "protectionDomain": "",
                    "readOnly": true,
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "sslEnabled": true,
                    "storageMode": "",
                    "storagePool": "",
                    "system": "",
                    "volumeName": ""
                },
                "storageClassName": "",
                "storageos": {
                    "fsType": "",
                    "readOnly": true,
                    "secretRef": {
                        "apiVersion": "",
                        "fieldPath": "",
                        "kind": "",
                        "name": "",
                        "namespace": "",
                        "resourceVersion": "",
                        "uid": ""
                    },
                    "volumeName": "",
                    "volumeNamespace": ""
                },
                "volumeMode": "",
                "vsphereVolume": {
                    "fsType": "",
                    "storagePolicyID": "",
                    "storagePolicyName": "",
                    "volumePath": ""
                }
            },
            "status": {
                "message": "",
                "phase": "",
                "reason": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/persistentvolumes",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/persistentvolumes/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/persistentvolumes/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "accessModes": [
                    ""
                ],
                "awsElasticBlockStore": {
                    "fsType": "",
                    "partition": 0,
                    "readOnly": true,
                    "volumeID": ""
                },
                "azureDisk": {
                    "cachingMode": "",
                    "diskName": "",
                    "diskURI": "",
                    "fsType": "",
                    "kind": "",
                    "readOnly": true
                },
                "azureFile": {
                    "readOnly": true,
                    "secretName": "",
                    "secretNamespace": "",
                    "shareName": ""
                },
                "cephfs": {
                    "monitors": [
                        ""
                    ],
                    "path": "",
                    "readOnly": true,
                    "secretFile": "",
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "user": ""
                },
                "cinder": {
                    "fsType": "",
                    "readOnly": true,
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "volumeID": ""
                },
                "claimRef": {
                    "apiVersion": "",
                    "fieldPath": "",
                    "kind": "",
                    "name": "",
                    "namespace": "",
                    "resourceVersion": "",
                    "uid": ""
                },
                "csi": {
                    "controllerExpandSecretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "controllerPublishSecretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "driver": "",
                    "fsType": "",
                    "nodePublishSecretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "nodeStageSecretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "readOnly": true,
                    "volumeHandle": ""
                },
                "fc": {
                    "fsType": "",
                    "lun": 0,
                    "readOnly": true,
                    "targetWWNs": [
                        ""
                    ],
                    "wwids": [
                        ""
                    ]
                },
                "flexVolume": {
                    "driver": "",
                    "fsType": "",
                    "readOnly": true,
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    }
                },
                "flocker": {
                    "datasetName": "",
                    "datasetUUID": ""
                },
                "gcePersistentDisk": {
                    "fsType": "",
                    "partition": 0,
                    "pdName": "",
                    "readOnly": true
                },
                "glusterfs": {
                    "endpoints": "",
                    "endpointsNamespace": "",
                    "path": "",
                    "readOnly": true
                },
                "hostPath": {
                    "path": "",
                    "type": ""
                },
                "iscsi": {
                    "chapAuthDiscovery": true,
                    "chapAuthSession": true,
                    "fsType": "",
                    "initiatorName": "",
                    "iqn": "",
                    "iscsiInterface": "",
                    "lun": 0,
                    "portals": [
                        ""
                    ],
                    "readOnly": true,
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "targetPortal": ""
                },
                "local": {
                    "fsType": "",
                    "path": ""
                },
                "mountOptions": [
                    ""
                ],
                "nfs": {
                    "path": "",
                    "readOnly": true,
                    "server": ""
                },
                "nodeAffinity": {
                    "required": {
                        "nodeSelectorTerms": [
                            {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ],
                                "matchFields": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                },
                "persistentVolumeReclaimPolicy": "",
                "photonPersistentDisk": {
                    "fsType": "",
                    "pdID": ""
                },
                "portworxVolume": {
                    "fsType": "",
                    "readOnly": true,
                    "volumeID": ""
                },
                "quobyte": {
                    "group": "",
                    "readOnly": true,
                    "registry": "",
                    "tenant": "",
                    "user": "",
                    "volume": ""
                },
                "rbd": {
                    "fsType": "",
                    "image": "",
                    "keyring": "",
                    "monitors": [
                        ""
                    ],
                    "pool": "",
                    "readOnly": true,
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "user": ""
                },
                "scaleIO": {
                    "fsType": "",
                    "gateway": "",
                    "protectionDomain": "",
                    "readOnly": true,
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "sslEnabled": true,
                    "storageMode": "",
                    "storagePool": "",
                    "system": "",
                    "volumeName": ""
                },
                "storageClassName": "",
                "storageos": {
                    "fsType": "",
                    "readOnly": true,
                    "secretRef": {
                        "apiVersion": "",
                        "fieldPath": "",
                        "kind": "",
                        "name": "",
                        "namespace": "",
                        "resourceVersion": "",
                        "uid": ""
                    },
                    "volumeName": "",
                    "volumeNamespace": ""
                },
                "volumeMode": "",
                "vsphereVolume": {
                    "fsType": "",
                    "storagePolicyID": "",
                    "storagePolicyName": "",
                    "volumePath": ""
                }
            },
            "status": {
                "message": "",
                "phase": "",
                "reason": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/persistentvolumes/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/persistentvolumes/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/persistentvolumes//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/persistentvolumes//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "accessModes": [
                    ""
                ],
                "awsElasticBlockStore": {
                    "fsType": "",
                    "partition": 0,
                    "readOnly": true,
                    "volumeID": ""
                },
                "azureDisk": {
                    "cachingMode": "",
                    "diskName": "",
                    "diskURI": "",
                    "fsType": "",
                    "kind": "",
                    "readOnly": true
                },
                "azureFile": {
                    "readOnly": true,
                    "secretName": "",
                    "secretNamespace": "",
                    "shareName": ""
                },
                "cephfs": {
                    "monitors": [
                        ""
                    ],
                    "path": "",
                    "readOnly": true,
                    "secretFile": "",
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "user": ""
                },
                "cinder": {
                    "fsType": "",
                    "readOnly": true,
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "volumeID": ""
                },
                "claimRef": {
                    "apiVersion": "",
                    "fieldPath": "",
                    "kind": "",
                    "name": "",
                    "namespace": "",
                    "resourceVersion": "",
                    "uid": ""
                },
                "csi": {
                    "controllerExpandSecretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "controllerPublishSecretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "driver": "",
                    "fsType": "",
                    "nodePublishSecretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "nodeStageSecretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "readOnly": true,
                    "volumeHandle": ""
                },
                "fc": {
                    "fsType": "",
                    "lun": 0,
                    "readOnly": true,
                    "targetWWNs": [
                        ""
                    ],
                    "wwids": [
                        ""
                    ]
                },
                "flexVolume": {
                    "driver": "",
                    "fsType": "",
                    "readOnly": true,
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    }
                },
                "flocker": {
                    "datasetName": "",
                    "datasetUUID": ""
                },
                "gcePersistentDisk": {
                    "fsType": "",
                    "partition": 0,
                    "pdName": "",
                    "readOnly": true
                },
                "glusterfs": {
                    "endpoints": "",
                    "endpointsNamespace": "",
                    "path": "",
                    "readOnly": true
                },
                "hostPath": {
                    "path": "",
                    "type": ""
                },
                "iscsi": {
                    "chapAuthDiscovery": true,
                    "chapAuthSession": true,
                    "fsType": "",
                    "initiatorName": "",
                    "iqn": "",
                    "iscsiInterface": "",
                    "lun": 0,
                    "portals": [
                        ""
                    ],
                    "readOnly": true,
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "targetPortal": ""
                },
                "local": {
                    "fsType": "",
                    "path": ""
                },
                "mountOptions": [
                    ""
                ],
                "nfs": {
                    "path": "",
                    "readOnly": true,
                    "server": ""
                },
                "nodeAffinity": {
                    "required": {
                        "nodeSelectorTerms": [
                            {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ],
                                "matchFields": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                },
                "persistentVolumeReclaimPolicy": "",
                "photonPersistentDisk": {
                    "fsType": "",
                    "pdID": ""
                },
                "portworxVolume": {
                    "fsType": "",
                    "readOnly": true,
                    "volumeID": ""
                },
                "quobyte": {
                    "group": "",
                    "readOnly": true,
                    "registry": "",
                    "tenant": "",
                    "user": "",
                    "volume": ""
                },
                "rbd": {
                    "fsType": "",
                    "image": "",
                    "keyring": "",
                    "monitors": [
                        ""
                    ],
                    "pool": "",
                    "readOnly": true,
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "user": ""
                },
                "scaleIO": {
                    "fsType": "",
                    "gateway": "",
                    "protectionDomain": "",
                    "readOnly": true,
                    "secretRef": {
                        "name": "",
                        "namespace": ""
                    },
                    "sslEnabled": true,
                    "storageMode": "",
                    "storagePool": "",
                    "system": "",
                    "volumeName": ""
                },
                "storageClassName": "",
                "storageos": {
                    "fsType": "",
                    "readOnly": true,
                    "secretRef": {
                        "apiVersion": "",
                        "fieldPath": "",
                        "kind": "",
                        "name": "",
                        "namespace": "",
                        "resourceVersion": "",
                        "uid": ""
                    },
                    "volumeName": "",
                    "volumeNamespace": ""
                },
                "volumeMode": "",
                "vsphereVolume": {
                    "fsType": "",
                    "storagePolicyID": "",
                    "storagePolicyName": "",
                    "volumePath": ""
                }
            },
            "status": {
                "message": "",
                "phase": "",
                "reason": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/persistentvolumes//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/pods",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/podtemplates",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/replicationcontrollers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/resourcequotas",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/secrets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/serviceaccounts",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/services",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/configmaps",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/endpoints",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/events",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/limitranges",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//configmaps",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//configmaps/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//endpoints",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//endpoints/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//events",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//events/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//limitranges",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//limitranges/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//persistentvolumeclaims",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//persistentvolumeclaims/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//pods",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//pods/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//podtemplates",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//podtemplates/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//replicationcontrollers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//replicationcontrollers/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//resourcequotas",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//resourcequotas/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//secrets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//secrets/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//serviceaccounts",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//serviceaccounts/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//services",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces//services/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/namespaces/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/nodes",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/nodes/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/persistentvolumeclaims",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/persistentvolumes",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/persistentvolumes/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/pods",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/podtemplates",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/replicationcontrollers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/resourcequotas",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/secrets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/serviceaccounts",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/api/v1/watch/services",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "webhooks": [
                {
                    "admissionReviewVersions": [
                        ""
                    ],
                    "clientConfig": {
                        "caBundle": "",
                        "service": {
                            "name": "",
                            "namespace": "",
                            "path": "",
                            "port": 0
                        },
                        "url": ""
                    },
                    "failurePolicy": "",
                    "matchPolicy": "",
                    "name": "",
                    "namespaceSelector": {
                        "matchExpressions": [
                            {
                                "key": "",
                                "operator": "",
                                "values": [
                                    ""
                                ]
                            }
                        ]
                    },
                    "objectSelector": {
                        "matchExpressions": [
                            {
                                "key": "",
                                "operator": "",
                                "values": [
                                    ""
                                ]
                            }
                        ]
                    },
                    "reinvocationPolicy": "",
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "apiVersions": [
                                ""
                            ],
                            "operations": [
                                ""
                            ],
                            "resources": [
                                ""
                            ],
                            "scope": ""
                        }
                    ],
                    "sideEffects": "",
                    "timeoutSeconds": 0
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "webhooks": [
                {
                    "admissionReviewVersions": [
                        ""
                    ],
                    "clientConfig": {
                        "caBundle": "",
                        "service": {
                            "name": "",
                            "namespace": "",
                            "path": "",
                            "port": 0
                        },
                        "url": ""
                    },
                    "failurePolicy": "",
                    "matchPolicy": "",
                    "name": "",
                    "namespaceSelector": {
                        "matchExpressions": [
                            {
                                "key": "",
                                "operator": "",
                                "values": [
                                    ""
                                ]
                            }
                        ]
                    },
                    "objectSelector": {
                        "matchExpressions": [
                            {
                                "key": "",
                                "operator": "",
                                "values": [
                                    ""
                                ]
                            }
                        ]
                    },
                    "reinvocationPolicy": "",
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "apiVersions": [
                                ""
                            ],
                            "operations": [
                                ""
                            ],
                            "resources": [
                                ""
                            ],
                            "scope": ""
                        }
                    ],
                    "sideEffects": "",
                    "timeoutSeconds": 0
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "webhooks": [
                {
                    "admissionReviewVersions": [
                        ""
                    ],
                    "clientConfig": {
                        "caBundle": "",
                        "service": {
                            "name": "",
                            "namespace": "",
                            "path": "",
                            "port": 0
                        },
                        "url": ""
                    },
                    "failurePolicy": "",
                    "matchPolicy": "",
                    "name": "",
                    "namespaceSelector": {
                        "matchExpressions": [
                            {
                                "key": "",
                                "operator": "",
                                "values": [
                                    ""
                                ]
                            }
                        ]
                    },
                    "objectSelector": {
                        "matchExpressions": [
                            {
                                "key": "",
                                "operator": "",
                                "values": [
                                    ""
                                ]
                            }
                        ]
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "apiVersions": [
                                ""
                            ],
                            "operations": [
                                ""
                            ],
                            "resources": [
                                ""
                            ],
                            "scope": ""
                        }
                    ],
                    "sideEffects": "",
                    "timeoutSeconds": 0
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "webhooks": [
                {
                    "admissionReviewVersions": [
                        ""
                    ],
                    "clientConfig": {
                        "caBundle": "",
                        "service": {
                            "name": "",
                            "namespace": "",
                            "path": "",
                            "port": 0
                        },
                        "url": ""
                    },
                    "failurePolicy": "",
                    "matchPolicy": "",
                    "name": "",
                    "namespaceSelector": {
                        "matchExpressions": [
                            {
                                "key": "",
                                "operator": "",
                                "values": [
                                    ""
                                ]
                            }
                        ]
                    },
                    "objectSelector": {
                        "matchExpressions": [
                            {
                                "key": "",
                                "operator": "",
                                "values": [
                                    ""
                                ]
                            }
                        ]
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "apiVersions": [
                                ""
                            ],
                            "operations": [
                                ""
                            ],
                            "resources": [
                                ""
                            ],
                            "scope": ""
                        }
                    ],
                    "sideEffects": "",
                    "timeoutSeconds": 0
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/watch/mutatingwebhookconfigurations",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/watch/mutatingwebhookconfigurations/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/watch/validatingwebhookconfigurations",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/admissionregistration.k8s.io/v1/watch/validatingwebhookconfigurations/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiextensions.k8s.io/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiextensions.k8s.io/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiextensions.k8s.io/v1/customresourcedefinitions",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
{
    "Exception": "maximum recursion depth exceeded while calling a Python object"
}
[
    "http://127.0.0.1:8000/apis/apiextensions.k8s.io/v1/customresourcedefinitions",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiextensions.k8s.io/v1/customresourcedefinitions/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
{
    "Exception": "maximum recursion depth exceeded while calling a Python object"
}
[
    "http://127.0.0.1:8000/apis/apiextensions.k8s.io/v1/customresourcedefinitions/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiextensions.k8s.io/v1/customresourcedefinitions/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiextensions.k8s.io/v1/customresourcedefinitions//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
{
    "Exception": "maximum recursion depth exceeded while calling a Python object"
}
[
    "http://127.0.0.1:8000/apis/apiextensions.k8s.io/v1/customresourcedefinitions//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiextensions.k8s.io/v1/watch/customresourcedefinitions",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiextensions.k8s.io/v1/watch/customresourcedefinitions/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiregistration.k8s.io/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiregistration.k8s.io/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiregistration.k8s.io/v1/apiservices",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiregistration.k8s.io/v1/apiservices",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "caBundle": "",
                "group": "",
                "groupPriorityMinimum": 0,
                "insecureSkipTLSVerify": true,
                "service": {
                    "name": "",
                    "namespace": "",
                    "port": 0
                },
                "version": "",
                "versionPriority": 0
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiregistration.k8s.io/v1/apiservices",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiregistration.k8s.io/v1/apiservices/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiregistration.k8s.io/v1/apiservices/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "caBundle": "",
                "group": "",
                "groupPriorityMinimum": 0,
                "insecureSkipTLSVerify": true,
                "service": {
                    "name": "",
                    "namespace": "",
                    "port": 0
                },
                "version": "",
                "versionPriority": 0
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiregistration.k8s.io/v1/apiservices/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiregistration.k8s.io/v1/apiservices/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiregistration.k8s.io/v1/apiservices//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiregistration.k8s.io/v1/apiservices//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "caBundle": "",
                "group": "",
                "groupPriorityMinimum": 0,
                "insecureSkipTLSVerify": true,
                "service": {
                    "name": "",
                    "namespace": "",
                    "port": 0
                },
                "version": "",
                "versionPriority": 0
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiregistration.k8s.io/v1/apiservices//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiregistration.k8s.io/v1/watch/apiservices",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apiregistration.k8s.io/v1/watch/apiservices/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/controllerrevisions",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/daemonsets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/deployments",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//controllerrevisions",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//controllerrevisions",
    "post",
    {
        "data": {
            "apiVersion": "",
            "data": {},
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "revision": 0
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//controllerrevisions",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//controllerrevisions/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//controllerrevisions/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "data": {},
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "revision": 0
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//controllerrevisions/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//controllerrevisions/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//daemonsets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//daemonsets",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "minReadySeconds": 0,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": "",
                        "maxUnavailable": ""
                    },
                    "type": ""
                }
            },
            "status": {
                "collisionCount": 0,
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentNumberScheduled": 0,
                "desiredNumberScheduled": 0,
                "numberAvailable": 0,
                "numberMisscheduled": 0,
                "numberReady": 0,
                "numberUnavailable": 0,
                "observedGeneration": 0,
                "updatedNumberScheduled": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//daemonsets",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//daemonsets/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//daemonsets/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "minReadySeconds": 0,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": "",
                        "maxUnavailable": ""
                    },
                    "type": ""
                }
            },
            "status": {
                "collisionCount": 0,
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentNumberScheduled": 0,
                "desiredNumberScheduled": 0,
                "numberAvailable": 0,
                "numberMisscheduled": 0,
                "numberReady": 0,
                "numberUnavailable": 0,
                "observedGeneration": 0,
                "updatedNumberScheduled": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//daemonsets/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//daemonsets/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//daemonsets//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//daemonsets//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "minReadySeconds": 0,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": "",
                        "maxUnavailable": ""
                    },
                    "type": ""
                }
            },
            "status": {
                "collisionCount": 0,
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentNumberScheduled": 0,
                "desiredNumberScheduled": 0,
                "numberAvailable": 0,
                "numberMisscheduled": 0,
                "numberReady": 0,
                "numberUnavailable": 0,
                "observedGeneration": 0,
                "updatedNumberScheduled": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//daemonsets//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//deployments",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//deployments",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "minReadySeconds": 0,
                "paused": true,
                "progressDeadlineSeconds": 0,
                "replicas": 0,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "",
                        "maxUnavailable": ""
                    },
                    "type": ""
                },
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 0,
                "collisionCount": 0,
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "lastUpdateTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "observedGeneration": 0,
                "readyReplicas": 0,
                "replicas": 0,
                "unavailableReplicas": 0,
                "updatedReplicas": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//deployments",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//deployments/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//deployments/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "minReadySeconds": 0,
                "paused": true,
                "progressDeadlineSeconds": 0,
                "replicas": 0,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "",
                        "maxUnavailable": ""
                    },
                    "type": ""
                },
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 0,
                "collisionCount": 0,
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "lastUpdateTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "observedGeneration": 0,
                "readyReplicas": 0,
                "replicas": 0,
                "unavailableReplicas": 0,
                "updatedReplicas": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//deployments/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//deployments/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//deployments//scale",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//deployments//scale",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "replicas": 0
            },
            "status": {
                "replicas": 0,
                "selector": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//deployments//scale",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//deployments//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//deployments//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "minReadySeconds": 0,
                "paused": true,
                "progressDeadlineSeconds": 0,
                "replicas": 0,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "",
                        "maxUnavailable": ""
                    },
                    "type": ""
                },
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 0,
                "collisionCount": 0,
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "lastUpdateTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "observedGeneration": 0,
                "readyReplicas": 0,
                "replicas": 0,
                "unavailableReplicas": 0,
                "updatedReplicas": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//deployments//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//replicasets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//replicasets",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "minReadySeconds": 0,
                "replicas": 0,
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 0,
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "fullyLabeledReplicas": 0,
                "observedGeneration": 0,
                "readyReplicas": 0,
                "replicas": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//replicasets",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//replicasets/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//replicasets/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "minReadySeconds": 0,
                "replicas": 0,
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 0,
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "fullyLabeledReplicas": 0,
                "observedGeneration": 0,
                "readyReplicas": 0,
                "replicas": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//replicasets/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//replicasets/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//replicasets//scale",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//replicasets//scale",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "replicas": 0
            },
            "status": {
                "replicas": 0,
                "selector": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//replicasets//scale",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//replicasets//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//replicasets//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "minReadySeconds": 0,
                "replicas": 0,
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 0,
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "fullyLabeledReplicas": 0,
                "observedGeneration": 0,
                "readyReplicas": 0,
                "replicas": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//replicasets//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//statefulsets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//statefulsets",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "minReadySeconds": 0,
                "persistentVolumeClaimRetentionPolicy": {
                    "whenDeleted": "",
                    "whenScaled": ""
                },
                "podManagementPolicy": "",
                "replicas": 0,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": ""
                },
                "volumeClaimTemplates": [
                    {
                        "apiVersion": "",
                        "kind": "",
                        "metadata": {
                            "clusterName": "",
                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                            "deletionGracePeriodSeconds": 0,
                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                            "finalizers": [
                                ""
                            ],
                            "generateName": "",
                            "generation": 0,
                            "managedFields": [
                                {
                                    "apiVersion": "",
                                    "fieldsType": "",
                                    "fieldsV1": {},
                                    "manager": "",
                                    "operation": "",
                                    "subresource": "",
                                    "time": "2020-12-12T%12:12:12Z"
                                }
                            ],
                            "name": "",
                            "namespace": "",
                            "ownerReferences": [
                                {
                                    "apiVersion": "",
                                    "blockOwnerDeletion": true,
                                    "controller": true,
                                    "kind": "",
                                    "name": "",
                                    "uid": ""
                                }
                            ],
                            "resourceVersion": "",
                            "selfLink": "",
                            "uid": ""
                        },
                        "spec": {
                            "accessModes": [
                                ""
                            ],
                            "dataSource": {
                                "apiGroup": "",
                                "kind": "",
                                "name": ""
                            },
                            "dataSourceRef": {
                                "apiGroup": "",
                                "kind": "",
                                "name": ""
                            },
                            "resources": {},
                            "selector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "storageClassName": "",
                            "volumeMode": "",
                            "volumeName": ""
                        },
                        "status": {
                            "accessModes": [
                                ""
                            ],
                            "conditions": [
                                {
                                    "lastProbeTime": "2020-12-12T%12:12:12Z",
                                    "lastTransitionTime": "2020-12-12T%12:12:12Z",
                                    "message": "",
                                    "reason": "",
                                    "status": "",
                                    "type": ""
                                }
                            ],
                            "phase": "",
                            "resizeStatus": ""
                        }
                    }
                ]
            },
            "status": {
                "availableReplicas": 0,
                "collisionCount": 0,
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentReplicas": 0,
                "currentRevision": "",
                "observedGeneration": 0,
                "readyReplicas": 0,
                "replicas": 0,
                "updateRevision": "",
                "updatedReplicas": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//statefulsets",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//statefulsets/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//statefulsets/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "minReadySeconds": 0,
                "persistentVolumeClaimRetentionPolicy": {
                    "whenDeleted": "",
                    "whenScaled": ""
                },
                "podManagementPolicy": "",
                "replicas": 0,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": ""
                },
                "volumeClaimTemplates": [
                    {
                        "apiVersion": "",
                        "kind": "",
                        "metadata": {
                            "clusterName": "",
                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                            "deletionGracePeriodSeconds": 0,
                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                            "finalizers": [
                                ""
                            ],
                            "generateName": "",
                            "generation": 0,
                            "managedFields": [
                                {
                                    "apiVersion": "",
                                    "fieldsType": "",
                                    "fieldsV1": {},
                                    "manager": "",
                                    "operation": "",
                                    "subresource": "",
                                    "time": "2020-12-12T%12:12:12Z"
                                }
                            ],
                            "name": "",
                            "namespace": "",
                            "ownerReferences": [
                                {
                                    "apiVersion": "",
                                    "blockOwnerDeletion": true,
                                    "controller": true,
                                    "kind": "",
                                    "name": "",
                                    "uid": ""
                                }
                            ],
                            "resourceVersion": "",
                            "selfLink": "",
                            "uid": ""
                        },
                        "spec": {
                            "accessModes": [
                                ""
                            ],
                            "dataSource": {
                                "apiGroup": "",
                                "kind": "",
                                "name": ""
                            },
                            "dataSourceRef": {
                                "apiGroup": "",
                                "kind": "",
                                "name": ""
                            },
                            "resources": {},
                            "selector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "storageClassName": "",
                            "volumeMode": "",
                            "volumeName": ""
                        },
                        "status": {
                            "accessModes": [
                                ""
                            ],
                            "conditions": [
                                {
                                    "lastProbeTime": "2020-12-12T%12:12:12Z",
                                    "lastTransitionTime": "2020-12-12T%12:12:12Z",
                                    "message": "",
                                    "reason": "",
                                    "status": "",
                                    "type": ""
                                }
                            ],
                            "phase": "",
                            "resizeStatus": ""
                        }
                    }
                ]
            },
            "status": {
                "availableReplicas": 0,
                "collisionCount": 0,
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentReplicas": 0,
                "currentRevision": "",
                "observedGeneration": 0,
                "readyReplicas": 0,
                "replicas": 0,
                "updateRevision": "",
                "updatedReplicas": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//statefulsets/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//statefulsets/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//statefulsets//scale",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//statefulsets//scale",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "replicas": 0
            },
            "status": {
                "replicas": 0,
                "selector": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//statefulsets//scale",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//statefulsets//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//statefulsets//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "minReadySeconds": 0,
                "persistentVolumeClaimRetentionPolicy": {
                    "whenDeleted": "",
                    "whenScaled": ""
                },
                "podManagementPolicy": "",
                "replicas": 0,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": ""
                },
                "volumeClaimTemplates": [
                    {
                        "apiVersion": "",
                        "kind": "",
                        "metadata": {
                            "clusterName": "",
                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                            "deletionGracePeriodSeconds": 0,
                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                            "finalizers": [
                                ""
                            ],
                            "generateName": "",
                            "generation": 0,
                            "managedFields": [
                                {
                                    "apiVersion": "",
                                    "fieldsType": "",
                                    "fieldsV1": {},
                                    "manager": "",
                                    "operation": "",
                                    "subresource": "",
                                    "time": "2020-12-12T%12:12:12Z"
                                }
                            ],
                            "name": "",
                            "namespace": "",
                            "ownerReferences": [
                                {
                                    "apiVersion": "",
                                    "blockOwnerDeletion": true,
                                    "controller": true,
                                    "kind": "",
                                    "name": "",
                                    "uid": ""
                                }
                            ],
                            "resourceVersion": "",
                            "selfLink": "",
                            "uid": ""
                        },
                        "spec": {
                            "accessModes": [
                                ""
                            ],
                            "dataSource": {
                                "apiGroup": "",
                                "kind": "",
                                "name": ""
                            },
                            "dataSourceRef": {
                                "apiGroup": "",
                                "kind": "",
                                "name": ""
                            },
                            "resources": {},
                            "selector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "storageClassName": "",
                            "volumeMode": "",
                            "volumeName": ""
                        },
                        "status": {
                            "accessModes": [
                                ""
                            ],
                            "conditions": [
                                {
                                    "lastProbeTime": "2020-12-12T%12:12:12Z",
                                    "lastTransitionTime": "2020-12-12T%12:12:12Z",
                                    "message": "",
                                    "reason": "",
                                    "status": "",
                                    "type": ""
                                }
                            ],
                            "phase": "",
                            "resizeStatus": ""
                        }
                    }
                ]
            },
            "status": {
                "availableReplicas": 0,
                "collisionCount": 0,
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentReplicas": 0,
                "currentRevision": "",
                "observedGeneration": 0,
                "readyReplicas": 0,
                "replicas": 0,
                "updateRevision": "",
                "updatedReplicas": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/namespaces//statefulsets//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/replicasets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/statefulsets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/watch/controllerrevisions",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/watch/daemonsets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/watch/deployments",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/watch/namespaces//controllerrevisions",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/watch/namespaces//controllerrevisions/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/watch/namespaces//daemonsets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/watch/namespaces//daemonsets/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/watch/namespaces//deployments",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/watch/namespaces//deployments/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/watch/namespaces//replicasets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/watch/namespaces//replicasets/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/watch/namespaces//statefulsets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/watch/namespaces//statefulsets/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/watch/replicasets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/apps/v1/watch/statefulsets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/authentication.k8s.io/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/authentication.k8s.io/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/authentication.k8s.io/v1/tokenreviews",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "audiences": [
                    ""
                ],
                "token": ""
            },
            "status": {
                "audiences": [
                    ""
                ],
                "authenticated": true,
                "error": "",
                "user": {
                    "groups": [
                        ""
                    ],
                    "uid": "",
                    "username": ""
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/authorization.k8s.io/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/authorization.k8s.io/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/authorization.k8s.io/v1/namespaces//localsubjectaccessreviews",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "groups": [
                    ""
                ],
                "nonResourceAttributes": {
                    "path": "",
                    "verb": ""
                },
                "resourceAttributes": {
                    "group": "",
                    "name": "",
                    "namespace": "",
                    "resource": "",
                    "subresource": "",
                    "verb": "",
                    "version": ""
                },
                "uid": "",
                "user": ""
            },
            "status": {
                "allowed": true,
                "denied": true,
                "evaluationError": "",
                "reason": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/authorization.k8s.io/v1/selfsubjectaccessreviews",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "nonResourceAttributes": {
                    "path": "",
                    "verb": ""
                },
                "resourceAttributes": {
                    "group": "",
                    "name": "",
                    "namespace": "",
                    "resource": "",
                    "subresource": "",
                    "verb": "",
                    "version": ""
                }
            },
            "status": {
                "allowed": true,
                "denied": true,
                "evaluationError": "",
                "reason": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/authorization.k8s.io/v1/selfsubjectrulesreviews",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "namespace": ""
            },
            "status": {
                "evaluationError": "",
                "incomplete": true,
                "nonResourceRules": [
                    {
                        "nonResourceURLs": [
                            ""
                        ],
                        "verbs": [
                            ""
                        ]
                    }
                ],
                "resourceRules": [
                    {
                        "apiGroups": [
                            ""
                        ],
                        "resourceNames": [
                            ""
                        ],
                        "resources": [
                            ""
                        ],
                        "verbs": [
                            ""
                        ]
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/authorization.k8s.io/v1/subjectaccessreviews",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "groups": [
                    ""
                ],
                "nonResourceAttributes": {
                    "path": "",
                    "verb": ""
                },
                "resourceAttributes": {
                    "group": "",
                    "name": "",
                    "namespace": "",
                    "resource": "",
                    "subresource": "",
                    "verb": "",
                    "version": ""
                },
                "uid": "",
                "user": ""
            },
            "status": {
                "allowed": true,
                "denied": true,
                "evaluationError": "",
                "reason": ""
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v1/horizontalpodautoscalers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v1/namespaces//horizontalpodautoscalers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v1/namespaces//horizontalpodautoscalers",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "maxReplicas": 0,
                "minReplicas": 0,
                "scaleTargetRef": {
                    "apiVersion": "",
                    "kind": "",
                    "name": ""
                },
                "targetCPUUtilizationPercentage": 0
            },
            "status": {
                "currentCPUUtilizationPercentage": 0,
                "currentReplicas": 0,
                "desiredReplicas": 0,
                "lastScaleTime": "2020-12-12T%12:12:12Z",
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v1/namespaces//horizontalpodautoscalers",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v1/namespaces//horizontalpodautoscalers/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v1/namespaces//horizontalpodautoscalers/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "maxReplicas": 0,
                "minReplicas": 0,
                "scaleTargetRef": {
                    "apiVersion": "",
                    "kind": "",
                    "name": ""
                },
                "targetCPUUtilizationPercentage": 0
            },
            "status": {
                "currentCPUUtilizationPercentage": 0,
                "currentReplicas": 0,
                "desiredReplicas": 0,
                "lastScaleTime": "2020-12-12T%12:12:12Z",
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v1/namespaces//horizontalpodautoscalers/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v1/namespaces//horizontalpodautoscalers/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v1/namespaces//horizontalpodautoscalers//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v1/namespaces//horizontalpodautoscalers//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "maxReplicas": 0,
                "minReplicas": 0,
                "scaleTargetRef": {
                    "apiVersion": "",
                    "kind": "",
                    "name": ""
                },
                "targetCPUUtilizationPercentage": 0
            },
            "status": {
                "currentCPUUtilizationPercentage": 0,
                "currentReplicas": 0,
                "desiredReplicas": 0,
                "lastScaleTime": "2020-12-12T%12:12:12Z",
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v1/namespaces//horizontalpodautoscalers//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v1/watch/horizontalpodautoscalers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v1/watch/namespaces//horizontalpodautoscalers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v1/watch/namespaces//horizontalpodautoscalers/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2/horizontalpodautoscalers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2/namespaces//horizontalpodautoscalers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2/namespaces//horizontalpodautoscalers",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "behavior": {
                    "scaleDown": {
                        "policies": [
                            {
                                "periodSeconds": 0,
                                "type": "",
                                "value": 0
                            }
                        ],
                        "selectPolicy": "",
                        "stabilizationWindowSeconds": 0
                    },
                    "scaleUp": {
                        "policies": [
                            {
                                "periodSeconds": 0,
                                "type": "",
                                "value": 0
                            }
                        ],
                        "selectPolicy": "",
                        "stabilizationWindowSeconds": 0
                    }
                },
                "maxReplicas": 0,
                "metrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "name": "",
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "external": {
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "object": {
                            "describedObject": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "pods": {
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "resource": {
                            "name": "",
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "type": ""
                    }
                ],
                "minReplicas": 0,
                "scaleTargetRef": {
                    "apiVersion": "",
                    "kind": "",
                    "name": ""
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentMetrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "name": ""
                        },
                        "external": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "object": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "describedObject": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "pods": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "resource": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "name": ""
                        },
                        "type": ""
                    }
                ],
                "currentReplicas": 0,
                "desiredReplicas": 0,
                "lastScaleTime": "2020-12-12T%12:12:12Z",
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2/namespaces//horizontalpodautoscalers",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2/namespaces//horizontalpodautoscalers/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2/namespaces//horizontalpodautoscalers/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "behavior": {
                    "scaleDown": {
                        "policies": [
                            {
                                "periodSeconds": 0,
                                "type": "",
                                "value": 0
                            }
                        ],
                        "selectPolicy": "",
                        "stabilizationWindowSeconds": 0
                    },
                    "scaleUp": {
                        "policies": [
                            {
                                "periodSeconds": 0,
                                "type": "",
                                "value": 0
                            }
                        ],
                        "selectPolicy": "",
                        "stabilizationWindowSeconds": 0
                    }
                },
                "maxReplicas": 0,
                "metrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "name": "",
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "external": {
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "object": {
                            "describedObject": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "pods": {
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "resource": {
                            "name": "",
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "type": ""
                    }
                ],
                "minReplicas": 0,
                "scaleTargetRef": {
                    "apiVersion": "",
                    "kind": "",
                    "name": ""
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentMetrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "name": ""
                        },
                        "external": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "object": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "describedObject": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "pods": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "resource": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "name": ""
                        },
                        "type": ""
                    }
                ],
                "currentReplicas": 0,
                "desiredReplicas": 0,
                "lastScaleTime": "2020-12-12T%12:12:12Z",
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2/namespaces//horizontalpodautoscalers/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2/namespaces//horizontalpodautoscalers/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2/namespaces//horizontalpodautoscalers//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2/namespaces//horizontalpodautoscalers//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "behavior": {
                    "scaleDown": {
                        "policies": [
                            {
                                "periodSeconds": 0,
                                "type": "",
                                "value": 0
                            }
                        ],
                        "selectPolicy": "",
                        "stabilizationWindowSeconds": 0
                    },
                    "scaleUp": {
                        "policies": [
                            {
                                "periodSeconds": 0,
                                "type": "",
                                "value": 0
                            }
                        ],
                        "selectPolicy": "",
                        "stabilizationWindowSeconds": 0
                    }
                },
                "maxReplicas": 0,
                "metrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "name": "",
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "external": {
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "object": {
                            "describedObject": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "pods": {
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "resource": {
                            "name": "",
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "type": ""
                    }
                ],
                "minReplicas": 0,
                "scaleTargetRef": {
                    "apiVersion": "",
                    "kind": "",
                    "name": ""
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentMetrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "name": ""
                        },
                        "external": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "object": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "describedObject": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "pods": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "resource": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "name": ""
                        },
                        "type": ""
                    }
                ],
                "currentReplicas": 0,
                "desiredReplicas": 0,
                "lastScaleTime": "2020-12-12T%12:12:12Z",
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2/namespaces//horizontalpodautoscalers//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2/watch/horizontalpodautoscalers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2/watch/namespaces//horizontalpodautoscalers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2/watch/namespaces//horizontalpodautoscalers/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta1/horizontalpodautoscalers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta1/namespaces//horizontalpodautoscalers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta1/namespaces//horizontalpodautoscalers",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "maxReplicas": 0,
                "metrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "name": "",
                            "targetAverageUtilization": 0,
                            "targetAverageValue": ""
                        },
                        "external": {
                            "metricName": "",
                            "metricSelector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "targetAverageValue": "",
                            "targetValue": ""
                        },
                        "object": {
                            "averageValue": "",
                            "metricName": "",
                            "selector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "target": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            },
                            "targetValue": ""
                        },
                        "pods": {
                            "metricName": "",
                            "selector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "targetAverageValue": ""
                        },
                        "resource": {
                            "name": "",
                            "targetAverageUtilization": 0,
                            "targetAverageValue": ""
                        },
                        "type": ""
                    }
                ],
                "minReplicas": 0,
                "scaleTargetRef": {
                    "apiVersion": "",
                    "kind": "",
                    "name": ""
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentMetrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "currentAverageUtilization": 0,
                            "currentAverageValue": "",
                            "name": ""
                        },
                        "external": {
                            "currentAverageValue": "",
                            "currentValue": "",
                            "metricName": "",
                            "metricSelector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            }
                        },
                        "object": {
                            "averageValue": "",
                            "currentValue": "",
                            "metricName": "",
                            "selector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "target": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            }
                        },
                        "pods": {
                            "currentAverageValue": "",
                            "metricName": "",
                            "selector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            }
                        },
                        "resource": {
                            "currentAverageUtilization": 0,
                            "currentAverageValue": "",
                            "name": ""
                        },
                        "type": ""
                    }
                ],
                "currentReplicas": 0,
                "desiredReplicas": 0,
                "lastScaleTime": "2020-12-12T%12:12:12Z",
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta1/namespaces//horizontalpodautoscalers",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta1/namespaces//horizontalpodautoscalers/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta1/namespaces//horizontalpodautoscalers/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "maxReplicas": 0,
                "metrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "name": "",
                            "targetAverageUtilization": 0,
                            "targetAverageValue": ""
                        },
                        "external": {
                            "metricName": "",
                            "metricSelector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "targetAverageValue": "",
                            "targetValue": ""
                        },
                        "object": {
                            "averageValue": "",
                            "metricName": "",
                            "selector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "target": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            },
                            "targetValue": ""
                        },
                        "pods": {
                            "metricName": "",
                            "selector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "targetAverageValue": ""
                        },
                        "resource": {
                            "name": "",
                            "targetAverageUtilization": 0,
                            "targetAverageValue": ""
                        },
                        "type": ""
                    }
                ],
                "minReplicas": 0,
                "scaleTargetRef": {
                    "apiVersion": "",
                    "kind": "",
                    "name": ""
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentMetrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "currentAverageUtilization": 0,
                            "currentAverageValue": "",
                            "name": ""
                        },
                        "external": {
                            "currentAverageValue": "",
                            "currentValue": "",
                            "metricName": "",
                            "metricSelector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            }
                        },
                        "object": {
                            "averageValue": "",
                            "currentValue": "",
                            "metricName": "",
                            "selector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "target": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            }
                        },
                        "pods": {
                            "currentAverageValue": "",
                            "metricName": "",
                            "selector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            }
                        },
                        "resource": {
                            "currentAverageUtilization": 0,
                            "currentAverageValue": "",
                            "name": ""
                        },
                        "type": ""
                    }
                ],
                "currentReplicas": 0,
                "desiredReplicas": 0,
                "lastScaleTime": "2020-12-12T%12:12:12Z",
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta1/namespaces//horizontalpodautoscalers/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta1/namespaces//horizontalpodautoscalers/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta1/namespaces//horizontalpodautoscalers//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta1/namespaces//horizontalpodautoscalers//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "maxReplicas": 0,
                "metrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "name": "",
                            "targetAverageUtilization": 0,
                            "targetAverageValue": ""
                        },
                        "external": {
                            "metricName": "",
                            "metricSelector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "targetAverageValue": "",
                            "targetValue": ""
                        },
                        "object": {
                            "averageValue": "",
                            "metricName": "",
                            "selector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "target": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            },
                            "targetValue": ""
                        },
                        "pods": {
                            "metricName": "",
                            "selector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "targetAverageValue": ""
                        },
                        "resource": {
                            "name": "",
                            "targetAverageUtilization": 0,
                            "targetAverageValue": ""
                        },
                        "type": ""
                    }
                ],
                "minReplicas": 0,
                "scaleTargetRef": {
                    "apiVersion": "",
                    "kind": "",
                    "name": ""
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentMetrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "currentAverageUtilization": 0,
                            "currentAverageValue": "",
                            "name": ""
                        },
                        "external": {
                            "currentAverageValue": "",
                            "currentValue": "",
                            "metricName": "",
                            "metricSelector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            }
                        },
                        "object": {
                            "averageValue": "",
                            "currentValue": "",
                            "metricName": "",
                            "selector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            },
                            "target": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            }
                        },
                        "pods": {
                            "currentAverageValue": "",
                            "metricName": "",
                            "selector": {
                                "matchExpressions": [
                                    {
                                        "key": "",
                                        "operator": "",
                                        "values": [
                                            ""
                                        ]
                                    }
                                ]
                            }
                        },
                        "resource": {
                            "currentAverageUtilization": 0,
                            "currentAverageValue": "",
                            "name": ""
                        },
                        "type": ""
                    }
                ],
                "currentReplicas": 0,
                "desiredReplicas": 0,
                "lastScaleTime": "2020-12-12T%12:12:12Z",
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta1/namespaces//horizontalpodautoscalers//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta1/watch/horizontalpodautoscalers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta1/watch/namespaces//horizontalpodautoscalers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta1/watch/namespaces//horizontalpodautoscalers/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta2/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta2/horizontalpodautoscalers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta2/namespaces//horizontalpodautoscalers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta2/namespaces//horizontalpodautoscalers",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "behavior": {
                    "scaleDown": {
                        "policies": [
                            {
                                "periodSeconds": 0,
                                "type": "",
                                "value": 0
                            }
                        ],
                        "selectPolicy": "",
                        "stabilizationWindowSeconds": 0
                    },
                    "scaleUp": {
                        "policies": [
                            {
                                "periodSeconds": 0,
                                "type": "",
                                "value": 0
                            }
                        ],
                        "selectPolicy": "",
                        "stabilizationWindowSeconds": 0
                    }
                },
                "maxReplicas": 0,
                "metrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "name": "",
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "external": {
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "object": {
                            "describedObject": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "pods": {
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "resource": {
                            "name": "",
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "type": ""
                    }
                ],
                "minReplicas": 0,
                "scaleTargetRef": {
                    "apiVersion": "",
                    "kind": "",
                    "name": ""
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentMetrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "name": ""
                        },
                        "external": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "object": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "describedObject": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "pods": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "resource": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "name": ""
                        },
                        "type": ""
                    }
                ],
                "currentReplicas": 0,
                "desiredReplicas": 0,
                "lastScaleTime": "2020-12-12T%12:12:12Z",
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta2/namespaces//horizontalpodautoscalers",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta2/namespaces//horizontalpodautoscalers/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta2/namespaces//horizontalpodautoscalers/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "behavior": {
                    "scaleDown": {
                        "policies": [
                            {
                                "periodSeconds": 0,
                                "type": "",
                                "value": 0
                            }
                        ],
                        "selectPolicy": "",
                        "stabilizationWindowSeconds": 0
                    },
                    "scaleUp": {
                        "policies": [
                            {
                                "periodSeconds": 0,
                                "type": "",
                                "value": 0
                            }
                        ],
                        "selectPolicy": "",
                        "stabilizationWindowSeconds": 0
                    }
                },
                "maxReplicas": 0,
                "metrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "name": "",
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "external": {
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "object": {
                            "describedObject": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "pods": {
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "resource": {
                            "name": "",
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "type": ""
                    }
                ],
                "minReplicas": 0,
                "scaleTargetRef": {
                    "apiVersion": "",
                    "kind": "",
                    "name": ""
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentMetrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "name": ""
                        },
                        "external": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "object": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "describedObject": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "pods": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "resource": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "name": ""
                        },
                        "type": ""
                    }
                ],
                "currentReplicas": 0,
                "desiredReplicas": 0,
                "lastScaleTime": "2020-12-12T%12:12:12Z",
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta2/namespaces//horizontalpodautoscalers/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta2/namespaces//horizontalpodautoscalers/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta2/namespaces//horizontalpodautoscalers//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta2/namespaces//horizontalpodautoscalers//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "behavior": {
                    "scaleDown": {
                        "policies": [
                            {
                                "periodSeconds": 0,
                                "type": "",
                                "value": 0
                            }
                        ],
                        "selectPolicy": "",
                        "stabilizationWindowSeconds": 0
                    },
                    "scaleUp": {
                        "policies": [
                            {
                                "periodSeconds": 0,
                                "type": "",
                                "value": 0
                            }
                        ],
                        "selectPolicy": "",
                        "stabilizationWindowSeconds": 0
                    }
                },
                "maxReplicas": 0,
                "metrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "name": "",
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "external": {
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "object": {
                            "describedObject": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "pods": {
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            },
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "resource": {
                            "name": "",
                            "target": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "type": "",
                                "value": ""
                            }
                        },
                        "type": ""
                    }
                ],
                "minReplicas": 0,
                "scaleTargetRef": {
                    "apiVersion": "",
                    "kind": "",
                    "name": ""
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentMetrics": [
                    {
                        "containerResource": {
                            "container": "",
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "name": ""
                        },
                        "external": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "object": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "describedObject": {
                                "apiVersion": "",
                                "kind": "",
                                "name": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "pods": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "metric": {
                                "name": "",
                                "selector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "resource": {
                            "current": {
                                "averageUtilization": 0,
                                "averageValue": "",
                                "value": ""
                            },
                            "name": ""
                        },
                        "type": ""
                    }
                ],
                "currentReplicas": 0,
                "desiredReplicas": 0,
                "lastScaleTime": "2020-12-12T%12:12:12Z",
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta2/namespaces//horizontalpodautoscalers//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta2/watch/horizontalpodautoscalers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta2/watch/namespaces//horizontalpodautoscalers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/autoscaling/v2beta2/watch/namespaces//horizontalpodautoscalers/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/cronjobs",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/jobs",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//cronjobs",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//cronjobs",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "concurrencyPolicy": "",
                "failedJobsHistoryLimit": 0,
                "jobTemplate": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "backoffLimit": 0,
                        "completionMode": "",
                        "completions": 0,
                        "manualSelector": true,
                        "parallelism": 0,
                        "selector": {
                            "matchExpressions": [
                                {
                                    "key": "",
                                    "operator": "",
                                    "values": [
                                        ""
                                    ]
                                }
                            ]
                        },
                        "suspend": true,
                        "template": {
                            "metadata": {
                                "clusterName": "",
                                "creationTimestamp": "2020-12-12T%12:12:12Z",
                                "deletionGracePeriodSeconds": 0,
                                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                "finalizers": [
                                    ""
                                ],
                                "generateName": "",
                                "generation": 0,
                                "managedFields": [
                                    {
                                        "apiVersion": "",
                                        "fieldsType": "",
                                        "fieldsV1": {},
                                        "manager": "",
                                        "operation": "",
                                        "subresource": "",
                                        "time": "2020-12-12T%12:12:12Z"
                                    }
                                ],
                                "name": "",
                                "namespace": "",
                                "ownerReferences": [
                                    {
                                        "apiVersion": "",
                                        "blockOwnerDeletion": true,
                                        "controller": true,
                                        "kind": "",
                                        "name": "",
                                        "uid": ""
                                    }
                                ],
                                "resourceVersion": "",
                                "selfLink": "",
                                "uid": ""
                            },
                            "spec": {
                                "activeDeadlineSeconds": 0,
                                "affinity": {
                                    "nodeAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "preference": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ],
                                                    "matchFields": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ],
                                                    "matchFields": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "podAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "podAffinityTerm": {
                                                    "labelSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaceSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaces": [
                                                        ""
                                                    ],
                                                    "topologyKey": ""
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaceSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaces": [
                                                    ""
                                                ],
                                                "topologyKey": ""
                                            }
                                        ]
                                    },
                                    "podAntiAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "podAffinityTerm": {
                                                    "labelSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaceSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaces": [
                                                        ""
                                                    ],
                                                    "topologyKey": ""
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaceSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaces": [
                                                    ""
                                                ],
                                                "topologyKey": ""
                                            }
                                        ]
                                    }
                                },
                                "automountServiceAccountToken": true,
                                "containers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "dnsConfig": {
                                    "nameservers": [
                                        ""
                                    ],
                                    "options": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "searches": [
                                        ""
                                    ]
                                },
                                "dnsPolicy": "",
                                "enableServiceLinks": true,
                                "ephemeralContainers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "targetContainerName": "",
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "hostAliases": [
                                    {
                                        "hostnames": [
                                            ""
                                        ],
                                        "ip": ""
                                    }
                                ],
                                "hostIPC": true,
                                "hostNetwork": true,
                                "hostPID": true,
                                "hostname": "",
                                "imagePullSecrets": [
                                    {
                                        "name": ""
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "nodeName": "",
                                "os": {
                                    "name": ""
                                },
                                "preemptionPolicy": "",
                                "priority": 0,
                                "priorityClassName": "",
                                "readinessGates": [
                                    {
                                        "conditionType": ""
                                    }
                                ],
                                "restartPolicy": "",
                                "runtimeClassName": "",
                                "schedulerName": "",
                                "securityContext": {
                                    "fsGroup": 0,
                                    "fsGroupChangePolicy": "",
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "supplementalGroups": [
                                        0
                                    ],
                                    "sysctls": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "serviceAccount": "",
                                "serviceAccountName": "",
                                "setHostnameAsFQDN": true,
                                "shareProcessNamespace": true,
                                "subdomain": "",
                                "terminationGracePeriodSeconds": 0,
                                "tolerations": [
                                    {
                                        "effect": "",
                                        "key": "",
                                        "operator": "",
                                        "tolerationSeconds": 0,
                                        "value": ""
                                    }
                                ],
                                "topologySpreadConstraints": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "maxSkew": 0,
                                        "topologyKey": "",
                                        "whenUnsatisfiable": ""
                                    }
                                ],
                                "volumes": [
                                    {
                                        "awsElasticBlockStore": {
                                            "fsType": "",
                                            "partition": 0,
                                            "readOnly": true,
                                            "volumeID": ""
                                        },
                                        "azureDisk": {
                                            "cachingMode": "",
                                            "diskName": "",
                                            "diskURI": "",
                                            "fsType": "",
                                            "kind": "",
                                            "readOnly": true
                                        },
                                        "azureFile": {
                                            "readOnly": true,
                                            "secretName": "",
                                            "shareName": ""
                                        },
                                        "cephfs": {
                                            "monitors": [
                                                ""
                                            ],
                                            "path": "",
                                            "readOnly": true,
                                            "secretFile": "",
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "user": ""
                                        },
                                        "cinder": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "volumeID": ""
                                        },
                                        "configMap": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "key": "",
                                                    "mode": 0,
                                                    "path": ""
                                                }
                                            ],
                                            "name": "",
                                            "optional": true
                                        },
                                        "csi": {
                                            "driver": "",
                                            "fsType": "",
                                            "nodePublishSecretRef": {
                                                "name": ""
                                            },
                                            "readOnly": true
                                        },
                                        "downwardAPI": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "mode": 0,
                                                    "path": "",
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    }
                                                }
                                            ]
                                        },
                                        "emptyDir": {
                                            "medium": "",
                                            "sizeLimit": ""
                                        },
                                        "ephemeral": {
                                            "volumeClaimTemplate": {
                                                "metadata": {
                                                    "clusterName": "",
                                                    "creationTimestamp": "2020-12-12T%12:12:12Z",
                                                    "deletionGracePeriodSeconds": 0,
                                                    "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                                    "finalizers": [
                                                        ""
                                                    ],
                                                    "generateName": "",
                                                    "generation": 0,
                                                    "managedFields": [
                                                        {
                                                            "apiVersion": "",
                                                            "fieldsType": "",
                                                            "fieldsV1": {},
                                                            "manager": "",
                                                            "operation": "",
                                                            "subresource": "",
                                                            "time": "2020-12-12T%12:12:12Z"
                                                        }
                                                    ],
                                                    "name": "",
                                                    "namespace": "",
                                                    "ownerReferences": [
                                                        {
                                                            "apiVersion": "",
                                                            "blockOwnerDeletion": true,
                                                            "controller": true,
                                                            "kind": "",
                                                            "name": "",
                                                            "uid": ""
                                                        }
                                                    ],
                                                    "resourceVersion": "",
                                                    "selfLink": "",
                                                    "uid": ""
                                                },
                                                "spec": {
                                                    "accessModes": [
                                                        ""
                                                    ],
                                                    "dataSource": {
                                                        "apiGroup": "",
                                                        "kind": "",
                                                        "name": ""
                                                    },
                                                    "dataSourceRef": {
                                                        "apiGroup": "",
                                                        "kind": "",
                                                        "name": ""
                                                    },
                                                    "resources": {},
                                                    "selector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "storageClassName": "",
                                                    "volumeMode": "",
                                                    "volumeName": ""
                                                }
                                            }
                                        },
                                        "fc": {
                                            "fsType": "",
                                            "lun": 0,
                                            "readOnly": true,
                                            "targetWWNs": [
                                                ""
                                            ],
                                            "wwids": [
                                                ""
                                            ]
                                        },
                                        "flexVolume": {
                                            "driver": "",
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            }
                                        },
                                        "flocker": {
                                            "datasetName": "",
                                            "datasetUUID": ""
                                        },
                                        "gcePersistentDisk": {
                                            "fsType": "",
                                            "partition": 0,
                                            "pdName": "",
                                            "readOnly": true
                                        },
                                        "gitRepo": {
                                            "directory": "",
                                            "repository": "",
                                            "revision": ""
                                        },
                                        "glusterfs": {
                                            "endpoints": "",
                                            "path": "",
                                            "readOnly": true
                                        },
                                        "hostPath": {
                                            "path": "",
                                            "type": ""
                                        },
                                        "iscsi": {
                                            "chapAuthDiscovery": true,
                                            "chapAuthSession": true,
                                            "fsType": "",
                                            "initiatorName": "",
                                            "iqn": "",
                                            "iscsiInterface": "",
                                            "lun": 0,
                                            "portals": [
                                                ""
                                            ],
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "targetPortal": ""
                                        },
                                        "name": "",
                                        "nfs": {
                                            "path": "",
                                            "readOnly": true,
                                            "server": ""
                                        },
                                        "persistentVolumeClaim": {
                                            "claimName": "",
                                            "readOnly": true
                                        },
                                        "photonPersistentDisk": {
                                            "fsType": "",
                                            "pdID": ""
                                        },
                                        "portworxVolume": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "volumeID": ""
                                        },
                                        "projected": {
                                            "defaultMode": 0,
                                            "sources": [
                                                {
                                                    "configMap": {
                                                        "items": [
                                                            {
                                                                "key": "",
                                                                "mode": 0,
                                                                "path": ""
                                                            }
                                                        ],
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "fieldRef": {
                                                                    "apiVersion": "",
                                                                    "fieldPath": ""
                                                                },
                                                                "mode": 0,
                                                                "path": "",
                                                                "resourceFieldRef": {
                                                                    "containerName": "",
                                                                    "divisor": "",
                                                                    "resource": ""
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "secret": {
                                                        "items": [
                                                            {
                                                                "key": "",
                                                                "mode": 0,
                                                                "path": ""
                                                            }
                                                        ],
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "serviceAccountToken": {
                                                        "audience": "",
                                                        "expirationSeconds": 0,
                                                        "path": ""
                                                    }
                                                }
                                            ]
                                        },
                                        "quobyte": {
                                            "group": "",
                                            "readOnly": true,
                                            "registry": "",
                                            "tenant": "",
                                            "user": "",
                                            "volume": ""
                                        },
                                        "rbd": {
                                            "fsType": "",
                                            "image": "",
                                            "keyring": "",
                                            "monitors": [
                                                ""
                                            ],
                                            "pool": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "user": ""
                                        },
                                        "scaleIO": {
                                            "fsType": "",
                                            "gateway": "",
                                            "protectionDomain": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "sslEnabled": true,
                                            "storageMode": "",
                                            "storagePool": "",
                                            "system": "",
                                            "volumeName": ""
                                        },
                                        "secret": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "key": "",
                                                    "mode": 0,
                                                    "path": ""
                                                }
                                            ],
                                            "optional": true,
                                            "secretName": ""
                                        },
                                        "storageos": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "volumeName": "",
                                            "volumeNamespace": ""
                                        },
                                        "vsphereVolume": {
                                            "fsType": "",
                                            "storagePolicyID": "",
                                            "storagePolicyName": "",
                                            "volumePath": ""
                                        }
                                    }
                                ]
                            }
                        },
                        "ttlSecondsAfterFinished": 0
                    }
                },
                "schedule": "",
                "startingDeadlineSeconds": 0,
                "successfulJobsHistoryLimit": 0,
                "suspend": true
            },
            "status": {
                "active": [
                    {
                        "apiVersion": "",
                        "fieldPath": "",
                        "kind": "",
                        "name": "",
                        "namespace": "",
                        "resourceVersion": "",
                        "uid": ""
                    }
                ],
                "lastScheduleTime": "2020-12-12T%12:12:12Z",
                "lastSuccessfulTime": "2020-12-12T%12:12:12Z"
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//cronjobs",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//cronjobs/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//cronjobs/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "concurrencyPolicy": "",
                "failedJobsHistoryLimit": 0,
                "jobTemplate": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "backoffLimit": 0,
                        "completionMode": "",
                        "completions": 0,
                        "manualSelector": true,
                        "parallelism": 0,
                        "selector": {
                            "matchExpressions": [
                                {
                                    "key": "",
                                    "operator": "",
                                    "values": [
                                        ""
                                    ]
                                }
                            ]
                        },
                        "suspend": true,
                        "template": {
                            "metadata": {
                                "clusterName": "",
                                "creationTimestamp": "2020-12-12T%12:12:12Z",
                                "deletionGracePeriodSeconds": 0,
                                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                "finalizers": [
                                    ""
                                ],
                                "generateName": "",
                                "generation": 0,
                                "managedFields": [
                                    {
                                        "apiVersion": "",
                                        "fieldsType": "",
                                        "fieldsV1": {},
                                        "manager": "",
                                        "operation": "",
                                        "subresource": "",
                                        "time": "2020-12-12T%12:12:12Z"
                                    }
                                ],
                                "name": "",
                                "namespace": "",
                                "ownerReferences": [
                                    {
                                        "apiVersion": "",
                                        "blockOwnerDeletion": true,
                                        "controller": true,
                                        "kind": "",
                                        "name": "",
                                        "uid": ""
                                    }
                                ],
                                "resourceVersion": "",
                                "selfLink": "",
                                "uid": ""
                            },
                            "spec": {
                                "activeDeadlineSeconds": 0,
                                "affinity": {
                                    "nodeAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "preference": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ],
                                                    "matchFields": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ],
                                                    "matchFields": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "podAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "podAffinityTerm": {
                                                    "labelSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaceSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaces": [
                                                        ""
                                                    ],
                                                    "topologyKey": ""
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaceSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaces": [
                                                    ""
                                                ],
                                                "topologyKey": ""
                                            }
                                        ]
                                    },
                                    "podAntiAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "podAffinityTerm": {
                                                    "labelSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaceSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaces": [
                                                        ""
                                                    ],
                                                    "topologyKey": ""
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaceSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaces": [
                                                    ""
                                                ],
                                                "topologyKey": ""
                                            }
                                        ]
                                    }
                                },
                                "automountServiceAccountToken": true,
                                "containers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "dnsConfig": {
                                    "nameservers": [
                                        ""
                                    ],
                                    "options": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "searches": [
                                        ""
                                    ]
                                },
                                "dnsPolicy": "",
                                "enableServiceLinks": true,
                                "ephemeralContainers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "targetContainerName": "",
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "hostAliases": [
                                    {
                                        "hostnames": [
                                            ""
                                        ],
                                        "ip": ""
                                    }
                                ],
                                "hostIPC": true,
                                "hostNetwork": true,
                                "hostPID": true,
                                "hostname": "",
                                "imagePullSecrets": [
                                    {
                                        "name": ""
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "nodeName": "",
                                "os": {
                                    "name": ""
                                },
                                "preemptionPolicy": "",
                                "priority": 0,
                                "priorityClassName": "",
                                "readinessGates": [
                                    {
                                        "conditionType": ""
                                    }
                                ],
                                "restartPolicy": "",
                                "runtimeClassName": "",
                                "schedulerName": "",
                                "securityContext": {
                                    "fsGroup": 0,
                                    "fsGroupChangePolicy": "",
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "supplementalGroups": [
                                        0
                                    ],
                                    "sysctls": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "serviceAccount": "",
                                "serviceAccountName": "",
                                "setHostnameAsFQDN": true,
                                "shareProcessNamespace": true,
                                "subdomain": "",
                                "terminationGracePeriodSeconds": 0,
                                "tolerations": [
                                    {
                                        "effect": "",
                                        "key": "",
                                        "operator": "",
                                        "tolerationSeconds": 0,
                                        "value": ""
                                    }
                                ],
                                "topologySpreadConstraints": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "maxSkew": 0,
                                        "topologyKey": "",
                                        "whenUnsatisfiable": ""
                                    }
                                ],
                                "volumes": [
                                    {
                                        "awsElasticBlockStore": {
                                            "fsType": "",
                                            "partition": 0,
                                            "readOnly": true,
                                            "volumeID": ""
                                        },
                                        "azureDisk": {
                                            "cachingMode": "",
                                            "diskName": "",
                                            "diskURI": "",
                                            "fsType": "",
                                            "kind": "",
                                            "readOnly": true
                                        },
                                        "azureFile": {
                                            "readOnly": true,
                                            "secretName": "",
                                            "shareName": ""
                                        },
                                        "cephfs": {
                                            "monitors": [
                                                ""
                                            ],
                                            "path": "",
                                            "readOnly": true,
                                            "secretFile": "",
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "user": ""
                                        },
                                        "cinder": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "volumeID": ""
                                        },
                                        "configMap": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "key": "",
                                                    "mode": 0,
                                                    "path": ""
                                                }
                                            ],
                                            "name": "",
                                            "optional": true
                                        },
                                        "csi": {
                                            "driver": "",
                                            "fsType": "",
                                            "nodePublishSecretRef": {
                                                "name": ""
                                            },
                                            "readOnly": true
                                        },
                                        "downwardAPI": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "mode": 0,
                                                    "path": "",
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    }
                                                }
                                            ]
                                        },
                                        "emptyDir": {
                                            "medium": "",
                                            "sizeLimit": ""
                                        },
                                        "ephemeral": {
                                            "volumeClaimTemplate": {
                                                "metadata": {
                                                    "clusterName": "",
                                                    "creationTimestamp": "2020-12-12T%12:12:12Z",
                                                    "deletionGracePeriodSeconds": 0,
                                                    "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                                    "finalizers": [
                                                        ""
                                                    ],
                                                    "generateName": "",
                                                    "generation": 0,
                                                    "managedFields": [
                                                        {
                                                            "apiVersion": "",
                                                            "fieldsType": "",
                                                            "fieldsV1": {},
                                                            "manager": "",
                                                            "operation": "",
                                                            "subresource": "",
                                                            "time": "2020-12-12T%12:12:12Z"
                                                        }
                                                    ],
                                                    "name": "",
                                                    "namespace": "",
                                                    "ownerReferences": [
                                                        {
                                                            "apiVersion": "",
                                                            "blockOwnerDeletion": true,
                                                            "controller": true,
                                                            "kind": "",
                                                            "name": "",
                                                            "uid": ""
                                                        }
                                                    ],
                                                    "resourceVersion": "",
                                                    "selfLink": "",
                                                    "uid": ""
                                                },
                                                "spec": {
                                                    "accessModes": [
                                                        ""
                                                    ],
                                                    "dataSource": {
                                                        "apiGroup": "",
                                                        "kind": "",
                                                        "name": ""
                                                    },
                                                    "dataSourceRef": {
                                                        "apiGroup": "",
                                                        "kind": "",
                                                        "name": ""
                                                    },
                                                    "resources": {},
                                                    "selector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "storageClassName": "",
                                                    "volumeMode": "",
                                                    "volumeName": ""
                                                }
                                            }
                                        },
                                        "fc": {
                                            "fsType": "",
                                            "lun": 0,
                                            "readOnly": true,
                                            "targetWWNs": [
                                                ""
                                            ],
                                            "wwids": [
                                                ""
                                            ]
                                        },
                                        "flexVolume": {
                                            "driver": "",
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            }
                                        },
                                        "flocker": {
                                            "datasetName": "",
                                            "datasetUUID": ""
                                        },
                                        "gcePersistentDisk": {
                                            "fsType": "",
                                            "partition": 0,
                                            "pdName": "",
                                            "readOnly": true
                                        },
                                        "gitRepo": {
                                            "directory": "",
                                            "repository": "",
                                            "revision": ""
                                        },
                                        "glusterfs": {
                                            "endpoints": "",
                                            "path": "",
                                            "readOnly": true
                                        },
                                        "hostPath": {
                                            "path": "",
                                            "type": ""
                                        },
                                        "iscsi": {
                                            "chapAuthDiscovery": true,
                                            "chapAuthSession": true,
                                            "fsType": "",
                                            "initiatorName": "",
                                            "iqn": "",
                                            "iscsiInterface": "",
                                            "lun": 0,
                                            "portals": [
                                                ""
                                            ],
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "targetPortal": ""
                                        },
                                        "name": "",
                                        "nfs": {
                                            "path": "",
                                            "readOnly": true,
                                            "server": ""
                                        },
                                        "persistentVolumeClaim": {
                                            "claimName": "",
                                            "readOnly": true
                                        },
                                        "photonPersistentDisk": {
                                            "fsType": "",
                                            "pdID": ""
                                        },
                                        "portworxVolume": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "volumeID": ""
                                        },
                                        "projected": {
                                            "defaultMode": 0,
                                            "sources": [
                                                {
                                                    "configMap": {
                                                        "items": [
                                                            {
                                                                "key": "",
                                                                "mode": 0,
                                                                "path": ""
                                                            }
                                                        ],
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "fieldRef": {
                                                                    "apiVersion": "",
                                                                    "fieldPath": ""
                                                                },
                                                                "mode": 0,
                                                                "path": "",
                                                                "resourceFieldRef": {
                                                                    "containerName": "",
                                                                    "divisor": "",
                                                                    "resource": ""
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "secret": {
                                                        "items": [
                                                            {
                                                                "key": "",
                                                                "mode": 0,
                                                                "path": ""
                                                            }
                                                        ],
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "serviceAccountToken": {
                                                        "audience": "",
                                                        "expirationSeconds": 0,
                                                        "path": ""
                                                    }
                                                }
                                            ]
                                        },
                                        "quobyte": {
                                            "group": "",
                                            "readOnly": true,
                                            "registry": "",
                                            "tenant": "",
                                            "user": "",
                                            "volume": ""
                                        },
                                        "rbd": {
                                            "fsType": "",
                                            "image": "",
                                            "keyring": "",
                                            "monitors": [
                                                ""
                                            ],
                                            "pool": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "user": ""
                                        },
                                        "scaleIO": {
                                            "fsType": "",
                                            "gateway": "",
                                            "protectionDomain": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "sslEnabled": true,
                                            "storageMode": "",
                                            "storagePool": "",
                                            "system": "",
                                            "volumeName": ""
                                        },
                                        "secret": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "key": "",
                                                    "mode": 0,
                                                    "path": ""
                                                }
                                            ],
                                            "optional": true,
                                            "secretName": ""
                                        },
                                        "storageos": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "volumeName": "",
                                            "volumeNamespace": ""
                                        },
                                        "vsphereVolume": {
                                            "fsType": "",
                                            "storagePolicyID": "",
                                            "storagePolicyName": "",
                                            "volumePath": ""
                                        }
                                    }
                                ]
                            }
                        },
                        "ttlSecondsAfterFinished": 0
                    }
                },
                "schedule": "",
                "startingDeadlineSeconds": 0,
                "successfulJobsHistoryLimit": 0,
                "suspend": true
            },
            "status": {
                "active": [
                    {
                        "apiVersion": "",
                        "fieldPath": "",
                        "kind": "",
                        "name": "",
                        "namespace": "",
                        "resourceVersion": "",
                        "uid": ""
                    }
                ],
                "lastScheduleTime": "2020-12-12T%12:12:12Z",
                "lastSuccessfulTime": "2020-12-12T%12:12:12Z"
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//cronjobs/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//cronjobs/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//cronjobs//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//cronjobs//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "concurrencyPolicy": "",
                "failedJobsHistoryLimit": 0,
                "jobTemplate": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "backoffLimit": 0,
                        "completionMode": "",
                        "completions": 0,
                        "manualSelector": true,
                        "parallelism": 0,
                        "selector": {
                            "matchExpressions": [
                                {
                                    "key": "",
                                    "operator": "",
                                    "values": [
                                        ""
                                    ]
                                }
                            ]
                        },
                        "suspend": true,
                        "template": {
                            "metadata": {
                                "clusterName": "",
                                "creationTimestamp": "2020-12-12T%12:12:12Z",
                                "deletionGracePeriodSeconds": 0,
                                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                "finalizers": [
                                    ""
                                ],
                                "generateName": "",
                                "generation": 0,
                                "managedFields": [
                                    {
                                        "apiVersion": "",
                                        "fieldsType": "",
                                        "fieldsV1": {},
                                        "manager": "",
                                        "operation": "",
                                        "subresource": "",
                                        "time": "2020-12-12T%12:12:12Z"
                                    }
                                ],
                                "name": "",
                                "namespace": "",
                                "ownerReferences": [
                                    {
                                        "apiVersion": "",
                                        "blockOwnerDeletion": true,
                                        "controller": true,
                                        "kind": "",
                                        "name": "",
                                        "uid": ""
                                    }
                                ],
                                "resourceVersion": "",
                                "selfLink": "",
                                "uid": ""
                            },
                            "spec": {
                                "activeDeadlineSeconds": 0,
                                "affinity": {
                                    "nodeAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "preference": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ],
                                                    "matchFields": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ],
                                                    "matchFields": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "podAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "podAffinityTerm": {
                                                    "labelSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaceSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaces": [
                                                        ""
                                                    ],
                                                    "topologyKey": ""
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaceSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaces": [
                                                    ""
                                                ],
                                                "topologyKey": ""
                                            }
                                        ]
                                    },
                                    "podAntiAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "podAffinityTerm": {
                                                    "labelSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaceSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaces": [
                                                        ""
                                                    ],
                                                    "topologyKey": ""
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaceSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaces": [
                                                    ""
                                                ],
                                                "topologyKey": ""
                                            }
                                        ]
                                    }
                                },
                                "automountServiceAccountToken": true,
                                "containers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "dnsConfig": {
                                    "nameservers": [
                                        ""
                                    ],
                                    "options": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "searches": [
                                        ""
                                    ]
                                },
                                "dnsPolicy": "",
                                "enableServiceLinks": true,
                                "ephemeralContainers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "targetContainerName": "",
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "hostAliases": [
                                    {
                                        "hostnames": [
                                            ""
                                        ],
                                        "ip": ""
                                    }
                                ],
                                "hostIPC": true,
                                "hostNetwork": true,
                                "hostPID": true,
                                "hostname": "",
                                "imagePullSecrets": [
                                    {
                                        "name": ""
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "nodeName": "",
                                "os": {
                                    "name": ""
                                },
                                "preemptionPolicy": "",
                                "priority": 0,
                                "priorityClassName": "",
                                "readinessGates": [
                                    {
                                        "conditionType": ""
                                    }
                                ],
                                "restartPolicy": "",
                                "runtimeClassName": "",
                                "schedulerName": "",
                                "securityContext": {
                                    "fsGroup": 0,
                                    "fsGroupChangePolicy": "",
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "supplementalGroups": [
                                        0
                                    ],
                                    "sysctls": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "serviceAccount": "",
                                "serviceAccountName": "",
                                "setHostnameAsFQDN": true,
                                "shareProcessNamespace": true,
                                "subdomain": "",
                                "terminationGracePeriodSeconds": 0,
                                "tolerations": [
                                    {
                                        "effect": "",
                                        "key": "",
                                        "operator": "",
                                        "tolerationSeconds": 0,
                                        "value": ""
                                    }
                                ],
                                "topologySpreadConstraints": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "maxSkew": 0,
                                        "topologyKey": "",
                                        "whenUnsatisfiable": ""
                                    }
                                ],
                                "volumes": [
                                    {
                                        "awsElasticBlockStore": {
                                            "fsType": "",
                                            "partition": 0,
                                            "readOnly": true,
                                            "volumeID": ""
                                        },
                                        "azureDisk": {
                                            "cachingMode": "",
                                            "diskName": "",
                                            "diskURI": "",
                                            "fsType": "",
                                            "kind": "",
                                            "readOnly": true
                                        },
                                        "azureFile": {
                                            "readOnly": true,
                                            "secretName": "",
                                            "shareName": ""
                                        },
                                        "cephfs": {
                                            "monitors": [
                                                ""
                                            ],
                                            "path": "",
                                            "readOnly": true,
                                            "secretFile": "",
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "user": ""
                                        },
                                        "cinder": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "volumeID": ""
                                        },
                                        "configMap": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "key": "",
                                                    "mode": 0,
                                                    "path": ""
                                                }
                                            ],
                                            "name": "",
                                            "optional": true
                                        },
                                        "csi": {
                                            "driver": "",
                                            "fsType": "",
                                            "nodePublishSecretRef": {
                                                "name": ""
                                            },
                                            "readOnly": true
                                        },
                                        "downwardAPI": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "mode": 0,
                                                    "path": "",
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    }
                                                }
                                            ]
                                        },
                                        "emptyDir": {
                                            "medium": "",
                                            "sizeLimit": ""
                                        },
                                        "ephemeral": {
                                            "volumeClaimTemplate": {
                                                "metadata": {
                                                    "clusterName": "",
                                                    "creationTimestamp": "2020-12-12T%12:12:12Z",
                                                    "deletionGracePeriodSeconds": 0,
                                                    "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                                    "finalizers": [
                                                        ""
                                                    ],
                                                    "generateName": "",
                                                    "generation": 0,
                                                    "managedFields": [
                                                        {
                                                            "apiVersion": "",
                                                            "fieldsType": "",
                                                            "fieldsV1": {},
                                                            "manager": "",
                                                            "operation": "",
                                                            "subresource": "",
                                                            "time": "2020-12-12T%12:12:12Z"
                                                        }
                                                    ],
                                                    "name": "",
                                                    "namespace": "",
                                                    "ownerReferences": [
                                                        {
                                                            "apiVersion": "",
                                                            "blockOwnerDeletion": true,
                                                            "controller": true,
                                                            "kind": "",
                                                            "name": "",
                                                            "uid": ""
                                                        }
                                                    ],
                                                    "resourceVersion": "",
                                                    "selfLink": "",
                                                    "uid": ""
                                                },
                                                "spec": {
                                                    "accessModes": [
                                                        ""
                                                    ],
                                                    "dataSource": {
                                                        "apiGroup": "",
                                                        "kind": "",
                                                        "name": ""
                                                    },
                                                    "dataSourceRef": {
                                                        "apiGroup": "",
                                                        "kind": "",
                                                        "name": ""
                                                    },
                                                    "resources": {},
                                                    "selector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "storageClassName": "",
                                                    "volumeMode": "",
                                                    "volumeName": ""
                                                }
                                            }
                                        },
                                        "fc": {
                                            "fsType": "",
                                            "lun": 0,
                                            "readOnly": true,
                                            "targetWWNs": [
                                                ""
                                            ],
                                            "wwids": [
                                                ""
                                            ]
                                        },
                                        "flexVolume": {
                                            "driver": "",
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            }
                                        },
                                        "flocker": {
                                            "datasetName": "",
                                            "datasetUUID": ""
                                        },
                                        "gcePersistentDisk": {
                                            "fsType": "",
                                            "partition": 0,
                                            "pdName": "",
                                            "readOnly": true
                                        },
                                        "gitRepo": {
                                            "directory": "",
                                            "repository": "",
                                            "revision": ""
                                        },
                                        "glusterfs": {
                                            "endpoints": "",
                                            "path": "",
                                            "readOnly": true
                                        },
                                        "hostPath": {
                                            "path": "",
                                            "type": ""
                                        },
                                        "iscsi": {
                                            "chapAuthDiscovery": true,
                                            "chapAuthSession": true,
                                            "fsType": "",
                                            "initiatorName": "",
                                            "iqn": "",
                                            "iscsiInterface": "",
                                            "lun": 0,
                                            "portals": [
                                                ""
                                            ],
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "targetPortal": ""
                                        },
                                        "name": "",
                                        "nfs": {
                                            "path": "",
                                            "readOnly": true,
                                            "server": ""
                                        },
                                        "persistentVolumeClaim": {
                                            "claimName": "",
                                            "readOnly": true
                                        },
                                        "photonPersistentDisk": {
                                            "fsType": "",
                                            "pdID": ""
                                        },
                                        "portworxVolume": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "volumeID": ""
                                        },
                                        "projected": {
                                            "defaultMode": 0,
                                            "sources": [
                                                {
                                                    "configMap": {
                                                        "items": [
                                                            {
                                                                "key": "",
                                                                "mode": 0,
                                                                "path": ""
                                                            }
                                                        ],
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "fieldRef": {
                                                                    "apiVersion": "",
                                                                    "fieldPath": ""
                                                                },
                                                                "mode": 0,
                                                                "path": "",
                                                                "resourceFieldRef": {
                                                                    "containerName": "",
                                                                    "divisor": "",
                                                                    "resource": ""
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "secret": {
                                                        "items": [
                                                            {
                                                                "key": "",
                                                                "mode": 0,
                                                                "path": ""
                                                            }
                                                        ],
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "serviceAccountToken": {
                                                        "audience": "",
                                                        "expirationSeconds": 0,
                                                        "path": ""
                                                    }
                                                }
                                            ]
                                        },
                                        "quobyte": {
                                            "group": "",
                                            "readOnly": true,
                                            "registry": "",
                                            "tenant": "",
                                            "user": "",
                                            "volume": ""
                                        },
                                        "rbd": {
                                            "fsType": "",
                                            "image": "",
                                            "keyring": "",
                                            "monitors": [
                                                ""
                                            ],
                                            "pool": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "user": ""
                                        },
                                        "scaleIO": {
                                            "fsType": "",
                                            "gateway": "",
                                            "protectionDomain": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "sslEnabled": true,
                                            "storageMode": "",
                                            "storagePool": "",
                                            "system": "",
                                            "volumeName": ""
                                        },
                                        "secret": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "key": "",
                                                    "mode": 0,
                                                    "path": ""
                                                }
                                            ],
                                            "optional": true,
                                            "secretName": ""
                                        },
                                        "storageos": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "volumeName": "",
                                            "volumeNamespace": ""
                                        },
                                        "vsphereVolume": {
                                            "fsType": "",
                                            "storagePolicyID": "",
                                            "storagePolicyName": "",
                                            "volumePath": ""
                                        }
                                    }
                                ]
                            }
                        },
                        "ttlSecondsAfterFinished": 0
                    }
                },
                "schedule": "",
                "startingDeadlineSeconds": 0,
                "successfulJobsHistoryLimit": 0,
                "suspend": true
            },
            "status": {
                "active": [
                    {
                        "apiVersion": "",
                        "fieldPath": "",
                        "kind": "",
                        "name": "",
                        "namespace": "",
                        "resourceVersion": "",
                        "uid": ""
                    }
                ],
                "lastScheduleTime": "2020-12-12T%12:12:12Z",
                "lastSuccessfulTime": "2020-12-12T%12:12:12Z"
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//cronjobs//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//jobs",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//jobs",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "activeDeadlineSeconds": 0,
                "backoffLimit": 0,
                "completionMode": "",
                "completions": 0,
                "manualSelector": true,
                "parallelism": 0,
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "suspend": true,
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                },
                "ttlSecondsAfterFinished": 0
            },
            "status": {
                "active": 0,
                "completedIndexes": "",
                "completionTime": "2020-12-12T%12:12:12Z",
                "conditions": [
                    {
                        "lastProbeTime": "2020-12-12T%12:12:12Z",
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "failed": 0,
                "ready": 0,
                "startTime": "2020-12-12T%12:12:12Z",
                "succeeded": 0,
                "uncountedTerminatedPods": {
                    "failed": [
                        ""
                    ],
                    "succeeded": [
                        ""
                    ]
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//jobs",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//jobs/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//jobs/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "activeDeadlineSeconds": 0,
                "backoffLimit": 0,
                "completionMode": "",
                "completions": 0,
                "manualSelector": true,
                "parallelism": 0,
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "suspend": true,
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                },
                "ttlSecondsAfterFinished": 0
            },
            "status": {
                "active": 0,
                "completedIndexes": "",
                "completionTime": "2020-12-12T%12:12:12Z",
                "conditions": [
                    {
                        "lastProbeTime": "2020-12-12T%12:12:12Z",
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "failed": 0,
                "ready": 0,
                "startTime": "2020-12-12T%12:12:12Z",
                "succeeded": 0,
                "uncountedTerminatedPods": {
                    "failed": [
                        ""
                    ],
                    "succeeded": [
                        ""
                    ]
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//jobs/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//jobs/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//jobs//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//jobs//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "activeDeadlineSeconds": 0,
                "backoffLimit": 0,
                "completionMode": "",
                "completions": 0,
                "manualSelector": true,
                "parallelism": 0,
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "suspend": true,
                "template": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ],
                                            "matchFields": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "namespaces": [
                                                ""
                                            ],
                                            "topologyKey": ""
                                        },
                                        "weight": 0
                                    }
                                ],
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaceSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "namespaces": [
                                            ""
                                        ],
                                        "topologyKey": ""
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "dnsConfig": {
                            "nameservers": [
                                ""
                            ],
                            "options": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "searches": [
                                ""
                            ]
                        },
                        "dnsPolicy": "",
                        "enableServiceLinks": true,
                        "ephemeralContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "targetContainerName": "",
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "hostAliases": [
                            {
                                "hostnames": [
                                    ""
                                ],
                                "ip": ""
                            }
                        ],
                        "hostIPC": true,
                        "hostNetwork": true,
                        "hostPID": true,
                        "hostname": "",
                        "imagePullSecrets": [
                            {
                                "name": ""
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    ""
                                ],
                                "command": [
                                    ""
                                ],
                                "env": [
                                    {
                                        "name": "",
                                        "value": "",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            },
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            },
                                            "secretKeyRef": {
                                                "key": "",
                                                "name": "",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "",
                                            "optional": true
                                        },
                                        "prefix": "",
                                        "secretRef": {
                                            "name": "",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                ""
                                            ]
                                        },
                                        "httpGet": {
                                            "host": "",
                                            "httpHeaders": [
                                                {
                                                    "name": "",
                                                    "value": ""
                                                }
                                            ],
                                            "path": "",
                                            "port": "",
                                            "scheme": ""
                                        },
                                        "tcpSocket": {
                                            "host": "",
                                            "port": ""
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "name": "",
                                "ports": [
                                    {
                                        "containerPort": 0,
                                        "hostIP": "",
                                        "hostPort": 0,
                                        "name": "",
                                        "protocol": ""
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            ""
                                        ],
                                        "drop": [
                                            ""
                                        ]
                                    },
                                    "privileged": true,
                                    "procMount": "",
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            ""
                                        ]
                                    },
                                    "failureThreshold": 0,
                                    "grpc": {
                                        "port": 0,
                                        "service": ""
                                    },
                                    "httpGet": {
                                        "host": "",
                                        "httpHeaders": [
                                            {
                                                "name": "",
                                                "value": ""
                                            }
                                        ],
                                        "path": "",
                                        "port": "",
                                        "scheme": ""
                                    },
                                    "initialDelaySeconds": 0,
                                    "periodSeconds": 0,
                                    "successThreshold": 0,
                                    "tcpSocket": {
                                        "host": "",
                                        "port": ""
                                    },
                                    "terminationGracePeriodSeconds": 0,
                                    "timeoutSeconds": 0
                                },
                                "stdin": true,
                                "stdinOnce": true,
                                "terminationMessagePath": "",
                                "terminationMessagePolicy": "",
                                "tty": true,
                                "volumeDevices": [
                                    {
                                        "devicePath": "",
                                        "name": ""
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "",
                                        "mountPropagation": "",
                                        "name": "",
                                        "readOnly": true,
                                        "subPath": "",
                                        "subPathExpr": ""
                                    }
                                ],
                                "workingDir": ""
                            }
                        ],
                        "nodeName": "",
                        "os": {
                            "name": ""
                        },
                        "preemptionPolicy": "",
                        "priority": 0,
                        "priorityClassName": "",
                        "readinessGates": [
                            {
                                "conditionType": ""
                            }
                        ],
                        "restartPolicy": "",
                        "runtimeClassName": "",
                        "schedulerName": "",
                        "securityContext": {
                            "fsGroup": 0,
                            "fsGroupChangePolicy": "",
                            "runAsGroup": 0,
                            "runAsNonRoot": true,
                            "runAsUser": 0,
                            "seLinuxOptions": {
                                "level": "",
                                "role": "",
                                "type": "",
                                "user": ""
                            },
                            "seccompProfile": {
                                "localhostProfile": "",
                                "type": ""
                            },
                            "supplementalGroups": [
                                0
                            ],
                            "sysctls": [
                                {
                                    "name": "",
                                    "value": ""
                                }
                            ],
                            "windowsOptions": {
                                "gmsaCredentialSpec": "",
                                "gmsaCredentialSpecName": "",
                                "hostProcess": true,
                                "runAsUserName": ""
                            }
                        },
                        "serviceAccount": "",
                        "serviceAccountName": "",
                        "setHostnameAsFQDN": true,
                        "shareProcessNamespace": true,
                        "subdomain": "",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "",
                                "key": "",
                                "operator": "",
                                "tolerationSeconds": 0,
                                "value": ""
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "maxSkew": 0,
                                "topologyKey": "",
                                "whenUnsatisfiable": ""
                            }
                        ],
                        "volumes": [
                            {
                                "awsElasticBlockStore": {
                                    "fsType": "",
                                    "partition": 0,
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "azureDisk": {
                                    "cachingMode": "",
                                    "diskName": "",
                                    "diskURI": "",
                                    "fsType": "",
                                    "kind": "",
                                    "readOnly": true
                                },
                                "azureFile": {
                                    "readOnly": true,
                                    "secretName": "",
                                    "shareName": ""
                                },
                                "cephfs": {
                                    "monitors": [
                                        ""
                                    ],
                                    "path": "",
                                    "readOnly": true,
                                    "secretFile": "",
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "cinder": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeID": ""
                                },
                                "configMap": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "name": "",
                                    "optional": true
                                },
                                "csi": {
                                    "driver": "",
                                    "fsType": "",
                                    "nodePublishSecretRef": {
                                        "name": ""
                                    },
                                    "readOnly": true
                                },
                                "downwardAPI": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "",
                                                "fieldPath": ""
                                            },
                                            "mode": 0,
                                            "path": "",
                                            "resourceFieldRef": {
                                                "containerName": "",
                                                "divisor": "",
                                                "resource": ""
                                            }
                                        }
                                    ]
                                },
                                "emptyDir": {
                                    "medium": "",
                                    "sizeLimit": ""
                                },
                                "ephemeral": {
                                    "volumeClaimTemplate": {
                                        "metadata": {
                                            "clusterName": "",
                                            "creationTimestamp": "2020-12-12T%12:12:12Z",
                                            "deletionGracePeriodSeconds": 0,
                                            "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                            "finalizers": [
                                                ""
                                            ],
                                            "generateName": "",
                                            "generation": 0,
                                            "managedFields": [
                                                {
                                                    "apiVersion": "",
                                                    "fieldsType": "",
                                                    "fieldsV1": {},
                                                    "manager": "",
                                                    "operation": "",
                                                    "subresource": "",
                                                    "time": "2020-12-12T%12:12:12Z"
                                                }
                                            ],
                                            "name": "",
                                            "namespace": "",
                                            "ownerReferences": [
                                                {
                                                    "apiVersion": "",
                                                    "blockOwnerDeletion": true,
                                                    "controller": true,
                                                    "kind": "",
                                                    "name": "",
                                                    "uid": ""
                                                }
                                            ],
                                            "resourceVersion": "",
                                            "selfLink": "",
                                            "uid": ""
                                        },
                                        "spec": {
                                            "accessModes": [
                                                ""
                                            ],
                                            "dataSource": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "dataSourceRef": {
                                                "apiGroup": "",
                                                "kind": "",
                                                "name": ""
                                            },
                                            "resources": {},
                                            "selector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "",
                                                        "operator": "",
                                                        "values": [
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            "storageClassName": "",
                                            "volumeMode": "",
                                            "volumeName": ""
                                        }
                                    }
                                },
                                "fc": {
                                    "fsType": "",
                                    "lun": 0,
                                    "readOnly": true,
                                    "targetWWNs": [
                                        ""
                                    ],
                                    "wwids": [
                                        ""
                                    ]
                                },
                                "flexVolume": {
                                    "driver": "",
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    }
                                },
                                "flocker": {
                                    "datasetName": "",
                                    "datasetUUID": ""
                                },
                                "gcePersistentDisk": {
                                    "fsType": "",
                                    "partition": 0,
                                    "pdName": "",
                                    "readOnly": true
                                },
                                "gitRepo": {
                                    "directory": "",
                                    "repository": "",
                                    "revision": ""
                                },
                                "glusterfs": {
                                    "endpoints": "",
                                    "path": "",
                                    "readOnly": true
                                },
                                "hostPath": {
                                    "path": "",
                                    "type": ""
                                },
                                "iscsi": {
                                    "chapAuthDiscovery": true,
                                    "chapAuthSession": true,
                                    "fsType": "",
                                    "initiatorName": "",
                                    "iqn": "",
                                    "iscsiInterface": "",
                                    "lun": 0,
                                    "portals": [
                                        ""
                                    ],
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "targetPortal": ""
                                },
                                "name": "",
                                "nfs": {
                                    "path": "",
                                    "readOnly": true,
                                    "server": ""
                                },
                                "persistentVolumeClaim": {
                                    "claimName": "",
                                    "readOnly": true
                                },
                                "photonPersistentDisk": {
                                    "fsType": "",
                                    "pdID": ""
                                },
                                "portworxVolume": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "volumeID": ""
                                },
                                "projected": {
                                    "defaultMode": 0,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "apiVersion": "",
                                                            "fieldPath": ""
                                                        },
                                                        "mode": 0,
                                                        "path": "",
                                                        "resourceFieldRef": {
                                                            "containerName": "",
                                                            "divisor": "",
                                                            "resource": ""
                                                        }
                                                    }
                                                ]
                                            },
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "",
                                                        "mode": 0,
                                                        "path": ""
                                                    }
                                                ],
                                                "name": "",
                                                "optional": true
                                            },
                                            "serviceAccountToken": {
                                                "audience": "",
                                                "expirationSeconds": 0,
                                                "path": ""
                                            }
                                        }
                                    ]
                                },
                                "quobyte": {
                                    "group": "",
                                    "readOnly": true,
                                    "registry": "",
                                    "tenant": "",
                                    "user": "",
                                    "volume": ""
                                },
                                "rbd": {
                                    "fsType": "",
                                    "image": "",
                                    "keyring": "",
                                    "monitors": [
                                        ""
                                    ],
                                    "pool": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "user": ""
                                },
                                "scaleIO": {
                                    "fsType": "",
                                    "gateway": "",
                                    "protectionDomain": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "sslEnabled": true,
                                    "storageMode": "",
                                    "storagePool": "",
                                    "system": "",
                                    "volumeName": ""
                                },
                                "secret": {
                                    "defaultMode": 0,
                                    "items": [
                                        {
                                            "key": "",
                                            "mode": 0,
                                            "path": ""
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": ""
                                },
                                "storageos": {
                                    "fsType": "",
                                    "readOnly": true,
                                    "secretRef": {
                                        "name": ""
                                    },
                                    "volumeName": "",
                                    "volumeNamespace": ""
                                },
                                "vsphereVolume": {
                                    "fsType": "",
                                    "storagePolicyID": "",
                                    "storagePolicyName": "",
                                    "volumePath": ""
                                }
                            }
                        ]
                    }
                },
                "ttlSecondsAfterFinished": 0
            },
            "status": {
                "active": 0,
                "completedIndexes": "",
                "completionTime": "2020-12-12T%12:12:12Z",
                "conditions": [
                    {
                        "lastProbeTime": "2020-12-12T%12:12:12Z",
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "failed": 0,
                "ready": 0,
                "startTime": "2020-12-12T%12:12:12Z",
                "succeeded": 0,
                "uncountedTerminatedPods": {
                    "failed": [
                        ""
                    ],
                    "succeeded": [
                        ""
                    ]
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/namespaces//jobs//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/watch/cronjobs",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/watch/jobs",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/watch/namespaces//cronjobs",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/watch/namespaces//cronjobs/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/watch/namespaces//jobs",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1/watch/namespaces//jobs/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1beta1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1beta1/cronjobs",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1beta1/namespaces//cronjobs",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1beta1/namespaces//cronjobs",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "concurrencyPolicy": "",
                "failedJobsHistoryLimit": 0,
                "jobTemplate": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "backoffLimit": 0,
                        "completionMode": "",
                        "completions": 0,
                        "manualSelector": true,
                        "parallelism": 0,
                        "selector": {
                            "matchExpressions": [
                                {
                                    "key": "",
                                    "operator": "",
                                    "values": [
                                        ""
                                    ]
                                }
                            ]
                        },
                        "suspend": true,
                        "template": {
                            "metadata": {
                                "clusterName": "",
                                "creationTimestamp": "2020-12-12T%12:12:12Z",
                                "deletionGracePeriodSeconds": 0,
                                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                "finalizers": [
                                    ""
                                ],
                                "generateName": "",
                                "generation": 0,
                                "managedFields": [
                                    {
                                        "apiVersion": "",
                                        "fieldsType": "",
                                        "fieldsV1": {},
                                        "manager": "",
                                        "operation": "",
                                        "subresource": "",
                                        "time": "2020-12-12T%12:12:12Z"
                                    }
                                ],
                                "name": "",
                                "namespace": "",
                                "ownerReferences": [
                                    {
                                        "apiVersion": "",
                                        "blockOwnerDeletion": true,
                                        "controller": true,
                                        "kind": "",
                                        "name": "",
                                        "uid": ""
                                    }
                                ],
                                "resourceVersion": "",
                                "selfLink": "",
                                "uid": ""
                            },
                            "spec": {
                                "activeDeadlineSeconds": 0,
                                "affinity": {
                                    "nodeAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "preference": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ],
                                                    "matchFields": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ],
                                                    "matchFields": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "podAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "podAffinityTerm": {
                                                    "labelSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaceSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaces": [
                                                        ""
                                                    ],
                                                    "topologyKey": ""
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaceSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaces": [
                                                    ""
                                                ],
                                                "topologyKey": ""
                                            }
                                        ]
                                    },
                                    "podAntiAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "podAffinityTerm": {
                                                    "labelSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaceSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaces": [
                                                        ""
                                                    ],
                                                    "topologyKey": ""
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaceSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaces": [
                                                    ""
                                                ],
                                                "topologyKey": ""
                                            }
                                        ]
                                    }
                                },
                                "automountServiceAccountToken": true,
                                "containers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "dnsConfig": {
                                    "nameservers": [
                                        ""
                                    ],
                                    "options": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "searches": [
                                        ""
                                    ]
                                },
                                "dnsPolicy": "",
                                "enableServiceLinks": true,
                                "ephemeralContainers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "targetContainerName": "",
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "hostAliases": [
                                    {
                                        "hostnames": [
                                            ""
                                        ],
                                        "ip": ""
                                    }
                                ],
                                "hostIPC": true,
                                "hostNetwork": true,
                                "hostPID": true,
                                "hostname": "",
                                "imagePullSecrets": [
                                    {
                                        "name": ""
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "nodeName": "",
                                "os": {
                                    "name": ""
                                },
                                "preemptionPolicy": "",
                                "priority": 0,
                                "priorityClassName": "",
                                "readinessGates": [
                                    {
                                        "conditionType": ""
                                    }
                                ],
                                "restartPolicy": "",
                                "runtimeClassName": "",
                                "schedulerName": "",
                                "securityContext": {
                                    "fsGroup": 0,
                                    "fsGroupChangePolicy": "",
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "supplementalGroups": [
                                        0
                                    ],
                                    "sysctls": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "serviceAccount": "",
                                "serviceAccountName": "",
                                "setHostnameAsFQDN": true,
                                "shareProcessNamespace": true,
                                "subdomain": "",
                                "terminationGracePeriodSeconds": 0,
                                "tolerations": [
                                    {
                                        "effect": "",
                                        "key": "",
                                        "operator": "",
                                        "tolerationSeconds": 0,
                                        "value": ""
                                    }
                                ],
                                "topologySpreadConstraints": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "maxSkew": 0,
                                        "topologyKey": "",
                                        "whenUnsatisfiable": ""
                                    }
                                ],
                                "volumes": [
                                    {
                                        "awsElasticBlockStore": {
                                            "fsType": "",
                                            "partition": 0,
                                            "readOnly": true,
                                            "volumeID": ""
                                        },
                                        "azureDisk": {
                                            "cachingMode": "",
                                            "diskName": "",
                                            "diskURI": "",
                                            "fsType": "",
                                            "kind": "",
                                            "readOnly": true
                                        },
                                        "azureFile": {
                                            "readOnly": true,
                                            "secretName": "",
                                            "shareName": ""
                                        },
                                        "cephfs": {
                                            "monitors": [
                                                ""
                                            ],
                                            "path": "",
                                            "readOnly": true,
                                            "secretFile": "",
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "user": ""
                                        },
                                        "cinder": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "volumeID": ""
                                        },
                                        "configMap": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "key": "",
                                                    "mode": 0,
                                                    "path": ""
                                                }
                                            ],
                                            "name": "",
                                            "optional": true
                                        },
                                        "csi": {
                                            "driver": "",
                                            "fsType": "",
                                            "nodePublishSecretRef": {
                                                "name": ""
                                            },
                                            "readOnly": true
                                        },
                                        "downwardAPI": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "mode": 0,
                                                    "path": "",
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    }
                                                }
                                            ]
                                        },
                                        "emptyDir": {
                                            "medium": "",
                                            "sizeLimit": ""
                                        },
                                        "ephemeral": {
                                            "volumeClaimTemplate": {
                                                "metadata": {
                                                    "clusterName": "",
                                                    "creationTimestamp": "2020-12-12T%12:12:12Z",
                                                    "deletionGracePeriodSeconds": 0,
                                                    "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                                    "finalizers": [
                                                        ""
                                                    ],
                                                    "generateName": "",
                                                    "generation": 0,
                                                    "managedFields": [
                                                        {
                                                            "apiVersion": "",
                                                            "fieldsType": "",
                                                            "fieldsV1": {},
                                                            "manager": "",
                                                            "operation": "",
                                                            "subresource": "",
                                                            "time": "2020-12-12T%12:12:12Z"
                                                        }
                                                    ],
                                                    "name": "",
                                                    "namespace": "",
                                                    "ownerReferences": [
                                                        {
                                                            "apiVersion": "",
                                                            "blockOwnerDeletion": true,
                                                            "controller": true,
                                                            "kind": "",
                                                            "name": "",
                                                            "uid": ""
                                                        }
                                                    ],
                                                    "resourceVersion": "",
                                                    "selfLink": "",
                                                    "uid": ""
                                                },
                                                "spec": {
                                                    "accessModes": [
                                                        ""
                                                    ],
                                                    "dataSource": {
                                                        "apiGroup": "",
                                                        "kind": "",
                                                        "name": ""
                                                    },
                                                    "dataSourceRef": {
                                                        "apiGroup": "",
                                                        "kind": "",
                                                        "name": ""
                                                    },
                                                    "resources": {},
                                                    "selector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "storageClassName": "",
                                                    "volumeMode": "",
                                                    "volumeName": ""
                                                }
                                            }
                                        },
                                        "fc": {
                                            "fsType": "",
                                            "lun": 0,
                                            "readOnly": true,
                                            "targetWWNs": [
                                                ""
                                            ],
                                            "wwids": [
                                                ""
                                            ]
                                        },
                                        "flexVolume": {
                                            "driver": "",
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            }
                                        },
                                        "flocker": {
                                            "datasetName": "",
                                            "datasetUUID": ""
                                        },
                                        "gcePersistentDisk": {
                                            "fsType": "",
                                            "partition": 0,
                                            "pdName": "",
                                            "readOnly": true
                                        },
                                        "gitRepo": {
                                            "directory": "",
                                            "repository": "",
                                            "revision": ""
                                        },
                                        "glusterfs": {
                                            "endpoints": "",
                                            "path": "",
                                            "readOnly": true
                                        },
                                        "hostPath": {
                                            "path": "",
                                            "type": ""
                                        },
                                        "iscsi": {
                                            "chapAuthDiscovery": true,
                                            "chapAuthSession": true,
                                            "fsType": "",
                                            "initiatorName": "",
                                            "iqn": "",
                                            "iscsiInterface": "",
                                            "lun": 0,
                                            "portals": [
                                                ""
                                            ],
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "targetPortal": ""
                                        },
                                        "name": "",
                                        "nfs": {
                                            "path": "",
                                            "readOnly": true,
                                            "server": ""
                                        },
                                        "persistentVolumeClaim": {
                                            "claimName": "",
                                            "readOnly": true
                                        },
                                        "photonPersistentDisk": {
                                            "fsType": "",
                                            "pdID": ""
                                        },
                                        "portworxVolume": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "volumeID": ""
                                        },
                                        "projected": {
                                            "defaultMode": 0,
                                            "sources": [
                                                {
                                                    "configMap": {
                                                        "items": [
                                                            {
                                                                "key": "",
                                                                "mode": 0,
                                                                "path": ""
                                                            }
                                                        ],
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "fieldRef": {
                                                                    "apiVersion": "",
                                                                    "fieldPath": ""
                                                                },
                                                                "mode": 0,
                                                                "path": "",
                                                                "resourceFieldRef": {
                                                                    "containerName": "",
                                                                    "divisor": "",
                                                                    "resource": ""
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "secret": {
                                                        "items": [
                                                            {
                                                                "key": "",
                                                                "mode": 0,
                                                                "path": ""
                                                            }
                                                        ],
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "serviceAccountToken": {
                                                        "audience": "",
                                                        "expirationSeconds": 0,
                                                        "path": ""
                                                    }
                                                }
                                            ]
                                        },
                                        "quobyte": {
                                            "group": "",
                                            "readOnly": true,
                                            "registry": "",
                                            "tenant": "",
                                            "user": "",
                                            "volume": ""
                                        },
                                        "rbd": {
                                            "fsType": "",
                                            "image": "",
                                            "keyring": "",
                                            "monitors": [
                                                ""
                                            ],
                                            "pool": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "user": ""
                                        },
                                        "scaleIO": {
                                            "fsType": "",
                                            "gateway": "",
                                            "protectionDomain": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "sslEnabled": true,
                                            "storageMode": "",
                                            "storagePool": "",
                                            "system": "",
                                            "volumeName": ""
                                        },
                                        "secret": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "key": "",
                                                    "mode": 0,
                                                    "path": ""
                                                }
                                            ],
                                            "optional": true,
                                            "secretName": ""
                                        },
                                        "storageos": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "volumeName": "",
                                            "volumeNamespace": ""
                                        },
                                        "vsphereVolume": {
                                            "fsType": "",
                                            "storagePolicyID": "",
                                            "storagePolicyName": "",
                                            "volumePath": ""
                                        }
                                    }
                                ]
                            }
                        },
                        "ttlSecondsAfterFinished": 0
                    }
                },
                "schedule": "",
                "startingDeadlineSeconds": 0,
                "successfulJobsHistoryLimit": 0,
                "suspend": true
            },
            "status": {
                "active": [
                    {
                        "apiVersion": "",
                        "fieldPath": "",
                        "kind": "",
                        "name": "",
                        "namespace": "",
                        "resourceVersion": "",
                        "uid": ""
                    }
                ],
                "lastScheduleTime": "2020-12-12T%12:12:12Z",
                "lastSuccessfulTime": "2020-12-12T%12:12:12Z"
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1beta1/namespaces//cronjobs",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1beta1/namespaces//cronjobs/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1beta1/namespaces//cronjobs/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "concurrencyPolicy": "",
                "failedJobsHistoryLimit": 0,
                "jobTemplate": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "backoffLimit": 0,
                        "completionMode": "",
                        "completions": 0,
                        "manualSelector": true,
                        "parallelism": 0,
                        "selector": {
                            "matchExpressions": [
                                {
                                    "key": "",
                                    "operator": "",
                                    "values": [
                                        ""
                                    ]
                                }
                            ]
                        },
                        "suspend": true,
                        "template": {
                            "metadata": {
                                "clusterName": "",
                                "creationTimestamp": "2020-12-12T%12:12:12Z",
                                "deletionGracePeriodSeconds": 0,
                                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                "finalizers": [
                                    ""
                                ],
                                "generateName": "",
                                "generation": 0,
                                "managedFields": [
                                    {
                                        "apiVersion": "",
                                        "fieldsType": "",
                                        "fieldsV1": {},
                                        "manager": "",
                                        "operation": "",
                                        "subresource": "",
                                        "time": "2020-12-12T%12:12:12Z"
                                    }
                                ],
                                "name": "",
                                "namespace": "",
                                "ownerReferences": [
                                    {
                                        "apiVersion": "",
                                        "blockOwnerDeletion": true,
                                        "controller": true,
                                        "kind": "",
                                        "name": "",
                                        "uid": ""
                                    }
                                ],
                                "resourceVersion": "",
                                "selfLink": "",
                                "uid": ""
                            },
                            "spec": {
                                "activeDeadlineSeconds": 0,
                                "affinity": {
                                    "nodeAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "preference": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ],
                                                    "matchFields": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ],
                                                    "matchFields": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "podAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "podAffinityTerm": {
                                                    "labelSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaceSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaces": [
                                                        ""
                                                    ],
                                                    "topologyKey": ""
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaceSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaces": [
                                                    ""
                                                ],
                                                "topologyKey": ""
                                            }
                                        ]
                                    },
                                    "podAntiAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "podAffinityTerm": {
                                                    "labelSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaceSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaces": [
                                                        ""
                                                    ],
                                                    "topologyKey": ""
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaceSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaces": [
                                                    ""
                                                ],
                                                "topologyKey": ""
                                            }
                                        ]
                                    }
                                },
                                "automountServiceAccountToken": true,
                                "containers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "dnsConfig": {
                                    "nameservers": [
                                        ""
                                    ],
                                    "options": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "searches": [
                                        ""
                                    ]
                                },
                                "dnsPolicy": "",
                                "enableServiceLinks": true,
                                "ephemeralContainers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "targetContainerName": "",
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "hostAliases": [
                                    {
                                        "hostnames": [
                                            ""
                                        ],
                                        "ip": ""
                                    }
                                ],
                                "hostIPC": true,
                                "hostNetwork": true,
                                "hostPID": true,
                                "hostname": "",
                                "imagePullSecrets": [
                                    {
                                        "name": ""
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "nodeName": "",
                                "os": {
                                    "name": ""
                                },
                                "preemptionPolicy": "",
                                "priority": 0,
                                "priorityClassName": "",
                                "readinessGates": [
                                    {
                                        "conditionType": ""
                                    }
                                ],
                                "restartPolicy": "",
                                "runtimeClassName": "",
                                "schedulerName": "",
                                "securityContext": {
                                    "fsGroup": 0,
                                    "fsGroupChangePolicy": "",
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "supplementalGroups": [
                                        0
                                    ],
                                    "sysctls": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "serviceAccount": "",
                                "serviceAccountName": "",
                                "setHostnameAsFQDN": true,
                                "shareProcessNamespace": true,
                                "subdomain": "",
                                "terminationGracePeriodSeconds": 0,
                                "tolerations": [
                                    {
                                        "effect": "",
                                        "key": "",
                                        "operator": "",
                                        "tolerationSeconds": 0,
                                        "value": ""
                                    }
                                ],
                                "topologySpreadConstraints": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "maxSkew": 0,
                                        "topologyKey": "",
                                        "whenUnsatisfiable": ""
                                    }
                                ],
                                "volumes": [
                                    {
                                        "awsElasticBlockStore": {
                                            "fsType": "",
                                            "partition": 0,
                                            "readOnly": true,
                                            "volumeID": ""
                                        },
                                        "azureDisk": {
                                            "cachingMode": "",
                                            "diskName": "",
                                            "diskURI": "",
                                            "fsType": "",
                                            "kind": "",
                                            "readOnly": true
                                        },
                                        "azureFile": {
                                            "readOnly": true,
                                            "secretName": "",
                                            "shareName": ""
                                        },
                                        "cephfs": {
                                            "monitors": [
                                                ""
                                            ],
                                            "path": "",
                                            "readOnly": true,
                                            "secretFile": "",
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "user": ""
                                        },
                                        "cinder": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "volumeID": ""
                                        },
                                        "configMap": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "key": "",
                                                    "mode": 0,
                                                    "path": ""
                                                }
                                            ],
                                            "name": "",
                                            "optional": true
                                        },
                                        "csi": {
                                            "driver": "",
                                            "fsType": "",
                                            "nodePublishSecretRef": {
                                                "name": ""
                                            },
                                            "readOnly": true
                                        },
                                        "downwardAPI": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "mode": 0,
                                                    "path": "",
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    }
                                                }
                                            ]
                                        },
                                        "emptyDir": {
                                            "medium": "",
                                            "sizeLimit": ""
                                        },
                                        "ephemeral": {
                                            "volumeClaimTemplate": {
                                                "metadata": {
                                                    "clusterName": "",
                                                    "creationTimestamp": "2020-12-12T%12:12:12Z",
                                                    "deletionGracePeriodSeconds": 0,
                                                    "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                                    "finalizers": [
                                                        ""
                                                    ],
                                                    "generateName": "",
                                                    "generation": 0,
                                                    "managedFields": [
                                                        {
                                                            "apiVersion": "",
                                                            "fieldsType": "",
                                                            "fieldsV1": {},
                                                            "manager": "",
                                                            "operation": "",
                                                            "subresource": "",
                                                            "time": "2020-12-12T%12:12:12Z"
                                                        }
                                                    ],
                                                    "name": "",
                                                    "namespace": "",
                                                    "ownerReferences": [
                                                        {
                                                            "apiVersion": "",
                                                            "blockOwnerDeletion": true,
                                                            "controller": true,
                                                            "kind": "",
                                                            "name": "",
                                                            "uid": ""
                                                        }
                                                    ],
                                                    "resourceVersion": "",
                                                    "selfLink": "",
                                                    "uid": ""
                                                },
                                                "spec": {
                                                    "accessModes": [
                                                        ""
                                                    ],
                                                    "dataSource": {
                                                        "apiGroup": "",
                                                        "kind": "",
                                                        "name": ""
                                                    },
                                                    "dataSourceRef": {
                                                        "apiGroup": "",
                                                        "kind": "",
                                                        "name": ""
                                                    },
                                                    "resources": {},
                                                    "selector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "storageClassName": "",
                                                    "volumeMode": "",
                                                    "volumeName": ""
                                                }
                                            }
                                        },
                                        "fc": {
                                            "fsType": "",
                                            "lun": 0,
                                            "readOnly": true,
                                            "targetWWNs": [
                                                ""
                                            ],
                                            "wwids": [
                                                ""
                                            ]
                                        },
                                        "flexVolume": {
                                            "driver": "",
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            }
                                        },
                                        "flocker": {
                                            "datasetName": "",
                                            "datasetUUID": ""
                                        },
                                        "gcePersistentDisk": {
                                            "fsType": "",
                                            "partition": 0,
                                            "pdName": "",
                                            "readOnly": true
                                        },
                                        "gitRepo": {
                                            "directory": "",
                                            "repository": "",
                                            "revision": ""
                                        },
                                        "glusterfs": {
                                            "endpoints": "",
                                            "path": "",
                                            "readOnly": true
                                        },
                                        "hostPath": {
                                            "path": "",
                                            "type": ""
                                        },
                                        "iscsi": {
                                            "chapAuthDiscovery": true,
                                            "chapAuthSession": true,
                                            "fsType": "",
                                            "initiatorName": "",
                                            "iqn": "",
                                            "iscsiInterface": "",
                                            "lun": 0,
                                            "portals": [
                                                ""
                                            ],
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "targetPortal": ""
                                        },
                                        "name": "",
                                        "nfs": {
                                            "path": "",
                                            "readOnly": true,
                                            "server": ""
                                        },
                                        "persistentVolumeClaim": {
                                            "claimName": "",
                                            "readOnly": true
                                        },
                                        "photonPersistentDisk": {
                                            "fsType": "",
                                            "pdID": ""
                                        },
                                        "portworxVolume": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "volumeID": ""
                                        },
                                        "projected": {
                                            "defaultMode": 0,
                                            "sources": [
                                                {
                                                    "configMap": {
                                                        "items": [
                                                            {
                                                                "key": "",
                                                                "mode": 0,
                                                                "path": ""
                                                            }
                                                        ],
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "fieldRef": {
                                                                    "apiVersion": "",
                                                                    "fieldPath": ""
                                                                },
                                                                "mode": 0,
                                                                "path": "",
                                                                "resourceFieldRef": {
                                                                    "containerName": "",
                                                                    "divisor": "",
                                                                    "resource": ""
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "secret": {
                                                        "items": [
                                                            {
                                                                "key": "",
                                                                "mode": 0,
                                                                "path": ""
                                                            }
                                                        ],
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "serviceAccountToken": {
                                                        "audience": "",
                                                        "expirationSeconds": 0,
                                                        "path": ""
                                                    }
                                                }
                                            ]
                                        },
                                        "quobyte": {
                                            "group": "",
                                            "readOnly": true,
                                            "registry": "",
                                            "tenant": "",
                                            "user": "",
                                            "volume": ""
                                        },
                                        "rbd": {
                                            "fsType": "",
                                            "image": "",
                                            "keyring": "",
                                            "monitors": [
                                                ""
                                            ],
                                            "pool": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "user": ""
                                        },
                                        "scaleIO": {
                                            "fsType": "",
                                            "gateway": "",
                                            "protectionDomain": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "sslEnabled": true,
                                            "storageMode": "",
                                            "storagePool": "",
                                            "system": "",
                                            "volumeName": ""
                                        },
                                        "secret": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "key": "",
                                                    "mode": 0,
                                                    "path": ""
                                                }
                                            ],
                                            "optional": true,
                                            "secretName": ""
                                        },
                                        "storageos": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "volumeName": "",
                                            "volumeNamespace": ""
                                        },
                                        "vsphereVolume": {
                                            "fsType": "",
                                            "storagePolicyID": "",
                                            "storagePolicyName": "",
                                            "volumePath": ""
                                        }
                                    }
                                ]
                            }
                        },
                        "ttlSecondsAfterFinished": 0
                    }
                },
                "schedule": "",
                "startingDeadlineSeconds": 0,
                "successfulJobsHistoryLimit": 0,
                "suspend": true
            },
            "status": {
                "active": [
                    {
                        "apiVersion": "",
                        "fieldPath": "",
                        "kind": "",
                        "name": "",
                        "namespace": "",
                        "resourceVersion": "",
                        "uid": ""
                    }
                ],
                "lastScheduleTime": "2020-12-12T%12:12:12Z",
                "lastSuccessfulTime": "2020-12-12T%12:12:12Z"
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1beta1/namespaces//cronjobs/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1beta1/namespaces//cronjobs/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1beta1/namespaces//cronjobs//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1beta1/namespaces//cronjobs//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "concurrencyPolicy": "",
                "failedJobsHistoryLimit": 0,
                "jobTemplate": {
                    "metadata": {
                        "clusterName": "",
                        "creationTimestamp": "2020-12-12T%12:12:12Z",
                        "deletionGracePeriodSeconds": 0,
                        "deletionTimestamp": "2020-12-12T%12:12:12Z",
                        "finalizers": [
                            ""
                        ],
                        "generateName": "",
                        "generation": 0,
                        "managedFields": [
                            {
                                "apiVersion": "",
                                "fieldsType": "",
                                "fieldsV1": {},
                                "manager": "",
                                "operation": "",
                                "subresource": "",
                                "time": "2020-12-12T%12:12:12Z"
                            }
                        ],
                        "name": "",
                        "namespace": "",
                        "ownerReferences": [
                            {
                                "apiVersion": "",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "",
                                "name": "",
                                "uid": ""
                            }
                        ],
                        "resourceVersion": "",
                        "selfLink": "",
                        "uid": ""
                    },
                    "spec": {
                        "activeDeadlineSeconds": 0,
                        "backoffLimit": 0,
                        "completionMode": "",
                        "completions": 0,
                        "manualSelector": true,
                        "parallelism": 0,
                        "selector": {
                            "matchExpressions": [
                                {
                                    "key": "",
                                    "operator": "",
                                    "values": [
                                        ""
                                    ]
                                }
                            ]
                        },
                        "suspend": true,
                        "template": {
                            "metadata": {
                                "clusterName": "",
                                "creationTimestamp": "2020-12-12T%12:12:12Z",
                                "deletionGracePeriodSeconds": 0,
                                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                "finalizers": [
                                    ""
                                ],
                                "generateName": "",
                                "generation": 0,
                                "managedFields": [
                                    {
                                        "apiVersion": "",
                                        "fieldsType": "",
                                        "fieldsV1": {},
                                        "manager": "",
                                        "operation": "",
                                        "subresource": "",
                                        "time": "2020-12-12T%12:12:12Z"
                                    }
                                ],
                                "name": "",
                                "namespace": "",
                                "ownerReferences": [
                                    {
                                        "apiVersion": "",
                                        "blockOwnerDeletion": true,
                                        "controller": true,
                                        "kind": "",
                                        "name": "",
                                        "uid": ""
                                    }
                                ],
                                "resourceVersion": "",
                                "selfLink": "",
                                "uid": ""
                            },
                            "spec": {
                                "activeDeadlineSeconds": 0,
                                "affinity": {
                                    "nodeAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "preference": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ],
                                                    "matchFields": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ],
                                                    "matchFields": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "podAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "podAffinityTerm": {
                                                    "labelSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaceSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaces": [
                                                        ""
                                                    ],
                                                    "topologyKey": ""
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaceSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaces": [
                                                    ""
                                                ],
                                                "topologyKey": ""
                                            }
                                        ]
                                    },
                                    "podAntiAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "podAffinityTerm": {
                                                    "labelSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaceSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "namespaces": [
                                                        ""
                                                    ],
                                                    "topologyKey": ""
                                                },
                                                "weight": 0
                                            }
                                        ],
                                        "requiredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "labelSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaceSelector": {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "",
                                                            "operator": "",
                                                            "values": [
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "namespaces": [
                                                    ""
                                                ],
                                                "topologyKey": ""
                                            }
                                        ]
                                    }
                                },
                                "automountServiceAccountToken": true,
                                "containers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "dnsConfig": {
                                    "nameservers": [
                                        ""
                                    ],
                                    "options": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "searches": [
                                        ""
                                    ]
                                },
                                "dnsPolicy": "",
                                "enableServiceLinks": true,
                                "ephemeralContainers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "targetContainerName": "",
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "hostAliases": [
                                    {
                                        "hostnames": [
                                            ""
                                        ],
                                        "ip": ""
                                    }
                                ],
                                "hostIPC": true,
                                "hostNetwork": true,
                                "hostPID": true,
                                "hostname": "",
                                "imagePullSecrets": [
                                    {
                                        "name": ""
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "args": [
                                            ""
                                        ],
                                        "command": [
                                            ""
                                        ],
                                        "env": [
                                            {
                                                "name": "",
                                                "value": "",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    },
                                                    "secretKeyRef": {
                                                        "key": "",
                                                        "name": "",
                                                        "optional": true
                                                    }
                                                }
                                            }
                                        ],
                                        "envFrom": [
                                            {
                                                "configMapRef": {
                                                    "name": "",
                                                    "optional": true
                                                },
                                                "prefix": "",
                                                "secretRef": {
                                                    "name": "",
                                                    "optional": true
                                                }
                                            }
                                        ],
                                        "image": "",
                                        "imagePullPolicy": "",
                                        "lifecycle": {
                                            "postStart": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            },
                                            "preStop": {
                                                "exec": {
                                                    "command": [
                                                        ""
                                                    ]
                                                },
                                                "httpGet": {
                                                    "host": "",
                                                    "httpHeaders": [
                                                        {
                                                            "name": "",
                                                            "value": ""
                                                        }
                                                    ],
                                                    "path": "",
                                                    "port": "",
                                                    "scheme": ""
                                                },
                                                "tcpSocket": {
                                                    "host": "",
                                                    "port": ""
                                                }
                                            }
                                        },
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "name": "",
                                        "ports": [
                                            {
                                                "containerPort": 0,
                                                "hostIP": "",
                                                "hostPort": 0,
                                                "name": "",
                                                "protocol": ""
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": true,
                                            "capabilities": {
                                                "add": [
                                                    ""
                                                ],
                                                "drop": [
                                                    ""
                                                ]
                                            },
                                            "privileged": true,
                                            "procMount": "",
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 0,
                                            "runAsNonRoot": true,
                                            "runAsUser": 0,
                                            "seLinuxOptions": {
                                                "level": "",
                                                "role": "",
                                                "type": "",
                                                "user": ""
                                            },
                                            "seccompProfile": {
                                                "localhostProfile": "",
                                                "type": ""
                                            },
                                            "windowsOptions": {
                                                "gmsaCredentialSpec": "",
                                                "gmsaCredentialSpecName": "",
                                                "hostProcess": true,
                                                "runAsUserName": ""
                                            }
                                        },
                                        "startupProbe": {
                                            "exec": {
                                                "command": [
                                                    ""
                                                ]
                                            },
                                            "failureThreshold": 0,
                                            "grpc": {
                                                "port": 0,
                                                "service": ""
                                            },
                                            "httpGet": {
                                                "host": "",
                                                "httpHeaders": [
                                                    {
                                                        "name": "",
                                                        "value": ""
                                                    }
                                                ],
                                                "path": "",
                                                "port": "",
                                                "scheme": ""
                                            },
                                            "initialDelaySeconds": 0,
                                            "periodSeconds": 0,
                                            "successThreshold": 0,
                                            "tcpSocket": {
                                                "host": "",
                                                "port": ""
                                            },
                                            "terminationGracePeriodSeconds": 0,
                                            "timeoutSeconds": 0
                                        },
                                        "stdin": true,
                                        "stdinOnce": true,
                                        "terminationMessagePath": "",
                                        "terminationMessagePolicy": "",
                                        "tty": true,
                                        "volumeDevices": [
                                            {
                                                "devicePath": "",
                                                "name": ""
                                            }
                                        ],
                                        "volumeMounts": [
                                            {
                                                "mountPath": "",
                                                "mountPropagation": "",
                                                "name": "",
                                                "readOnly": true,
                                                "subPath": "",
                                                "subPathExpr": ""
                                            }
                                        ],
                                        "workingDir": ""
                                    }
                                ],
                                "nodeName": "",
                                "os": {
                                    "name": ""
                                },
                                "preemptionPolicy": "",
                                "priority": 0,
                                "priorityClassName": "",
                                "readinessGates": [
                                    {
                                        "conditionType": ""
                                    }
                                ],
                                "restartPolicy": "",
                                "runtimeClassName": "",
                                "schedulerName": "",
                                "securityContext": {
                                    "fsGroup": 0,
                                    "fsGroupChangePolicy": "",
                                    "runAsGroup": 0,
                                    "runAsNonRoot": true,
                                    "runAsUser": 0,
                                    "seLinuxOptions": {
                                        "level": "",
                                        "role": "",
                                        "type": "",
                                        "user": ""
                                    },
                                    "seccompProfile": {
                                        "localhostProfile": "",
                                        "type": ""
                                    },
                                    "supplementalGroups": [
                                        0
                                    ],
                                    "sysctls": [
                                        {
                                            "name": "",
                                            "value": ""
                                        }
                                    ],
                                    "windowsOptions": {
                                        "gmsaCredentialSpec": "",
                                        "gmsaCredentialSpecName": "",
                                        "hostProcess": true,
                                        "runAsUserName": ""
                                    }
                                },
                                "serviceAccount": "",
                                "serviceAccountName": "",
                                "setHostnameAsFQDN": true,
                                "shareProcessNamespace": true,
                                "subdomain": "",
                                "terminationGracePeriodSeconds": 0,
                                "tolerations": [
                                    {
                                        "effect": "",
                                        "key": "",
                                        "operator": "",
                                        "tolerationSeconds": 0,
                                        "value": ""
                                    }
                                ],
                                "topologySpreadConstraints": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "",
                                                    "operator": "",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "maxSkew": 0,
                                        "topologyKey": "",
                                        "whenUnsatisfiable": ""
                                    }
                                ],
                                "volumes": [
                                    {
                                        "awsElasticBlockStore": {
                                            "fsType": "",
                                            "partition": 0,
                                            "readOnly": true,
                                            "volumeID": ""
                                        },
                                        "azureDisk": {
                                            "cachingMode": "",
                                            "diskName": "",
                                            "diskURI": "",
                                            "fsType": "",
                                            "kind": "",
                                            "readOnly": true
                                        },
                                        "azureFile": {
                                            "readOnly": true,
                                            "secretName": "",
                                            "shareName": ""
                                        },
                                        "cephfs": {
                                            "monitors": [
                                                ""
                                            ],
                                            "path": "",
                                            "readOnly": true,
                                            "secretFile": "",
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "user": ""
                                        },
                                        "cinder": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "volumeID": ""
                                        },
                                        "configMap": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "key": "",
                                                    "mode": 0,
                                                    "path": ""
                                                }
                                            ],
                                            "name": "",
                                            "optional": true
                                        },
                                        "csi": {
                                            "driver": "",
                                            "fsType": "",
                                            "nodePublishSecretRef": {
                                                "name": ""
                                            },
                                            "readOnly": true
                                        },
                                        "downwardAPI": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "",
                                                        "fieldPath": ""
                                                    },
                                                    "mode": 0,
                                                    "path": "",
                                                    "resourceFieldRef": {
                                                        "containerName": "",
                                                        "divisor": "",
                                                        "resource": ""
                                                    }
                                                }
                                            ]
                                        },
                                        "emptyDir": {
                                            "medium": "",
                                            "sizeLimit": ""
                                        },
                                        "ephemeral": {
                                            "volumeClaimTemplate": {
                                                "metadata": {
                                                    "clusterName": "",
                                                    "creationTimestamp": "2020-12-12T%12:12:12Z",
                                                    "deletionGracePeriodSeconds": 0,
                                                    "deletionTimestamp": "2020-12-12T%12:12:12Z",
                                                    "finalizers": [
                                                        ""
                                                    ],
                                                    "generateName": "",
                                                    "generation": 0,
                                                    "managedFields": [
                                                        {
                                                            "apiVersion": "",
                                                            "fieldsType": "",
                                                            "fieldsV1": {},
                                                            "manager": "",
                                                            "operation": "",
                                                            "subresource": "",
                                                            "time": "2020-12-12T%12:12:12Z"
                                                        }
                                                    ],
                                                    "name": "",
                                                    "namespace": "",
                                                    "ownerReferences": [
                                                        {
                                                            "apiVersion": "",
                                                            "blockOwnerDeletion": true,
                                                            "controller": true,
                                                            "kind": "",
                                                            "name": "",
                                                            "uid": ""
                                                        }
                                                    ],
                                                    "resourceVersion": "",
                                                    "selfLink": "",
                                                    "uid": ""
                                                },
                                                "spec": {
                                                    "accessModes": [
                                                        ""
                                                    ],
                                                    "dataSource": {
                                                        "apiGroup": "",
                                                        "kind": "",
                                                        "name": ""
                                                    },
                                                    "dataSourceRef": {
                                                        "apiGroup": "",
                                                        "kind": "",
                                                        "name": ""
                                                    },
                                                    "resources": {},
                                                    "selector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "",
                                                                "operator": "",
                                                                "values": [
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "storageClassName": "",
                                                    "volumeMode": "",
                                                    "volumeName": ""
                                                }
                                            }
                                        },
                                        "fc": {
                                            "fsType": "",
                                            "lun": 0,
                                            "readOnly": true,
                                            "targetWWNs": [
                                                ""
                                            ],
                                            "wwids": [
                                                ""
                                            ]
                                        },
                                        "flexVolume": {
                                            "driver": "",
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            }
                                        },
                                        "flocker": {
                                            "datasetName": "",
                                            "datasetUUID": ""
                                        },
                                        "gcePersistentDisk": {
                                            "fsType": "",
                                            "partition": 0,
                                            "pdName": "",
                                            "readOnly": true
                                        },
                                        "gitRepo": {
                                            "directory": "",
                                            "repository": "",
                                            "revision": ""
                                        },
                                        "glusterfs": {
                                            "endpoints": "",
                                            "path": "",
                                            "readOnly": true
                                        },
                                        "hostPath": {
                                            "path": "",
                                            "type": ""
                                        },
                                        "iscsi": {
                                            "chapAuthDiscovery": true,
                                            "chapAuthSession": true,
                                            "fsType": "",
                                            "initiatorName": "",
                                            "iqn": "",
                                            "iscsiInterface": "",
                                            "lun": 0,
                                            "portals": [
                                                ""
                                            ],
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "targetPortal": ""
                                        },
                                        "name": "",
                                        "nfs": {
                                            "path": "",
                                            "readOnly": true,
                                            "server": ""
                                        },
                                        "persistentVolumeClaim": {
                                            "claimName": "",
                                            "readOnly": true
                                        },
                                        "photonPersistentDisk": {
                                            "fsType": "",
                                            "pdID": ""
                                        },
                                        "portworxVolume": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "volumeID": ""
                                        },
                                        "projected": {
                                            "defaultMode": 0,
                                            "sources": [
                                                {
                                                    "configMap": {
                                                        "items": [
                                                            {
                                                                "key": "",
                                                                "mode": 0,
                                                                "path": ""
                                                            }
                                                        ],
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "downwardAPI": {
                                                        "items": [
                                                            {
                                                                "fieldRef": {
                                                                    "apiVersion": "",
                                                                    "fieldPath": ""
                                                                },
                                                                "mode": 0,
                                                                "path": "",
                                                                "resourceFieldRef": {
                                                                    "containerName": "",
                                                                    "divisor": "",
                                                                    "resource": ""
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "secret": {
                                                        "items": [
                                                            {
                                                                "key": "",
                                                                "mode": 0,
                                                                "path": ""
                                                            }
                                                        ],
                                                        "name": "",
                                                        "optional": true
                                                    },
                                                    "serviceAccountToken": {
                                                        "audience": "",
                                                        "expirationSeconds": 0,
                                                        "path": ""
                                                    }
                                                }
                                            ]
                                        },
                                        "quobyte": {
                                            "group": "",
                                            "readOnly": true,
                                            "registry": "",
                                            "tenant": "",
                                            "user": "",
                                            "volume": ""
                                        },
                                        "rbd": {
                                            "fsType": "",
                                            "image": "",
                                            "keyring": "",
                                            "monitors": [
                                                ""
                                            ],
                                            "pool": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "user": ""
                                        },
                                        "scaleIO": {
                                            "fsType": "",
                                            "gateway": "",
                                            "protectionDomain": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "sslEnabled": true,
                                            "storageMode": "",
                                            "storagePool": "",
                                            "system": "",
                                            "volumeName": ""
                                        },
                                        "secret": {
                                            "defaultMode": 0,
                                            "items": [
                                                {
                                                    "key": "",
                                                    "mode": 0,
                                                    "path": ""
                                                }
                                            ],
                                            "optional": true,
                                            "secretName": ""
                                        },
                                        "storageos": {
                                            "fsType": "",
                                            "readOnly": true,
                                            "secretRef": {
                                                "name": ""
                                            },
                                            "volumeName": "",
                                            "volumeNamespace": ""
                                        },
                                        "vsphereVolume": {
                                            "fsType": "",
                                            "storagePolicyID": "",
                                            "storagePolicyName": "",
                                            "volumePath": ""
                                        }
                                    }
                                ]
                            }
                        },
                        "ttlSecondsAfterFinished": 0
                    }
                },
                "schedule": "",
                "startingDeadlineSeconds": 0,
                "successfulJobsHistoryLimit": 0,
                "suspend": true
            },
            "status": {
                "active": [
                    {
                        "apiVersion": "",
                        "fieldPath": "",
                        "kind": "",
                        "name": "",
                        "namespace": "",
                        "resourceVersion": "",
                        "uid": ""
                    }
                ],
                "lastScheduleTime": "2020-12-12T%12:12:12Z",
                "lastSuccessfulTime": "2020-12-12T%12:12:12Z"
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1beta1/namespaces//cronjobs//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1beta1/watch/cronjobs",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1beta1/watch/namespaces//cronjobs",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/batch/v1beta1/watch/namespaces//cronjobs/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/v1/certificatesigningrequests",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/v1/certificatesigningrequests",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "expirationSeconds": 0,
                "groups": [
                    ""
                ],
                "request": "",
                "signerName": "",
                "uid": "",
                "usages": [
                    ""
                ],
                "username": ""
            },
            "status": {
                "certificate": "",
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "lastUpdateTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/v1/certificatesigningrequests",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/v1/certificatesigningrequests/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/v1/certificatesigningrequests/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "expirationSeconds": 0,
                "groups": [
                    ""
                ],
                "request": "",
                "signerName": "",
                "uid": "",
                "usages": [
                    ""
                ],
                "username": ""
            },
            "status": {
                "certificate": "",
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "lastUpdateTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/v1/certificatesigningrequests/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/v1/certificatesigningrequests/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/v1/certificatesigningrequests//approval",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/v1/certificatesigningrequests//approval",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "expirationSeconds": 0,
                "groups": [
                    ""
                ],
                "request": "",
                "signerName": "",
                "uid": "",
                "usages": [
                    ""
                ],
                "username": ""
            },
            "status": {
                "certificate": "",
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "lastUpdateTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/v1/certificatesigningrequests//approval",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/v1/certificatesigningrequests//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/v1/certificatesigningrequests//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "expirationSeconds": 0,
                "groups": [
                    ""
                ],
                "request": "",
                "signerName": "",
                "uid": "",
                "usages": [
                    ""
                ],
                "username": ""
            },
            "status": {
                "certificate": "",
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "lastUpdateTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/v1/certificatesigningrequests//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/v1/watch/certificatesigningrequests",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/certificates.k8s.io/v1/watch/certificatesigningrequests/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/coordination.k8s.io/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/coordination.k8s.io/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/coordination.k8s.io/v1/leases",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/coordination.k8s.io/v1/namespaces//leases",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/coordination.k8s.io/v1/namespaces//leases",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "acquireTime": "2020-12-12T%12:12:12Z",
                "holderIdentity": "",
                "leaseDurationSeconds": 0,
                "leaseTransitions": 0,
                "renewTime": "2020-12-12T%12:12:12Z"
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/coordination.k8s.io/v1/namespaces//leases",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/coordination.k8s.io/v1/namespaces//leases/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/coordination.k8s.io/v1/namespaces//leases/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "acquireTime": "2020-12-12T%12:12:12Z",
                "holderIdentity": "",
                "leaseDurationSeconds": 0,
                "leaseTransitions": 0,
                "renewTime": "2020-12-12T%12:12:12Z"
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/coordination.k8s.io/v1/namespaces//leases/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/coordination.k8s.io/v1/namespaces//leases/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/coordination.k8s.io/v1/watch/leases",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/coordination.k8s.io/v1/watch/namespaces//leases",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/coordination.k8s.io/v1/watch/namespaces//leases/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1/endpointslices",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1/namespaces//endpointslices",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1/namespaces//endpointslices",
    "post",
    {
        "data": {
            "addressType": "",
            "apiVersion": "",
            "endpoints": [
                {
                    "addresses": [
                        ""
                    ],
                    "conditions": {
                        "ready": true,
                        "serving": true,
                        "terminating": true
                    },
                    "hints": {
                        "forZones": [
                            {
                                "name": ""
                            }
                        ]
                    },
                    "hostname": "",
                    "nodeName": "",
                    "targetRef": {
                        "apiVersion": "",
                        "fieldPath": "",
                        "kind": "",
                        "name": "",
                        "namespace": "",
                        "resourceVersion": "",
                        "uid": ""
                    },
                    "zone": ""
                }
            ],
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "ports": [
                {
                    "appProtocol": "",
                    "name": "",
                    "port": 0,
                    "protocol": ""
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1/namespaces//endpointslices",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1/namespaces//endpointslices/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1/namespaces//endpointslices/",
    "put",
    {
        "data": {
            "addressType": "",
            "apiVersion": "",
            "endpoints": [
                {
                    "addresses": [
                        ""
                    ],
                    "conditions": {
                        "ready": true,
                        "serving": true,
                        "terminating": true
                    },
                    "hints": {
                        "forZones": [
                            {
                                "name": ""
                            }
                        ]
                    },
                    "hostname": "",
                    "nodeName": "",
                    "targetRef": {
                        "apiVersion": "",
                        "fieldPath": "",
                        "kind": "",
                        "name": "",
                        "namespace": "",
                        "resourceVersion": "",
                        "uid": ""
                    },
                    "zone": ""
                }
            ],
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "ports": [
                {
                    "appProtocol": "",
                    "name": "",
                    "port": 0,
                    "protocol": ""
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1/namespaces//endpointslices/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1/namespaces//endpointslices/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1/watch/endpointslices",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1/watch/namespaces//endpointslices",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1/watch/namespaces//endpointslices/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1beta1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1beta1/endpointslices",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1beta1/namespaces//endpointslices",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1beta1/namespaces//endpointslices",
    "post",
    {
        "data": {
            "addressType": "",
            "apiVersion": "",
            "endpoints": [
                {
                    "addresses": [
                        ""
                    ],
                    "conditions": {
                        "ready": true,
                        "serving": true,
                        "terminating": true
                    },
                    "hints": {
                        "forZones": [
                            {
                                "name": ""
                            }
                        ]
                    },
                    "hostname": "",
                    "nodeName": "",
                    "targetRef": {
                        "apiVersion": "",
                        "fieldPath": "",
                        "kind": "",
                        "name": "",
                        "namespace": "",
                        "resourceVersion": "",
                        "uid": ""
                    }
                }
            ],
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "ports": [
                {
                    "appProtocol": "",
                    "name": "",
                    "port": 0,
                    "protocol": ""
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1beta1/namespaces//endpointslices",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1beta1/namespaces//endpointslices/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1beta1/namespaces//endpointslices/",
    "put",
    {
        "data": {
            "addressType": "",
            "apiVersion": "",
            "endpoints": [
                {
                    "addresses": [
                        ""
                    ],
                    "conditions": {
                        "ready": true,
                        "serving": true,
                        "terminating": true
                    },
                    "hints": {
                        "forZones": [
                            {
                                "name": ""
                            }
                        ]
                    },
                    "hostname": "",
                    "nodeName": "",
                    "targetRef": {
                        "apiVersion": "",
                        "fieldPath": "",
                        "kind": "",
                        "name": "",
                        "namespace": "",
                        "resourceVersion": "",
                        "uid": ""
                    }
                }
            ],
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "ports": [
                {
                    "appProtocol": "",
                    "name": "",
                    "port": 0,
                    "protocol": ""
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1beta1/namespaces//endpointslices/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1beta1/namespaces//endpointslices/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1beta1/watch/endpointslices",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1beta1/watch/namespaces//endpointslices",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/discovery.k8s.io/v1beta1/watch/namespaces//endpointslices/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1/events",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1/namespaces//events",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1/namespaces//events",
    "post",
    {
        "data": {
            "action": "",
            "apiVersion": "",
            "deprecatedCount": 0,
            "deprecatedFirstTimestamp": "2020-12-12T%12:12:12Z",
            "deprecatedLastTimestamp": "2020-12-12T%12:12:12Z",
            "deprecatedSource": {
                "component": "",
                "host": ""
            },
            "eventTime": "2020-12-12T%12:12:12Z",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "note": "",
            "reason": "",
            "regarding": {
                "apiVersion": "",
                "fieldPath": "",
                "kind": "",
                "name": "",
                "namespace": "",
                "resourceVersion": "",
                "uid": ""
            },
            "related": {
                "apiVersion": "",
                "fieldPath": "",
                "kind": "",
                "name": "",
                "namespace": "",
                "resourceVersion": "",
                "uid": ""
            },
            "reportingController": "",
            "reportingInstance": "",
            "series": {
                "count": 0,
                "lastObservedTime": "2020-12-12T%12:12:12Z"
            },
            "type": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1/namespaces//events",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1/namespaces//events/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1/namespaces//events/",
    "put",
    {
        "data": {
            "action": "",
            "apiVersion": "",
            "deprecatedCount": 0,
            "deprecatedFirstTimestamp": "2020-12-12T%12:12:12Z",
            "deprecatedLastTimestamp": "2020-12-12T%12:12:12Z",
            "deprecatedSource": {
                "component": "",
                "host": ""
            },
            "eventTime": "2020-12-12T%12:12:12Z",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "note": "",
            "reason": "",
            "regarding": {
                "apiVersion": "",
                "fieldPath": "",
                "kind": "",
                "name": "",
                "namespace": "",
                "resourceVersion": "",
                "uid": ""
            },
            "related": {
                "apiVersion": "",
                "fieldPath": "",
                "kind": "",
                "name": "",
                "namespace": "",
                "resourceVersion": "",
                "uid": ""
            },
            "reportingController": "",
            "reportingInstance": "",
            "series": {
                "count": 0,
                "lastObservedTime": "2020-12-12T%12:12:12Z"
            },
            "type": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1/namespaces//events/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1/namespaces//events/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1/watch/events",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1/watch/namespaces//events",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1/watch/namespaces//events/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1beta1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1beta1/events",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1beta1/namespaces//events",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1beta1/namespaces//events",
    "post",
    {
        "data": {
            "action": "",
            "apiVersion": "",
            "deprecatedCount": 0,
            "deprecatedFirstTimestamp": "2020-12-12T%12:12:12Z",
            "deprecatedLastTimestamp": "2020-12-12T%12:12:12Z",
            "deprecatedSource": {
                "component": "",
                "host": ""
            },
            "eventTime": "2020-12-12T%12:12:12Z",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "note": "",
            "reason": "",
            "regarding": {
                "apiVersion": "",
                "fieldPath": "",
                "kind": "",
                "name": "",
                "namespace": "",
                "resourceVersion": "",
                "uid": ""
            },
            "related": {
                "apiVersion": "",
                "fieldPath": "",
                "kind": "",
                "name": "",
                "namespace": "",
                "resourceVersion": "",
                "uid": ""
            },
            "reportingController": "",
            "reportingInstance": "",
            "series": {
                "count": 0,
                "lastObservedTime": "2020-12-12T%12:12:12Z"
            },
            "type": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1beta1/namespaces//events",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1beta1/namespaces//events/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1beta1/namespaces//events/",
    "put",
    {
        "data": {
            "action": "",
            "apiVersion": "",
            "deprecatedCount": 0,
            "deprecatedFirstTimestamp": "2020-12-12T%12:12:12Z",
            "deprecatedLastTimestamp": "2020-12-12T%12:12:12Z",
            "deprecatedSource": {
                "component": "",
                "host": ""
            },
            "eventTime": "2020-12-12T%12:12:12Z",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "note": "",
            "reason": "",
            "regarding": {
                "apiVersion": "",
                "fieldPath": "",
                "kind": "",
                "name": "",
                "namespace": "",
                "resourceVersion": "",
                "uid": ""
            },
            "related": {
                "apiVersion": "",
                "fieldPath": "",
                "kind": "",
                "name": "",
                "namespace": "",
                "resourceVersion": "",
                "uid": ""
            },
            "reportingController": "",
            "reportingInstance": "",
            "series": {
                "count": 0,
                "lastObservedTime": "2020-12-12T%12:12:12Z"
            },
            "type": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1beta1/namespaces//events/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1beta1/namespaces//events/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1beta1/watch/events",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1beta1/watch/namespaces//events",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/events.k8s.io/v1beta1/watch/namespaces//events/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/flowschemas",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/flowschemas",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "distinguisherMethod": {
                    "type": ""
                },
                "matchingPrecedence": 0,
                "priorityLevelConfiguration": {
                    "name": ""
                },
                "rules": [
                    {
                        "nonResourceRules": [
                            {
                                "nonResourceURLs": [
                                    ""
                                ],
                                "verbs": [
                                    ""
                                ]
                            }
                        ],
                        "resourceRules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "clusterScope": true,
                                "namespaces": [
                                    ""
                                ],
                                "resources": [
                                    ""
                                ],
                                "verbs": [
                                    ""
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "group": {
                                    "name": ""
                                },
                                "kind": "",
                                "serviceAccount": {
                                    "name": "",
                                    "namespace": ""
                                },
                                "user": {
                                    "name": ""
                                }
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/flowschemas",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/flowschemas/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/flowschemas/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "distinguisherMethod": {
                    "type": ""
                },
                "matchingPrecedence": 0,
                "priorityLevelConfiguration": {
                    "name": ""
                },
                "rules": [
                    {
                        "nonResourceRules": [
                            {
                                "nonResourceURLs": [
                                    ""
                                ],
                                "verbs": [
                                    ""
                                ]
                            }
                        ],
                        "resourceRules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "clusterScope": true,
                                "namespaces": [
                                    ""
                                ],
                                "resources": [
                                    ""
                                ],
                                "verbs": [
                                    ""
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "group": {
                                    "name": ""
                                },
                                "kind": "",
                                "serviceAccount": {
                                    "name": "",
                                    "namespace": ""
                                },
                                "user": {
                                    "name": ""
                                }
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/flowschemas/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/flowschemas/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/flowschemas//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/flowschemas//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "distinguisherMethod": {
                    "type": ""
                },
                "matchingPrecedence": 0,
                "priorityLevelConfiguration": {
                    "name": ""
                },
                "rules": [
                    {
                        "nonResourceRules": [
                            {
                                "nonResourceURLs": [
                                    ""
                                ],
                                "verbs": [
                                    ""
                                ]
                            }
                        ],
                        "resourceRules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "clusterScope": true,
                                "namespaces": [
                                    ""
                                ],
                                "resources": [
                                    ""
                                ],
                                "verbs": [
                                    ""
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "group": {
                                    "name": ""
                                },
                                "kind": "",
                                "serviceAccount": {
                                    "name": "",
                                    "namespace": ""
                                },
                                "user": {
                                    "name": ""
                                }
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/flowschemas//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/prioritylevelconfigurations",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/prioritylevelconfigurations",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "limited": {
                    "assuredConcurrencyShares": 0,
                    "limitResponse": {
                        "queuing": {
                            "handSize": 0,
                            "queueLengthLimit": 0,
                            "queues": 0
                        },
                        "type": ""
                    }
                },
                "type": ""
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/prioritylevelconfigurations",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/prioritylevelconfigurations/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/prioritylevelconfigurations/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "limited": {
                    "assuredConcurrencyShares": 0,
                    "limitResponse": {
                        "queuing": {
                            "handSize": 0,
                            "queueLengthLimit": 0,
                            "queues": 0
                        },
                        "type": ""
                    }
                },
                "type": ""
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/prioritylevelconfigurations/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/prioritylevelconfigurations/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/prioritylevelconfigurations//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/prioritylevelconfigurations//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "limited": {
                    "assuredConcurrencyShares": 0,
                    "limitResponse": {
                        "queuing": {
                            "handSize": 0,
                            "queueLengthLimit": 0,
                            "queues": 0
                        },
                        "type": ""
                    }
                },
                "type": ""
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/prioritylevelconfigurations//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/watch/flowschemas",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/watch/flowschemas/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/watch/prioritylevelconfigurations",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta1/watch/prioritylevelconfigurations/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/flowschemas",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/flowschemas",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "distinguisherMethod": {
                    "type": ""
                },
                "matchingPrecedence": 0,
                "priorityLevelConfiguration": {
                    "name": ""
                },
                "rules": [
                    {
                        "nonResourceRules": [
                            {
                                "nonResourceURLs": [
                                    ""
                                ],
                                "verbs": [
                                    ""
                                ]
                            }
                        ],
                        "resourceRules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "clusterScope": true,
                                "namespaces": [
                                    ""
                                ],
                                "resources": [
                                    ""
                                ],
                                "verbs": [
                                    ""
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "group": {
                                    "name": ""
                                },
                                "kind": "",
                                "serviceAccount": {
                                    "name": "",
                                    "namespace": ""
                                },
                                "user": {
                                    "name": ""
                                }
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/flowschemas",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/flowschemas/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/flowschemas/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "distinguisherMethod": {
                    "type": ""
                },
                "matchingPrecedence": 0,
                "priorityLevelConfiguration": {
                    "name": ""
                },
                "rules": [
                    {
                        "nonResourceRules": [
                            {
                                "nonResourceURLs": [
                                    ""
                                ],
                                "verbs": [
                                    ""
                                ]
                            }
                        ],
                        "resourceRules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "clusterScope": true,
                                "namespaces": [
                                    ""
                                ],
                                "resources": [
                                    ""
                                ],
                                "verbs": [
                                    ""
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "group": {
                                    "name": ""
                                },
                                "kind": "",
                                "serviceAccount": {
                                    "name": "",
                                    "namespace": ""
                                },
                                "user": {
                                    "name": ""
                                }
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/flowschemas/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/flowschemas/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/flowschemas//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/flowschemas//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "distinguisherMethod": {
                    "type": ""
                },
                "matchingPrecedence": 0,
                "priorityLevelConfiguration": {
                    "name": ""
                },
                "rules": [
                    {
                        "nonResourceRules": [
                            {
                                "nonResourceURLs": [
                                    ""
                                ],
                                "verbs": [
                                    ""
                                ]
                            }
                        ],
                        "resourceRules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "clusterScope": true,
                                "namespaces": [
                                    ""
                                ],
                                "resources": [
                                    ""
                                ],
                                "verbs": [
                                    ""
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "group": {
                                    "name": ""
                                },
                                "kind": "",
                                "serviceAccount": {
                                    "name": "",
                                    "namespace": ""
                                },
                                "user": {
                                    "name": ""
                                }
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/flowschemas//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/prioritylevelconfigurations",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/prioritylevelconfigurations",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "limited": {
                    "assuredConcurrencyShares": 0,
                    "limitResponse": {
                        "queuing": {
                            "handSize": 0,
                            "queueLengthLimit": 0,
                            "queues": 0
                        },
                        "type": ""
                    }
                },
                "type": ""
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/prioritylevelconfigurations",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/prioritylevelconfigurations/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/prioritylevelconfigurations/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "limited": {
                    "assuredConcurrencyShares": 0,
                    "limitResponse": {
                        "queuing": {
                            "handSize": 0,
                            "queueLengthLimit": 0,
                            "queues": 0
                        },
                        "type": ""
                    }
                },
                "type": ""
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/prioritylevelconfigurations/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/prioritylevelconfigurations/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/prioritylevelconfigurations//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/prioritylevelconfigurations//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "limited": {
                    "assuredConcurrencyShares": 0,
                    "limitResponse": {
                        "queuing": {
                            "handSize": 0,
                            "queueLengthLimit": 0,
                            "queues": 0
                        },
                        "type": ""
                    }
                },
                "type": ""
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/prioritylevelconfigurations//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/watch/flowschemas",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/watch/flowschemas/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/watch/prioritylevelconfigurations",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/flowcontrol.apiserver.k8s.io/v1beta2/watch/prioritylevelconfigurations/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/ingressclasses",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/ingressclasses",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "controller": "",
                "parameters": {
                    "apiGroup": "",
                    "kind": "",
                    "name": "",
                    "namespace": "",
                    "scope": ""
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/ingressclasses",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/ingressclasses/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/ingressclasses/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "controller": "",
                "parameters": {
                    "apiGroup": "",
                    "kind": "",
                    "name": "",
                    "namespace": "",
                    "scope": ""
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/ingressclasses/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/ingressclasses/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/ingresses",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//ingresses",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//ingresses",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "defaultBackend": {
                    "resource": {
                        "apiGroup": "",
                        "kind": "",
                        "name": ""
                    },
                    "service": {
                        "name": "",
                        "port": {
                            "name": "",
                            "number": 0
                        }
                    }
                },
                "ingressClassName": "",
                "rules": [
                    {
                        "host": "",
                        "http": {
                            "paths": [
                                {
                                    "backend": {
                                        "resource": {
                                            "apiGroup": "",
                                            "kind": "",
                                            "name": ""
                                        },
                                        "service": {
                                            "name": "",
                                            "port": {
                                                "name": "",
                                                "number": 0
                                            }
                                        }
                                    },
                                    "path": "",
                                    "pathType": ""
                                }
                            ]
                        }
                    }
                ],
                "tls": [
                    {
                        "hosts": [
                            ""
                        ],
                        "secretName": ""
                    }
                ]
            },
            "status": {
                "loadBalancer": {
                    "ingress": [
                        {
                            "hostname": "",
                            "ip": "",
                            "ports": [
                                {
                                    "error": "",
                                    "port": 0,
                                    "protocol": ""
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//ingresses",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//ingresses/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//ingresses/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "defaultBackend": {
                    "resource": {
                        "apiGroup": "",
                        "kind": "",
                        "name": ""
                    },
                    "service": {
                        "name": "",
                        "port": {
                            "name": "",
                            "number": 0
                        }
                    }
                },
                "ingressClassName": "",
                "rules": [
                    {
                        "host": "",
                        "http": {
                            "paths": [
                                {
                                    "backend": {
                                        "resource": {
                                            "apiGroup": "",
                                            "kind": "",
                                            "name": ""
                                        },
                                        "service": {
                                            "name": "",
                                            "port": {
                                                "name": "",
                                                "number": 0
                                            }
                                        }
                                    },
                                    "path": "",
                                    "pathType": ""
                                }
                            ]
                        }
                    }
                ],
                "tls": [
                    {
                        "hosts": [
                            ""
                        ],
                        "secretName": ""
                    }
                ]
            },
            "status": {
                "loadBalancer": {
                    "ingress": [
                        {
                            "hostname": "",
                            "ip": "",
                            "ports": [
                                {
                                    "error": "",
                                    "port": 0,
                                    "protocol": ""
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//ingresses/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//ingresses/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//ingresses//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//ingresses//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "defaultBackend": {
                    "resource": {
                        "apiGroup": "",
                        "kind": "",
                        "name": ""
                    },
                    "service": {
                        "name": "",
                        "port": {
                            "name": "",
                            "number": 0
                        }
                    }
                },
                "ingressClassName": "",
                "rules": [
                    {
                        "host": "",
                        "http": {
                            "paths": [
                                {
                                    "backend": {
                                        "resource": {
                                            "apiGroup": "",
                                            "kind": "",
                                            "name": ""
                                        },
                                        "service": {
                                            "name": "",
                                            "port": {
                                                "name": "",
                                                "number": 0
                                            }
                                        }
                                    },
                                    "path": "",
                                    "pathType": ""
                                }
                            ]
                        }
                    }
                ],
                "tls": [
                    {
                        "hosts": [
                            ""
                        ],
                        "secretName": ""
                    }
                ]
            },
            "status": {
                "loadBalancer": {
                    "ingress": [
                        {
                            "hostname": "",
                            "ip": "",
                            "ports": [
                                {
                                    "error": "",
                                    "port": 0,
                                    "protocol": ""
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//ingresses//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//networkpolicies",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//networkpolicies",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "egress": [
                    {
                        "ports": [
                            {
                                "endPort": 0,
                                "port": "",
                                "protocol": ""
                            }
                        ],
                        "to": [
                            {
                                "ipBlock": {
                                    "cidr": "",
                                    "except": [
                                        ""
                                    ]
                                },
                                "namespaceSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "podSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                ],
                "ingress": [
                    {
                        "from": [
                            {
                                "ipBlock": {
                                    "cidr": "",
                                    "except": [
                                        ""
                                    ]
                                },
                                "namespaceSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "podSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        ],
                        "ports": [
                            {
                                "endPort": 0,
                                "port": "",
                                "protocol": ""
                            }
                        ]
                    }
                ],
                "podSelector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "policyTypes": [
                    ""
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//networkpolicies",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//networkpolicies/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//networkpolicies/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "egress": [
                    {
                        "ports": [
                            {
                                "endPort": 0,
                                "port": "",
                                "protocol": ""
                            }
                        ],
                        "to": [
                            {
                                "ipBlock": {
                                    "cidr": "",
                                    "except": [
                                        ""
                                    ]
                                },
                                "namespaceSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "podSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                ],
                "ingress": [
                    {
                        "from": [
                            {
                                "ipBlock": {
                                    "cidr": "",
                                    "except": [
                                        ""
                                    ]
                                },
                                "namespaceSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "podSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "",
                                            "operator": "",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                }
                            }
                        ],
                        "ports": [
                            {
                                "endPort": 0,
                                "port": "",
                                "protocol": ""
                            }
                        ]
                    }
                ],
                "podSelector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                },
                "policyTypes": [
                    ""
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//networkpolicies/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/namespaces//networkpolicies/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/networkpolicies",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/watch/ingressclasses",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/watch/ingressclasses/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/watch/ingresses",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/watch/namespaces//ingresses",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/watch/namespaces//ingresses/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/watch/namespaces//networkpolicies",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/watch/namespaces//networkpolicies/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/networking.k8s.io/v1/watch/networkpolicies",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1/runtimeclasses",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1/runtimeclasses",
    "post",
    {
        "data": {
            "apiVersion": "",
            "handler": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "overhead": {},
            "scheduling": {
                "tolerations": [
                    {
                        "effect": "",
                        "key": "",
                        "operator": "",
                        "tolerationSeconds": 0,
                        "value": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1/runtimeclasses",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1/runtimeclasses/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1/runtimeclasses/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "handler": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "overhead": {},
            "scheduling": {
                "tolerations": [
                    {
                        "effect": "",
                        "key": "",
                        "operator": "",
                        "tolerationSeconds": 0,
                        "value": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1/runtimeclasses/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1/runtimeclasses/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1/watch/runtimeclasses",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1/watch/runtimeclasses/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1beta1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1beta1/runtimeclasses",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1beta1/runtimeclasses",
    "post",
    {
        "data": {
            "apiVersion": "",
            "handler": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "overhead": {},
            "scheduling": {
                "tolerations": [
                    {
                        "effect": "",
                        "key": "",
                        "operator": "",
                        "tolerationSeconds": 0,
                        "value": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1beta1/runtimeclasses",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1beta1/runtimeclasses/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1beta1/runtimeclasses/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "handler": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "overhead": {},
            "scheduling": {
                "tolerations": [
                    {
                        "effect": "",
                        "key": "",
                        "operator": "",
                        "tolerationSeconds": 0,
                        "value": ""
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1beta1/runtimeclasses/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1beta1/runtimeclasses/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1beta1/watch/runtimeclasses",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/node.k8s.io/v1beta1/watch/runtimeclasses/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1/namespaces//poddisruptionbudgets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1/namespaces//poddisruptionbudgets",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "maxUnavailable": "",
                "minAvailable": "",
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "observedGeneration": 0,
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentHealthy": 0,
                "desiredHealthy": 0,
                "disruptionsAllowed": 0,
                "expectedPods": 0,
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1/namespaces//poddisruptionbudgets",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1/namespaces//poddisruptionbudgets/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1/namespaces//poddisruptionbudgets/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "maxUnavailable": "",
                "minAvailable": "",
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "observedGeneration": 0,
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentHealthy": 0,
                "desiredHealthy": 0,
                "disruptionsAllowed": 0,
                "expectedPods": 0,
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1/namespaces//poddisruptionbudgets/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1/namespaces//poddisruptionbudgets/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1/namespaces//poddisruptionbudgets//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1/namespaces//poddisruptionbudgets//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "maxUnavailable": "",
                "minAvailable": "",
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "observedGeneration": 0,
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentHealthy": 0,
                "desiredHealthy": 0,
                "disruptionsAllowed": 0,
                "expectedPods": 0,
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1/namespaces//poddisruptionbudgets//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1/poddisruptionbudgets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1/watch/namespaces//poddisruptionbudgets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1/watch/namespaces//poddisruptionbudgets/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1/watch/poddisruptionbudgets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/namespaces//poddisruptionbudgets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/namespaces//poddisruptionbudgets",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "maxUnavailable": "",
                "minAvailable": "",
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "observedGeneration": 0,
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentHealthy": 0,
                "desiredHealthy": 0,
                "disruptionsAllowed": 0,
                "expectedPods": 0,
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/namespaces//poddisruptionbudgets",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/namespaces//poddisruptionbudgets/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/namespaces//poddisruptionbudgets/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "maxUnavailable": "",
                "minAvailable": "",
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "observedGeneration": 0,
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentHealthy": 0,
                "desiredHealthy": 0,
                "disruptionsAllowed": 0,
                "expectedPods": 0,
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/namespaces//poddisruptionbudgets/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/namespaces//poddisruptionbudgets/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/namespaces//poddisruptionbudgets//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/namespaces//poddisruptionbudgets//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "maxUnavailable": "",
                "minAvailable": "",
                "selector": {
                    "matchExpressions": [
                        {
                            "key": "",
                            "operator": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2020-12-12T%12:12:12Z",
                        "message": "",
                        "observedGeneration": 0,
                        "reason": "",
                        "status": "",
                        "type": ""
                    }
                ],
                "currentHealthy": 0,
                "desiredHealthy": 0,
                "disruptionsAllowed": 0,
                "expectedPods": 0,
                "observedGeneration": 0
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/namespaces//poddisruptionbudgets//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/poddisruptionbudgets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/podsecuritypolicies",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/podsecuritypolicies",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "allowPrivilegeEscalation": true,
                "allowedCSIDrivers": [
                    {
                        "name": ""
                    }
                ],
                "allowedCapabilities": [
                    ""
                ],
                "allowedFlexVolumes": [
                    {
                        "driver": ""
                    }
                ],
                "allowedHostPaths": [
                    {
                        "pathPrefix": "",
                        "readOnly": true
                    }
                ],
                "allowedProcMountTypes": [
                    ""
                ],
                "allowedUnsafeSysctls": [
                    ""
                ],
                "defaultAddCapabilities": [
                    ""
                ],
                "defaultAllowPrivilegeEscalation": true,
                "forbiddenSysctls": [
                    ""
                ],
                "fsGroup": {
                    "ranges": [
                        {
                            "max": 0,
                            "min": 0
                        }
                    ],
                    "rule": ""
                },
                "hostIPC": true,
                "hostNetwork": true,
                "hostPID": true,
                "hostPorts": [
                    {
                        "max": 0,
                        "min": 0
                    }
                ],
                "privileged": true,
                "readOnlyRootFilesystem": true,
                "requiredDropCapabilities": [
                    ""
                ],
                "runAsGroup": {
                    "ranges": [
                        {
                            "max": 0,
                            "min": 0
                        }
                    ],
                    "rule": ""
                },
                "runAsUser": {
                    "ranges": [
                        {
                            "max": 0,
                            "min": 0
                        }
                    ],
                    "rule": ""
                },
                "runtimeClass": {
                    "allowedRuntimeClassNames": [
                        ""
                    ],
                    "defaultRuntimeClassName": ""
                },
                "seLinux": {
                    "rule": "",
                    "seLinuxOptions": {
                        "level": "",
                        "role": "",
                        "type": "",
                        "user": ""
                    }
                },
                "supplementalGroups": {
                    "ranges": [
                        {
                            "max": 0,
                            "min": 0
                        }
                    ],
                    "rule": ""
                },
                "volumes": [
                    ""
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/podsecuritypolicies",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/podsecuritypolicies/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/podsecuritypolicies/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "allowPrivilegeEscalation": true,
                "allowedCSIDrivers": [
                    {
                        "name": ""
                    }
                ],
                "allowedCapabilities": [
                    ""
                ],
                "allowedFlexVolumes": [
                    {
                        "driver": ""
                    }
                ],
                "allowedHostPaths": [
                    {
                        "pathPrefix": "",
                        "readOnly": true
                    }
                ],
                "allowedProcMountTypes": [
                    ""
                ],
                "allowedUnsafeSysctls": [
                    ""
                ],
                "defaultAddCapabilities": [
                    ""
                ],
                "defaultAllowPrivilegeEscalation": true,
                "forbiddenSysctls": [
                    ""
                ],
                "fsGroup": {
                    "ranges": [
                        {
                            "max": 0,
                            "min": 0
                        }
                    ],
                    "rule": ""
                },
                "hostIPC": true,
                "hostNetwork": true,
                "hostPID": true,
                "hostPorts": [
                    {
                        "max": 0,
                        "min": 0
                    }
                ],
                "privileged": true,
                "readOnlyRootFilesystem": true,
                "requiredDropCapabilities": [
                    ""
                ],
                "runAsGroup": {
                    "ranges": [
                        {
                            "max": 0,
                            "min": 0
                        }
                    ],
                    "rule": ""
                },
                "runAsUser": {
                    "ranges": [
                        {
                            "max": 0,
                            "min": 0
                        }
                    ],
                    "rule": ""
                },
                "runtimeClass": {
                    "allowedRuntimeClassNames": [
                        ""
                    ],
                    "defaultRuntimeClassName": ""
                },
                "seLinux": {
                    "rule": "",
                    "seLinuxOptions": {
                        "level": "",
                        "role": "",
                        "type": "",
                        "user": ""
                    }
                },
                "supplementalGroups": {
                    "ranges": [
                        {
                            "max": 0,
                            "min": 0
                        }
                    ],
                    "rule": ""
                },
                "volumes": [
                    ""
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/podsecuritypolicies/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/podsecuritypolicies/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/watch/namespaces//poddisruptionbudgets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/watch/namespaces//poddisruptionbudgets/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/watch/poddisruptionbudgets",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/watch/podsecuritypolicies",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/policy/v1beta1/watch/podsecuritypolicies/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/clusterrolebindings",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/clusterrolebindings",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "roleRef": {
                "apiGroup": "",
                "kind": "",
                "name": ""
            },
            "subjects": [
                {
                    "apiGroup": "",
                    "kind": "",
                    "name": "",
                    "namespace": ""
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/clusterrolebindings",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "roleRef": {
                "apiGroup": "",
                "kind": "",
                "name": ""
            },
            "subjects": [
                {
                    "apiGroup": "",
                    "kind": "",
                    "name": "",
                    "namespace": ""
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/clusterroles",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/clusterroles",
    "post",
    {
        "data": {
            "aggregationRule": {
                "clusterRoleSelectors": [
                    {
                        "matchExpressions": [
                            {
                                "key": "",
                                "operator": "",
                                "values": [
                                    ""
                                ]
                            }
                        ]
                    }
                ]
            },
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "nonResourceURLs": [
                        ""
                    ],
                    "resourceNames": [
                        ""
                    ],
                    "resources": [
                        ""
                    ],
                    "verbs": [
                        ""
                    ]
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/clusterroles",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/clusterroles/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/clusterroles/",
    "put",
    {
        "data": {
            "aggregationRule": {
                "clusterRoleSelectors": [
                    {
                        "matchExpressions": [
                            {
                                "key": "",
                                "operator": "",
                                "values": [
                                    ""
                                ]
                            }
                        ]
                    }
                ]
            },
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "nonResourceURLs": [
                        ""
                    ],
                    "resourceNames": [
                        ""
                    ],
                    "resources": [
                        ""
                    ],
                    "verbs": [
                        ""
                    ]
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/clusterroles/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/clusterroles/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/namespaces//rolebindings",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/namespaces//rolebindings",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "roleRef": {
                "apiGroup": "",
                "kind": "",
                "name": ""
            },
            "subjects": [
                {
                    "apiGroup": "",
                    "kind": "",
                    "name": "",
                    "namespace": ""
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/namespaces//rolebindings",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/namespaces//rolebindings/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/namespaces//rolebindings/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "roleRef": {
                "apiGroup": "",
                "kind": "",
                "name": ""
            },
            "subjects": [
                {
                    "apiGroup": "",
                    "kind": "",
                    "name": "",
                    "namespace": ""
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/namespaces//rolebindings/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/namespaces//rolebindings/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/namespaces//roles",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/namespaces//roles",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "nonResourceURLs": [
                        ""
                    ],
                    "resourceNames": [
                        ""
                    ],
                    "resources": [
                        ""
                    ],
                    "verbs": [
                        ""
                    ]
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/namespaces//roles",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/namespaces//roles/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/namespaces//roles/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "nonResourceURLs": [
                        ""
                    ],
                    "resourceNames": [
                        ""
                    ],
                    "resources": [
                        ""
                    ],
                    "verbs": [
                        ""
                    ]
                }
            ]
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/namespaces//roles/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/namespaces//roles/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/rolebindings",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/roles",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/watch/clusterrolebindings",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/watch/clusterrolebindings/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/watch/clusterroles",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/watch/clusterroles/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/watch/namespaces//rolebindings",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/watch/namespaces//rolebindings/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/watch/namespaces//roles",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/watch/namespaces//roles/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/watch/rolebindings",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/rbac.authorization.k8s.io/v1/watch/roles",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/scheduling.k8s.io/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/scheduling.k8s.io/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/scheduling.k8s.io/v1/priorityclasses",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/scheduling.k8s.io/v1/priorityclasses",
    "post",
    {
        "data": {
            "apiVersion": "",
            "description": "",
            "globalDefault": true,
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "preemptionPolicy": "",
            "value": 0
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/scheduling.k8s.io/v1/priorityclasses",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/scheduling.k8s.io/v1/priorityclasses/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/scheduling.k8s.io/v1/priorityclasses/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "description": "",
            "globalDefault": true,
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "preemptionPolicy": "",
            "value": 0
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/scheduling.k8s.io/v1/priorityclasses/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/scheduling.k8s.io/v1/priorityclasses/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/scheduling.k8s.io/v1/watch/priorityclasses",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/scheduling.k8s.io/v1/watch/priorityclasses/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/csidrivers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/csidrivers",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "attachRequired": true,
                "fsGroupPolicy": "",
                "podInfoOnMount": true,
                "requiresRepublish": true,
                "storageCapacity": true,
                "tokenRequests": [
                    {
                        "audience": "",
                        "expirationSeconds": 0
                    }
                ],
                "volumeLifecycleModes": [
                    ""
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/csidrivers",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/csidrivers/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/csidrivers/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "attachRequired": true,
                "fsGroupPolicy": "",
                "podInfoOnMount": true,
                "requiresRepublish": true,
                "storageCapacity": true,
                "tokenRequests": [
                    {
                        "audience": "",
                        "expirationSeconds": 0
                    }
                ],
                "volumeLifecycleModes": [
                    ""
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/csidrivers/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/csidrivers/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/csinodes",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/csinodes",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "drivers": [
                    {
                        "allocatable": {
                            "count": 0
                        },
                        "name": "",
                        "nodeID": "",
                        "topologyKeys": [
                            ""
                        ]
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/csinodes",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/csinodes/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/csinodes/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "drivers": [
                    {
                        "allocatable": {
                            "count": 0
                        },
                        "name": "",
                        "nodeID": "",
                        "topologyKeys": [
                            ""
                        ]
                    }
                ]
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/csinodes/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/csinodes/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/storageclasses",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/storageclasses",
    "post",
    {
        "data": {
            "allowVolumeExpansion": true,
            "allowedTopologies": [
                {
                    "matchLabelExpressions": [
                        {
                            "key": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                }
            ],
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "mountOptions": [
                ""
            ],
            "provisioner": "",
            "reclaimPolicy": "",
            "volumeBindingMode": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/storageclasses",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/storageclasses/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/storageclasses/",
    "put",
    {
        "data": {
            "allowVolumeExpansion": true,
            "allowedTopologies": [
                {
                    "matchLabelExpressions": [
                        {
                            "key": "",
                            "values": [
                                ""
                            ]
                        }
                    ]
                }
            ],
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "mountOptions": [
                ""
            ],
            "provisioner": "",
            "reclaimPolicy": "",
            "volumeBindingMode": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/storageclasses/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/storageclasses/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/volumeattachments",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/volumeattachments",
    "post",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "attacher": "",
                "nodeName": "",
                "source": {
                    "inlineVolumeSpec": {
                        "accessModes": [
                            ""
                        ],
                        "awsElasticBlockStore": {
                            "fsType": "",
                            "partition": 0,
                            "readOnly": true,
                            "volumeID": ""
                        },
                        "azureDisk": {
                            "cachingMode": "",
                            "diskName": "",
                            "diskURI": "",
                            "fsType": "",
                            "kind": "",
                            "readOnly": true
                        },
                        "azureFile": {
                            "readOnly": true,
                            "secretName": "",
                            "secretNamespace": "",
                            "shareName": ""
                        },
                        "cephfs": {
                            "monitors": [
                                ""
                            ],
                            "path": "",
                            "readOnly": true,
                            "secretFile": "",
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "user": ""
                        },
                        "cinder": {
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "volumeID": ""
                        },
                        "claimRef": {
                            "apiVersion": "",
                            "fieldPath": "",
                            "kind": "",
                            "name": "",
                            "namespace": "",
                            "resourceVersion": "",
                            "uid": ""
                        },
                        "csi": {
                            "controllerExpandSecretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "controllerPublishSecretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "driver": "",
                            "fsType": "",
                            "nodePublishSecretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "nodeStageSecretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "readOnly": true,
                            "volumeHandle": ""
                        },
                        "fc": {
                            "fsType": "",
                            "lun": 0,
                            "readOnly": true,
                            "targetWWNs": [
                                ""
                            ],
                            "wwids": [
                                ""
                            ]
                        },
                        "flexVolume": {
                            "driver": "",
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            }
                        },
                        "flocker": {
                            "datasetName": "",
                            "datasetUUID": ""
                        },
                        "gcePersistentDisk": {
                            "fsType": "",
                            "partition": 0,
                            "pdName": "",
                            "readOnly": true
                        },
                        "glusterfs": {
                            "endpoints": "",
                            "endpointsNamespace": "",
                            "path": "",
                            "readOnly": true
                        },
                        "hostPath": {
                            "path": "",
                            "type": ""
                        },
                        "iscsi": {
                            "chapAuthDiscovery": true,
                            "chapAuthSession": true,
                            "fsType": "",
                            "initiatorName": "",
                            "iqn": "",
                            "iscsiInterface": "",
                            "lun": 0,
                            "portals": [
                                ""
                            ],
                            "readOnly": true,
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "targetPortal": ""
                        },
                        "local": {
                            "fsType": "",
                            "path": ""
                        },
                        "mountOptions": [
                            ""
                        ],
                        "nfs": {
                            "path": "",
                            "readOnly": true,
                            "server": ""
                        },
                        "nodeAffinity": {
                            "required": {
                                "nodeSelectorTerms": [
                                    {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ],
                                        "matchFields": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "persistentVolumeReclaimPolicy": "",
                        "photonPersistentDisk": {
                            "fsType": "",
                            "pdID": ""
                        },
                        "portworxVolume": {
                            "fsType": "",
                            "readOnly": true,
                            "volumeID": ""
                        },
                        "quobyte": {
                            "group": "",
                            "readOnly": true,
                            "registry": "",
                            "tenant": "",
                            "user": "",
                            "volume": ""
                        },
                        "rbd": {
                            "fsType": "",
                            "image": "",
                            "keyring": "",
                            "monitors": [
                                ""
                            ],
                            "pool": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "user": ""
                        },
                        "scaleIO": {
                            "fsType": "",
                            "gateway": "",
                            "protectionDomain": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "sslEnabled": true,
                            "storageMode": "",
                            "storagePool": "",
                            "system": "",
                            "volumeName": ""
                        },
                        "storageClassName": "",
                        "storageos": {
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "apiVersion": "",
                                "fieldPath": "",
                                "kind": "",
                                "name": "",
                                "namespace": "",
                                "resourceVersion": "",
                                "uid": ""
                            },
                            "volumeName": "",
                            "volumeNamespace": ""
                        },
                        "volumeMode": "",
                        "vsphereVolume": {
                            "fsType": "",
                            "storagePolicyID": "",
                            "storagePolicyName": "",
                            "volumePath": ""
                        }
                    },
                    "persistentVolumeName": ""
                }
            },
            "status": {
                "attachError": {
                    "message": "",
                    "time": "2020-12-12T%12:12:12Z"
                },
                "attached": true,
                "detachError": {
                    "message": "",
                    "time": "2020-12-12T%12:12:12Z"
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/volumeattachments",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/volumeattachments/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/volumeattachments/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "attacher": "",
                "nodeName": "",
                "source": {
                    "inlineVolumeSpec": {
                        "accessModes": [
                            ""
                        ],
                        "awsElasticBlockStore": {
                            "fsType": "",
                            "partition": 0,
                            "readOnly": true,
                            "volumeID": ""
                        },
                        "azureDisk": {
                            "cachingMode": "",
                            "diskName": "",
                            "diskURI": "",
                            "fsType": "",
                            "kind": "",
                            "readOnly": true
                        },
                        "azureFile": {
                            "readOnly": true,
                            "secretName": "",
                            "secretNamespace": "",
                            "shareName": ""
                        },
                        "cephfs": {
                            "monitors": [
                                ""
                            ],
                            "path": "",
                            "readOnly": true,
                            "secretFile": "",
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "user": ""
                        },
                        "cinder": {
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "volumeID": ""
                        },
                        "claimRef": {
                            "apiVersion": "",
                            "fieldPath": "",
                            "kind": "",
                            "name": "",
                            "namespace": "",
                            "resourceVersion": "",
                            "uid": ""
                        },
                        "csi": {
                            "controllerExpandSecretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "controllerPublishSecretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "driver": "",
                            "fsType": "",
                            "nodePublishSecretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "nodeStageSecretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "readOnly": true,
                            "volumeHandle": ""
                        },
                        "fc": {
                            "fsType": "",
                            "lun": 0,
                            "readOnly": true,
                            "targetWWNs": [
                                ""
                            ],
                            "wwids": [
                                ""
                            ]
                        },
                        "flexVolume": {
                            "driver": "",
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            }
                        },
                        "flocker": {
                            "datasetName": "",
                            "datasetUUID": ""
                        },
                        "gcePersistentDisk": {
                            "fsType": "",
                            "partition": 0,
                            "pdName": "",
                            "readOnly": true
                        },
                        "glusterfs": {
                            "endpoints": "",
                            "endpointsNamespace": "",
                            "path": "",
                            "readOnly": true
                        },
                        "hostPath": {
                            "path": "",
                            "type": ""
                        },
                        "iscsi": {
                            "chapAuthDiscovery": true,
                            "chapAuthSession": true,
                            "fsType": "",
                            "initiatorName": "",
                            "iqn": "",
                            "iscsiInterface": "",
                            "lun": 0,
                            "portals": [
                                ""
                            ],
                            "readOnly": true,
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "targetPortal": ""
                        },
                        "local": {
                            "fsType": "",
                            "path": ""
                        },
                        "mountOptions": [
                            ""
                        ],
                        "nfs": {
                            "path": "",
                            "readOnly": true,
                            "server": ""
                        },
                        "nodeAffinity": {
                            "required": {
                                "nodeSelectorTerms": [
                                    {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ],
                                        "matchFields": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "persistentVolumeReclaimPolicy": "",
                        "photonPersistentDisk": {
                            "fsType": "",
                            "pdID": ""
                        },
                        "portworxVolume": {
                            "fsType": "",
                            "readOnly": true,
                            "volumeID": ""
                        },
                        "quobyte": {
                            "group": "",
                            "readOnly": true,
                            "registry": "",
                            "tenant": "",
                            "user": "",
                            "volume": ""
                        },
                        "rbd": {
                            "fsType": "",
                            "image": "",
                            "keyring": "",
                            "monitors": [
                                ""
                            ],
                            "pool": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "user": ""
                        },
                        "scaleIO": {
                            "fsType": "",
                            "gateway": "",
                            "protectionDomain": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "sslEnabled": true,
                            "storageMode": "",
                            "storagePool": "",
                            "system": "",
                            "volumeName": ""
                        },
                        "storageClassName": "",
                        "storageos": {
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "apiVersion": "",
                                "fieldPath": "",
                                "kind": "",
                                "name": "",
                                "namespace": "",
                                "resourceVersion": "",
                                "uid": ""
                            },
                            "volumeName": "",
                            "volumeNamespace": ""
                        },
                        "volumeMode": "",
                        "vsphereVolume": {
                            "fsType": "",
                            "storagePolicyID": "",
                            "storagePolicyName": "",
                            "volumePath": ""
                        }
                    },
                    "persistentVolumeName": ""
                }
            },
            "status": {
                "attachError": {
                    "message": "",
                    "time": "2020-12-12T%12:12:12Z"
                },
                "attached": true,
                "detachError": {
                    "message": "",
                    "time": "2020-12-12T%12:12:12Z"
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/volumeattachments/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/volumeattachments/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/volumeattachments//status",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/volumeattachments//status",
    "put",
    {
        "data": {
            "apiVersion": "",
            "kind": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "spec": {
                "attacher": "",
                "nodeName": "",
                "source": {
                    "inlineVolumeSpec": {
                        "accessModes": [
                            ""
                        ],
                        "awsElasticBlockStore": {
                            "fsType": "",
                            "partition": 0,
                            "readOnly": true,
                            "volumeID": ""
                        },
                        "azureDisk": {
                            "cachingMode": "",
                            "diskName": "",
                            "diskURI": "",
                            "fsType": "",
                            "kind": "",
                            "readOnly": true
                        },
                        "azureFile": {
                            "readOnly": true,
                            "secretName": "",
                            "secretNamespace": "",
                            "shareName": ""
                        },
                        "cephfs": {
                            "monitors": [
                                ""
                            ],
                            "path": "",
                            "readOnly": true,
                            "secretFile": "",
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "user": ""
                        },
                        "cinder": {
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "volumeID": ""
                        },
                        "claimRef": {
                            "apiVersion": "",
                            "fieldPath": "",
                            "kind": "",
                            "name": "",
                            "namespace": "",
                            "resourceVersion": "",
                            "uid": ""
                        },
                        "csi": {
                            "controllerExpandSecretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "controllerPublishSecretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "driver": "",
                            "fsType": "",
                            "nodePublishSecretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "nodeStageSecretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "readOnly": true,
                            "volumeHandle": ""
                        },
                        "fc": {
                            "fsType": "",
                            "lun": 0,
                            "readOnly": true,
                            "targetWWNs": [
                                ""
                            ],
                            "wwids": [
                                ""
                            ]
                        },
                        "flexVolume": {
                            "driver": "",
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            }
                        },
                        "flocker": {
                            "datasetName": "",
                            "datasetUUID": ""
                        },
                        "gcePersistentDisk": {
                            "fsType": "",
                            "partition": 0,
                            "pdName": "",
                            "readOnly": true
                        },
                        "glusterfs": {
                            "endpoints": "",
                            "endpointsNamespace": "",
                            "path": "",
                            "readOnly": true
                        },
                        "hostPath": {
                            "path": "",
                            "type": ""
                        },
                        "iscsi": {
                            "chapAuthDiscovery": true,
                            "chapAuthSession": true,
                            "fsType": "",
                            "initiatorName": "",
                            "iqn": "",
                            "iscsiInterface": "",
                            "lun": 0,
                            "portals": [
                                ""
                            ],
                            "readOnly": true,
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "targetPortal": ""
                        },
                        "local": {
                            "fsType": "",
                            "path": ""
                        },
                        "mountOptions": [
                            ""
                        ],
                        "nfs": {
                            "path": "",
                            "readOnly": true,
                            "server": ""
                        },
                        "nodeAffinity": {
                            "required": {
                                "nodeSelectorTerms": [
                                    {
                                        "matchExpressions": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ],
                                        "matchFields": [
                                            {
                                                "key": "",
                                                "operator": "",
                                                "values": [
                                                    ""
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "persistentVolumeReclaimPolicy": "",
                        "photonPersistentDisk": {
                            "fsType": "",
                            "pdID": ""
                        },
                        "portworxVolume": {
                            "fsType": "",
                            "readOnly": true,
                            "volumeID": ""
                        },
                        "quobyte": {
                            "group": "",
                            "readOnly": true,
                            "registry": "",
                            "tenant": "",
                            "user": "",
                            "volume": ""
                        },
                        "rbd": {
                            "fsType": "",
                            "image": "",
                            "keyring": "",
                            "monitors": [
                                ""
                            ],
                            "pool": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "user": ""
                        },
                        "scaleIO": {
                            "fsType": "",
                            "gateway": "",
                            "protectionDomain": "",
                            "readOnly": true,
                            "secretRef": {
                                "name": "",
                                "namespace": ""
                            },
                            "sslEnabled": true,
                            "storageMode": "",
                            "storagePool": "",
                            "system": "",
                            "volumeName": ""
                        },
                        "storageClassName": "",
                        "storageos": {
                            "fsType": "",
                            "readOnly": true,
                            "secretRef": {
                                "apiVersion": "",
                                "fieldPath": "",
                                "kind": "",
                                "name": "",
                                "namespace": "",
                                "resourceVersion": "",
                                "uid": ""
                            },
                            "volumeName": "",
                            "volumeNamespace": ""
                        },
                        "volumeMode": "",
                        "vsphereVolume": {
                            "fsType": "",
                            "storagePolicyID": "",
                            "storagePolicyName": "",
                            "volumePath": ""
                        }
                    },
                    "persistentVolumeName": ""
                }
            },
            "status": {
                "attachError": {
                    "message": "",
                    "time": "2020-12-12T%12:12:12Z"
                },
                "attached": true,
                "detachError": {
                    "message": "",
                    "time": "2020-12-12T%12:12:12Z"
                }
            }
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/volumeattachments//status",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/watch/csidrivers",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/watch/csidrivers/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/watch/csinodes",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/watch/csinodes/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/watch/storageclasses",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/watch/storageclasses/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/watch/volumeattachments",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1/watch/volumeattachments/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1beta1/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1beta1/csistoragecapacities",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1beta1/namespaces//csistoragecapacities",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1beta1/namespaces//csistoragecapacities",
    "post",
    {
        "data": {
            "apiVersion": "",
            "capacity": "",
            "kind": "",
            "maximumVolumeSize": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "nodeTopology": {
                "matchExpressions": [
                    {
                        "key": "",
                        "operator": "",
                        "values": [
                            ""
                        ]
                    }
                ]
            },
            "storageClassName": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1beta1/namespaces//csistoragecapacities",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "continue": "",
            "dryRun": "",
            "fieldSelector": "",
            "gracePeriodSeconds": 0,
            "labelSelector": "",
            "limit": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1beta1/namespaces//csistoragecapacities/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1beta1/namespaces//csistoragecapacities/",
    "put",
    {
        "data": {
            "apiVersion": "",
            "capacity": "",
            "kind": "",
            "maximumVolumeSize": "",
            "metadata": {
                "clusterName": "",
                "creationTimestamp": "2020-12-12T%12:12:12Z",
                "deletionGracePeriodSeconds": 0,
                "deletionTimestamp": "2020-12-12T%12:12:12Z",
                "finalizers": [
                    ""
                ],
                "generateName": "",
                "generation": 0,
                "managedFields": [
                    {
                        "apiVersion": "",
                        "fieldsType": "",
                        "fieldsV1": {},
                        "manager": "",
                        "operation": "",
                        "subresource": "",
                        "time": "2020-12-12T%12:12:12Z"
                    }
                ],
                "name": "",
                "namespace": "",
                "ownerReferences": [
                    {
                        "apiVersion": "",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "",
                        "name": "",
                        "uid": ""
                    }
                ],
                "resourceVersion": "",
                "selfLink": "",
                "uid": ""
            },
            "nodeTopology": {
                "matchExpressions": [
                    {
                        "key": "",
                        "operator": "",
                        "values": [
                            ""
                        ]
                    }
                ]
            },
            "storageClassName": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1beta1/namespaces//csistoragecapacities/",
    "delete",
    {
        "data": {
            "apiVersion": "",
            "dryRun": [
                ""
            ],
            "gracePeriodSeconds": 0,
            "kind": "",
            "orphanDependents": true,
            "preconditions": {
                "resourceVersion": "",
                "uid": ""
            },
            "propagationPolicy": ""
        },
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "gracePeriodSeconds": 0,
            "orphanDependents": true,
            "pretty": "",
            "propagationPolicy": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1beta1/namespaces//csistoragecapacities/",
    "patch",
    {
        "data": {},
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "dryRun": "",
            "fieldManager": "",
            "force": true,
            "pretty": ""
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1beta1/watch/csistoragecapacities",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1beta1/watch/namespaces//csistoragecapacities",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/apis/storage.k8s.io/v1beta1/watch/namespaces//csistoragecapacities/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {
            "allowWatchBookmarks": true,
            "continue": "",
            "fieldSelector": "",
            "labelSelector": "",
            "limit": 0,
            "pretty": "",
            "resourceVersion": "",
            "resourceVersionMatch": "",
            "timeoutSeconds": 0,
            "watch": true
        },
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/logs/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/logs/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/openid/v1/jwks/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
[
    "http://127.0.0.1:8000/version/",
    "get",
    {
        "headers": {
            "Content-Type": "application/json"
        },
        "params": {},
        "timeout": 5
    }
]
