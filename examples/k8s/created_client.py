#!/usr/bin/env python

# type: ignore
'''
Kubernetes
swagger openapi.json

v1.23.1, ?
'''
result = 2
str_dflt = ''
timeout = 5
# -

class API:
    user, passw = '$user', '$password'
    host = 'http://127.0.0.1:8000'
    base = ''
    hdrs = {}


name = str_dflt
namespace = str_dflt
path = str_dflt
logpath = str_dflt

# fmt:off
methods = lambda: ( # :clear :doc :all :single :wrap p = Tools.send({})
 '🟩', _well_known__openid_configuration__.get,
 '🟩', api__.get,
 '🟩', api__v1__.get,
 '🟩', api__v1__componentstatuses.get,
 '🟩', api__v1__componentstatuses___name_.get,
 '🟩', api__v1__configmaps.get,
 '🟩', api__v1__endpoints.get,
 '🟩', api__v1__events.get,
 '🟩', api__v1__limitranges.get,
 '🟩', api__v1__namespaces.get,
 '🟪', api__v1__namespaces.post,
 '🟪', api__v1__namespaces___namespace___bindings.post,
 '🟩', api__v1__namespaces___namespace___configmaps.get,
 '🟪', api__v1__namespaces___namespace___configmaps.post,
 '🟥', api__v1__namespaces___namespace___configmaps.delete,
 '🟩', api__v1__namespaces___namespace___configmaps___name_.get,
 '🟧', api__v1__namespaces___namespace___configmaps___name_.put,
 '🟥', api__v1__namespaces___namespace___configmaps___name_.delete,
 '🟫', api__v1__namespaces___namespace___configmaps___name_.patch,
 '🟩', api__v1__namespaces___namespace___endpoints.get,
 '🟪', api__v1__namespaces___namespace___endpoints.post,
 '🟥', api__v1__namespaces___namespace___endpoints.delete,
 '🟩', api__v1__namespaces___namespace___endpoints___name_.get,
 '🟧', api__v1__namespaces___namespace___endpoints___name_.put,
 '🟥', api__v1__namespaces___namespace___endpoints___name_.delete,
 '🟫', api__v1__namespaces___namespace___endpoints___name_.patch,
 '🟩', api__v1__namespaces___namespace___events.get,
 '🟪', api__v1__namespaces___namespace___events.post,
 '🟥', api__v1__namespaces___namespace___events.delete,
 '🟩', api__v1__namespaces___namespace___events___name_.get,
 '🟧', api__v1__namespaces___namespace___events___name_.put,
 '🟥', api__v1__namespaces___namespace___events___name_.delete,
 '🟫', api__v1__namespaces___namespace___events___name_.patch,
 '🟩', api__v1__namespaces___namespace___limitranges.get,
 '🟪', api__v1__namespaces___namespace___limitranges.post,
 '🟥', api__v1__namespaces___namespace___limitranges.delete,
 '🟩', api__v1__namespaces___namespace___limitranges___name_.get,
 '🟧', api__v1__namespaces___namespace___limitranges___name_.put,
 '🟥', api__v1__namespaces___namespace___limitranges___name_.delete,
 '🟫', api__v1__namespaces___namespace___limitranges___name_.patch,
 '🟩', api__v1__namespaces___namespace___persistentvolumeclaims.get,
 '🟪', api__v1__namespaces___namespace___persistentvolumeclaims.post,
 '🟥', api__v1__namespaces___namespace___persistentvolumeclaims.delete,
 '🟩', api__v1__namespaces___namespace___persistentvolumeclaims___name_.get,
 '🟧', api__v1__namespaces___namespace___persistentvolumeclaims___name_.put,
 '🟥', api__v1__namespaces___namespace___persistentvolumeclaims___name_.delete,
 '🟫', api__v1__namespaces___namespace___persistentvolumeclaims___name_.patch,
 '🟩', api__v1__namespaces___namespace___persistentvolumeclaims___name___status.get,
 '🟧', api__v1__namespaces___namespace___persistentvolumeclaims___name___status.put,
 '🟫', api__v1__namespaces___namespace___persistentvolumeclaims___name___status.patch,
 '🟩', api__v1__namespaces___namespace___pods.get,
 '🟪', api__v1__namespaces___namespace___pods.post,
 '🟥', api__v1__namespaces___namespace___pods.delete,
 '🟩', api__v1__namespaces___namespace___pods___name_.get,
 '🟧', api__v1__namespaces___namespace___pods___name_.put,
 '🟥', api__v1__namespaces___namespace___pods___name_.delete,
 '🟫', api__v1__namespaces___namespace___pods___name_.patch,
 '🟩', api__v1__namespaces___namespace___pods___name___attach.get,
 '🟪', api__v1__namespaces___namespace___pods___name___attach.post,
 '🟪', api__v1__namespaces___namespace___pods___name___binding.post,
 '🟩', api__v1__namespaces___namespace___pods___name___ephemeralcontainers.get,
 '🟧', api__v1__namespaces___namespace___pods___name___ephemeralcontainers.put,
 '🟫', api__v1__namespaces___namespace___pods___name___ephemeralcontainers.patch,
 '🟪', api__v1__namespaces___namespace___pods___name___eviction.post,
 '🟩', api__v1__namespaces___namespace___pods___name___exec.get,
 '🟪', api__v1__namespaces___namespace___pods___name___exec.post,
 '🟩', api__v1__namespaces___namespace___pods___name___log.get,
 '🟩', api__v1__namespaces___namespace___pods___name___portforward.get,
 '🟪', api__v1__namespaces___namespace___pods___name___portforward.post,
 '🟩', api__v1__namespaces___namespace___pods___name___proxy.get,
 '🟧', api__v1__namespaces___namespace___pods___name___proxy.put,
 '🟪', api__v1__namespaces___namespace___pods___name___proxy.post,
 '🟥', api__v1__namespaces___namespace___pods___name___proxy.delete,
 '🟫', api__v1__namespaces___namespace___pods___name___proxy.options,
 '🟫', api__v1__namespaces___namespace___pods___name___proxy.head,
 '🟫', api__v1__namespaces___namespace___pods___name___proxy.patch,
 '🟩', api__v1__namespaces___namespace___pods___name___proxy___path_.get,
 '🟧', api__v1__namespaces___namespace___pods___name___proxy___path_.put,
 '🟪', api__v1__namespaces___namespace___pods___name___proxy___path_.post,
 '🟥', api__v1__namespaces___namespace___pods___name___proxy___path_.delete,
 '🟫', api__v1__namespaces___namespace___pods___name___proxy___path_.options,
 '🟫', api__v1__namespaces___namespace___pods___name___proxy___path_.head,
 '🟫', api__v1__namespaces___namespace___pods___name___proxy___path_.patch,
 '🟩', api__v1__namespaces___namespace___pods___name___status.get,
 '🟧', api__v1__namespaces___namespace___pods___name___status.put,
 '🟫', api__v1__namespaces___namespace___pods___name___status.patch,
 '🟩', api__v1__namespaces___namespace___podtemplates.get,
 '🟪', api__v1__namespaces___namespace___podtemplates.post,
 '🟥', api__v1__namespaces___namespace___podtemplates.delete,
 '🟩', api__v1__namespaces___namespace___podtemplates___name_.get,
 '🟧', api__v1__namespaces___namespace___podtemplates___name_.put,
 '🟥', api__v1__namespaces___namespace___podtemplates___name_.delete,
 '🟫', api__v1__namespaces___namespace___podtemplates___name_.patch,
 '🟩', api__v1__namespaces___namespace___replicationcontrollers.get,
 '🟪', api__v1__namespaces___namespace___replicationcontrollers.post,
 '🟥', api__v1__namespaces___namespace___replicationcontrollers.delete,
 '🟩', api__v1__namespaces___namespace___replicationcontrollers___name_.get,
 '🟧', api__v1__namespaces___namespace___replicationcontrollers___name_.put,
 '🟥', api__v1__namespaces___namespace___replicationcontrollers___name_.delete,
 '🟫', api__v1__namespaces___namespace___replicationcontrollers___name_.patch,
 '🟩', api__v1__namespaces___namespace___replicationcontrollers___name___scale.get,
 '🟧', api__v1__namespaces___namespace___replicationcontrollers___name___scale.put,
 '🟫', api__v1__namespaces___namespace___replicationcontrollers___name___scale.patch,
 '🟩', api__v1__namespaces___namespace___replicationcontrollers___name___status.get,
 '🟧', api__v1__namespaces___namespace___replicationcontrollers___name___status.put,
 '🟫', api__v1__namespaces___namespace___replicationcontrollers___name___status.patch,
 '🟩', api__v1__namespaces___namespace___resourcequotas.get,
 '🟪', api__v1__namespaces___namespace___resourcequotas.post,
 '🟥', api__v1__namespaces___namespace___resourcequotas.delete,
 '🟩', api__v1__namespaces___namespace___resourcequotas___name_.get,
 '🟧', api__v1__namespaces___namespace___resourcequotas___name_.put,
 '🟥', api__v1__namespaces___namespace___resourcequotas___name_.delete,
 '🟫', api__v1__namespaces___namespace___resourcequotas___name_.patch,
 '🟩', api__v1__namespaces___namespace___resourcequotas___name___status.get,
 '🟧', api__v1__namespaces___namespace___resourcequotas___name___status.put,
 '🟫', api__v1__namespaces___namespace___resourcequotas___name___status.patch,
 '🟩', api__v1__namespaces___namespace___secrets.get,
 '🟪', api__v1__namespaces___namespace___secrets.post,
 '🟥', api__v1__namespaces___namespace___secrets.delete,
 '🟩', api__v1__namespaces___namespace___secrets___name_.get,
 '🟧', api__v1__namespaces___namespace___secrets___name_.put,
 '🟥', api__v1__namespaces___namespace___secrets___name_.delete,
 '🟫', api__v1__namespaces___namespace___secrets___name_.patch,
 '🟩', api__v1__namespaces___namespace___serviceaccounts.get,
 '🟪', api__v1__namespaces___namespace___serviceaccounts.post,
 '🟥', api__v1__namespaces___namespace___serviceaccounts.delete,
 '🟩', api__v1__namespaces___namespace___serviceaccounts___name_.get,
 '🟧', api__v1__namespaces___namespace___serviceaccounts___name_.put,
 '🟥', api__v1__namespaces___namespace___serviceaccounts___name_.delete,
 '🟫', api__v1__namespaces___namespace___serviceaccounts___name_.patch,
 '🟪', api__v1__namespaces___namespace___serviceaccounts___name___token.post,
 '🟩', api__v1__namespaces___namespace___services.get,
 '🟪', api__v1__namespaces___namespace___services.post,
 '🟥', api__v1__namespaces___namespace___services.delete,
 '🟩', api__v1__namespaces___namespace___services___name_.get,
 '🟧', api__v1__namespaces___namespace___services___name_.put,
 '🟥', api__v1__namespaces___namespace___services___name_.delete,
 '🟫', api__v1__namespaces___namespace___services___name_.patch,
 '🟩', api__v1__namespaces___namespace___services___name___proxy.get,
 '🟧', api__v1__namespaces___namespace___services___name___proxy.put,
 '🟪', api__v1__namespaces___namespace___services___name___proxy.post,
 '🟥', api__v1__namespaces___namespace___services___name___proxy.delete,
 '🟫', api__v1__namespaces___namespace___services___name___proxy.options,
 '🟫', api__v1__namespaces___namespace___services___name___proxy.head,
 '🟫', api__v1__namespaces___namespace___services___name___proxy.patch,
 '🟩', api__v1__namespaces___namespace___services___name___proxy___path_.get,
 '🟧', api__v1__namespaces___namespace___services___name___proxy___path_.put,
 '🟪', api__v1__namespaces___namespace___services___name___proxy___path_.post,
 '🟥', api__v1__namespaces___namespace___services___name___proxy___path_.delete,
 '🟫', api__v1__namespaces___namespace___services___name___proxy___path_.options,
 '🟫', api__v1__namespaces___namespace___services___name___proxy___path_.head,
 '🟫', api__v1__namespaces___namespace___services___name___proxy___path_.patch,
 '🟩', api__v1__namespaces___namespace___services___name___status.get,
 '🟧', api__v1__namespaces___namespace___services___name___status.put,
 '🟫', api__v1__namespaces___namespace___services___name___status.patch,
 '🟩', api__v1__namespaces___name_.get,
 '🟧', api__v1__namespaces___name_.put,
 '🟥', api__v1__namespaces___name_.delete,
 '🟫', api__v1__namespaces___name_.patch,
 '🟧', api__v1__namespaces___name___finalize.put,
 '🟩', api__v1__namespaces___name___status.get,
 '🟧', api__v1__namespaces___name___status.put,
 '🟫', api__v1__namespaces___name___status.patch,
 '🟩', api__v1__nodes.get,
 '🟪', api__v1__nodes.post,
 '🟥', api__v1__nodes.delete,
 '🟩', api__v1__nodes___name_.get,
 '🟧', api__v1__nodes___name_.put,
 '🟥', api__v1__nodes___name_.delete,
 '🟫', api__v1__nodes___name_.patch,
 '🟩', api__v1__nodes___name___proxy.get,
 '🟧', api__v1__nodes___name___proxy.put,
 '🟪', api__v1__nodes___name___proxy.post,
 '🟥', api__v1__nodes___name___proxy.delete,
 '🟫', api__v1__nodes___name___proxy.options,
 '🟫', api__v1__nodes___name___proxy.head,
 '🟫', api__v1__nodes___name___proxy.patch,
 '🟩', api__v1__nodes___name___proxy___path_.get,
 '🟧', api__v1__nodes___name___proxy___path_.put,
 '🟪', api__v1__nodes___name___proxy___path_.post,
 '🟥', api__v1__nodes___name___proxy___path_.delete,
 '🟫', api__v1__nodes___name___proxy___path_.options,
 '🟫', api__v1__nodes___name___proxy___path_.head,
 '🟫', api__v1__nodes___name___proxy___path_.patch,
 '🟩', api__v1__nodes___name___status.get,
 '🟧', api__v1__nodes___name___status.put,
 '🟫', api__v1__nodes___name___status.patch,
 '🟩', api__v1__persistentvolumeclaims.get,
 '🟩', api__v1__persistentvolumes.get,
 '🟪', api__v1__persistentvolumes.post,
 '🟥', api__v1__persistentvolumes.delete,
 '🟩', api__v1__persistentvolumes___name_.get,
 '🟧', api__v1__persistentvolumes___name_.put,
 '🟥', api__v1__persistentvolumes___name_.delete,
 '🟫', api__v1__persistentvolumes___name_.patch,
 '🟩', api__v1__persistentvolumes___name___status.get,
 '🟧', api__v1__persistentvolumes___name___status.put,
 '🟫', api__v1__persistentvolumes___name___status.patch,
 '🟩', api__v1__pods.get,
 '🟩', api__v1__podtemplates.get,
 '🟩', api__v1__replicationcontrollers.get,
 '🟩', api__v1__resourcequotas.get,
 '🟩', api__v1__secrets.get,
 '🟩', api__v1__serviceaccounts.get,
 '🟩', api__v1__services.get,
 '🟩', api__v1__watch__configmaps.get,
 '🟩', api__v1__watch__endpoints.get,
 '🟩', api__v1__watch__events.get,
 '🟩', api__v1__watch__limitranges.get,
 '🟩', api__v1__watch__namespaces.get,
 '🟩', api__v1__watch__namespaces___namespace___configmaps.get,
 '🟩', api__v1__watch__namespaces___namespace___configmaps___name_.get,
 '🟩', api__v1__watch__namespaces___namespace___endpoints.get,
 '🟩', api__v1__watch__namespaces___namespace___endpoints___name_.get,
 '🟩', api__v1__watch__namespaces___namespace___events.get,
 '🟩', api__v1__watch__namespaces___namespace___events___name_.get,
 '🟩', api__v1__watch__namespaces___namespace___limitranges.get,
 '🟩', api__v1__watch__namespaces___namespace___limitranges___name_.get,
 '🟩', api__v1__watch__namespaces___namespace___persistentvolumeclaims.get,
 '🟩', api__v1__watch__namespaces___namespace___persistentvolumeclaims___name_.get,
 '🟩', api__v1__watch__namespaces___namespace___pods.get,
 '🟩', api__v1__watch__namespaces___namespace___pods___name_.get,
 '🟩', api__v1__watch__namespaces___namespace___podtemplates.get,
 '🟩', api__v1__watch__namespaces___namespace___podtemplates___name_.get,
 '🟩', api__v1__watch__namespaces___namespace___replicationcontrollers.get,
 '🟩', api__v1__watch__namespaces___namespace___replicationcontrollers___name_.get,
 '🟩', api__v1__watch__namespaces___namespace___resourcequotas.get,
 '🟩', api__v1__watch__namespaces___namespace___resourcequotas___name_.get,
 '🟩', api__v1__watch__namespaces___namespace___secrets.get,
 '🟩', api__v1__watch__namespaces___namespace___secrets___name_.get,
 '🟩', api__v1__watch__namespaces___namespace___serviceaccounts.get,
 '🟩', api__v1__watch__namespaces___namespace___serviceaccounts___name_.get,
 '🟩', api__v1__watch__namespaces___namespace___services.get,
 '🟩', api__v1__watch__namespaces___namespace___services___name_.get,
 '🟩', api__v1__watch__namespaces___name_.get,
 '🟩', api__v1__watch__nodes.get,
 '🟩', api__v1__watch__nodes___name_.get,
 '🟩', api__v1__watch__persistentvolumeclaims.get,
 '🟩', api__v1__watch__persistentvolumes.get,
 '🟩', api__v1__watch__persistentvolumes___name_.get,
 '🟩', api__v1__watch__pods.get,
 '🟩', api__v1__watch__podtemplates.get,
 '🟩', api__v1__watch__replicationcontrollers.get,
 '🟩', api__v1__watch__resourcequotas.get,
 '🟩', api__v1__watch__secrets.get,
 '🟩', api__v1__watch__serviceaccounts.get,
 '🟩', api__v1__watch__services.get,
 '🟩', apis__.get,
 '🟩', apis__admissionregistration_k8s_io__.get,
 '🟩', apis__admissionregistration_k8s_io__v1__.get,
 '🟩', apis__admissionregistration_k8s_io__v1__mutatingwebhookconfigurations.get,
 '🟪', apis__admissionregistration_k8s_io__v1__mutatingwebhookconfigurations.post,
 '🟥', apis__admissionregistration_k8s_io__v1__mutatingwebhookconfigurations.delete,
 '🟩', apis__admissionregistration_k8s_io__v1__mutatingwebhookconfigurations___name_.get,
 '🟧', apis__admissionregistration_k8s_io__v1__mutatingwebhookconfigurations___name_.put,
 '🟥', apis__admissionregistration_k8s_io__v1__mutatingwebhookconfigurations___name_.delete,
 '🟫', apis__admissionregistration_k8s_io__v1__mutatingwebhookconfigurations___name_.patch,
 '🟩', apis__admissionregistration_k8s_io__v1__validatingwebhookconfigurations.get,
 '🟪', apis__admissionregistration_k8s_io__v1__validatingwebhookconfigurations.post,
 '🟥', apis__admissionregistration_k8s_io__v1__validatingwebhookconfigurations.delete,
 '🟩', apis__admissionregistration_k8s_io__v1__validatingwebhookconfigurations___name_.get,
 '🟧', apis__admissionregistration_k8s_io__v1__validatingwebhookconfigurations___name_.put,
 '🟥', apis__admissionregistration_k8s_io__v1__validatingwebhookconfigurations___name_.delete,
 '🟫', apis__admissionregistration_k8s_io__v1__validatingwebhookconfigurations___name_.patch,
 '🟩', apis__admissionregistration_k8s_io__v1__watch__mutatingwebhookconfigurations.get,
 '🟩', apis__admissionregistration_k8s_io__v1__watch__mutatingwebhookconfigurations___name_.get,
 '🟩', apis__admissionregistration_k8s_io__v1__watch__validatingwebhookconfigurations.get,
 '🟩', apis__admissionregistration_k8s_io__v1__watch__validatingwebhookconfigurations___name_.get,
 '🟩', apis__apiextensions_k8s_io__.get,
 '🟩', apis__apiextensions_k8s_io__v1__.get,
 '🟩', apis__apiextensions_k8s_io__v1__customresourcedefinitions.get,
 '🟪', apis__apiextensions_k8s_io__v1__customresourcedefinitions.post,
 '🟥', apis__apiextensions_k8s_io__v1__customresourcedefinitions.delete,
 '🟩', apis__apiextensions_k8s_io__v1__customresourcedefinitions___name_.get,
 '🟧', apis__apiextensions_k8s_io__v1__customresourcedefinitions___name_.put,
 '🟥', apis__apiextensions_k8s_io__v1__customresourcedefinitions___name_.delete,
 '🟫', apis__apiextensions_k8s_io__v1__customresourcedefinitions___name_.patch,
 '🟩', apis__apiextensions_k8s_io__v1__customresourcedefinitions___name___status.get,
 '🟧', apis__apiextensions_k8s_io__v1__customresourcedefinitions___name___status.put,
 '🟫', apis__apiextensions_k8s_io__v1__customresourcedefinitions___name___status.patch,
 '🟩', apis__apiextensions_k8s_io__v1__watch__customresourcedefinitions.get,
 '🟩', apis__apiextensions_k8s_io__v1__watch__customresourcedefinitions___name_.get,
 '🟩', apis__apiregistration_k8s_io__.get,
 '🟩', apis__apiregistration_k8s_io__v1__.get,
 '🟩', apis__apiregistration_k8s_io__v1__apiservices.get,
 '🟪', apis__apiregistration_k8s_io__v1__apiservices.post,
 '🟥', apis__apiregistration_k8s_io__v1__apiservices.delete,
 '🟩', apis__apiregistration_k8s_io__v1__apiservices___name_.get,
 '🟧', apis__apiregistration_k8s_io__v1__apiservices___name_.put,
 '🟥', apis__apiregistration_k8s_io__v1__apiservices___name_.delete,
 '🟫', apis__apiregistration_k8s_io__v1__apiservices___name_.patch,
 '🟩', apis__apiregistration_k8s_io__v1__apiservices___name___status.get,
 '🟧', apis__apiregistration_k8s_io__v1__apiservices___name___status.put,
 '🟫', apis__apiregistration_k8s_io__v1__apiservices___name___status.patch,
 '🟩', apis__apiregistration_k8s_io__v1__watch__apiservices.get,
 '🟩', apis__apiregistration_k8s_io__v1__watch__apiservices___name_.get,
 '🟩', apis__apps__.get,
 '🟩', apis__apps__v1__.get,
 '🟩', apis__apps__v1__controllerrevisions.get,
 '🟩', apis__apps__v1__daemonsets.get,
 '🟩', apis__apps__v1__deployments.get,
 '🟩', apis__apps__v1__namespaces___namespace___controllerrevisions.get,
 '🟪', apis__apps__v1__namespaces___namespace___controllerrevisions.post,
 '🟥', apis__apps__v1__namespaces___namespace___controllerrevisions.delete,
 '🟩', apis__apps__v1__namespaces___namespace___controllerrevisions___name_.get,
 '🟧', apis__apps__v1__namespaces___namespace___controllerrevisions___name_.put,
 '🟥', apis__apps__v1__namespaces___namespace___controllerrevisions___name_.delete,
 '🟫', apis__apps__v1__namespaces___namespace___controllerrevisions___name_.patch,
 '🟩', apis__apps__v1__namespaces___namespace___daemonsets.get,
 '🟪', apis__apps__v1__namespaces___namespace___daemonsets.post,
 '🟥', apis__apps__v1__namespaces___namespace___daemonsets.delete,
 '🟩', apis__apps__v1__namespaces___namespace___daemonsets___name_.get,
 '🟧', apis__apps__v1__namespaces___namespace___daemonsets___name_.put,
 '🟥', apis__apps__v1__namespaces___namespace___daemonsets___name_.delete,
 '🟫', apis__apps__v1__namespaces___namespace___daemonsets___name_.patch,
 '🟩', apis__apps__v1__namespaces___namespace___daemonsets___name___status.get,
 '🟧', apis__apps__v1__namespaces___namespace___daemonsets___name___status.put,
 '🟫', apis__apps__v1__namespaces___namespace___daemonsets___name___status.patch,
 '🟩', apis__apps__v1__namespaces___namespace___deployments.get,
 '🟪', apis__apps__v1__namespaces___namespace___deployments.post,
 '🟥', apis__apps__v1__namespaces___namespace___deployments.delete,
 '🟩', apis__apps__v1__namespaces___namespace___deployments___name_.get,
 '🟧', apis__apps__v1__namespaces___namespace___deployments___name_.put,
 '🟥', apis__apps__v1__namespaces___namespace___deployments___name_.delete,
 '🟫', apis__apps__v1__namespaces___namespace___deployments___name_.patch,
 '🟩', apis__apps__v1__namespaces___namespace___deployments___name___scale.get,
 '🟧', apis__apps__v1__namespaces___namespace___deployments___name___scale.put,
 '🟫', apis__apps__v1__namespaces___namespace___deployments___name___scale.patch,
 '🟩', apis__apps__v1__namespaces___namespace___deployments___name___status.get,
 '🟧', apis__apps__v1__namespaces___namespace___deployments___name___status.put,
 '🟫', apis__apps__v1__namespaces___namespace___deployments___name___status.patch,
 '🟩', apis__apps__v1__namespaces___namespace___replicasets.get,
 '🟪', apis__apps__v1__namespaces___namespace___replicasets.post,
 '🟥', apis__apps__v1__namespaces___namespace___replicasets.delete,
 '🟩', apis__apps__v1__namespaces___namespace___replicasets___name_.get,
 '🟧', apis__apps__v1__namespaces___namespace___replicasets___name_.put,
 '🟥', apis__apps__v1__namespaces___namespace___replicasets___name_.delete,
 '🟫', apis__apps__v1__namespaces___namespace___replicasets___name_.patch,
 '🟩', apis__apps__v1__namespaces___namespace___replicasets___name___scale.get,
 '🟧', apis__apps__v1__namespaces___namespace___replicasets___name___scale.put,
 '🟫', apis__apps__v1__namespaces___namespace___replicasets___name___scale.patch,
 '🟩', apis__apps__v1__namespaces___namespace___replicasets___name___status.get,
 '🟧', apis__apps__v1__namespaces___namespace___replicasets___name___status.put,
 '🟫', apis__apps__v1__namespaces___namespace___replicasets___name___status.patch,
 '🟩', apis__apps__v1__namespaces___namespace___statefulsets.get,
 '🟪', apis__apps__v1__namespaces___namespace___statefulsets.post,
 '🟥', apis__apps__v1__namespaces___namespace___statefulsets.delete,
 '🟩', apis__apps__v1__namespaces___namespace___statefulsets___name_.get,
 '🟧', apis__apps__v1__namespaces___namespace___statefulsets___name_.put,
 '🟥', apis__apps__v1__namespaces___namespace___statefulsets___name_.delete,
 '🟫', apis__apps__v1__namespaces___namespace___statefulsets___name_.patch,
 '🟩', apis__apps__v1__namespaces___namespace___statefulsets___name___scale.get,
 '🟧', apis__apps__v1__namespaces___namespace___statefulsets___name___scale.put,
 '🟫', apis__apps__v1__namespaces___namespace___statefulsets___name___scale.patch,
 '🟩', apis__apps__v1__namespaces___namespace___statefulsets___name___status.get,
 '🟧', apis__apps__v1__namespaces___namespace___statefulsets___name___status.put,
 '🟫', apis__apps__v1__namespaces___namespace___statefulsets___name___status.patch,
 '🟩', apis__apps__v1__replicasets.get,
 '🟩', apis__apps__v1__statefulsets.get,
 '🟩', apis__apps__v1__watch__controllerrevisions.get,
 '🟩', apis__apps__v1__watch__daemonsets.get,
 '🟩', apis__apps__v1__watch__deployments.get,
 '🟩', apis__apps__v1__watch__namespaces___namespace___controllerrevisions.get,
 '🟩', apis__apps__v1__watch__namespaces___namespace___controllerrevisions___name_.get,
 '🟩', apis__apps__v1__watch__namespaces___namespace___daemonsets.get,
 '🟩', apis__apps__v1__watch__namespaces___namespace___daemonsets___name_.get,
 '🟩', apis__apps__v1__watch__namespaces___namespace___deployments.get,
 '🟩', apis__apps__v1__watch__namespaces___namespace___deployments___name_.get,
 '🟩', apis__apps__v1__watch__namespaces___namespace___replicasets.get,
 '🟩', apis__apps__v1__watch__namespaces___namespace___replicasets___name_.get,
 '🟩', apis__apps__v1__watch__namespaces___namespace___statefulsets.get,
 '🟩', apis__apps__v1__watch__namespaces___namespace___statefulsets___name_.get,
 '🟩', apis__apps__v1__watch__replicasets.get,
 '🟩', apis__apps__v1__watch__statefulsets.get,
 '🟩', apis__authentication_k8s_io__.get,
 '🟩', apis__authentication_k8s_io__v1__.get,
 '🟪', apis__authentication_k8s_io__v1__tokenreviews.post,
 '🟩', apis__authorization_k8s_io__.get,
 '🟩', apis__authorization_k8s_io__v1__.get,
 '🟪', apis__authorization_k8s_io__v1__namespaces___namespace___localsubjectaccessreviews.post,
 '🟪', apis__authorization_k8s_io__v1__selfsubjectaccessreviews.post,
 '🟪', apis__authorization_k8s_io__v1__selfsubjectrulesreviews.post,
 '🟪', apis__authorization_k8s_io__v1__subjectaccessreviews.post,
 '🟩', apis__autoscaling__.get,
 '🟩', apis__autoscaling__v1__.get,
 '🟩', apis__autoscaling__v1__horizontalpodautoscalers.get,
 '🟩', apis__autoscaling__v1__namespaces___namespace___horizontalpodautoscalers.get,
 '🟪', apis__autoscaling__v1__namespaces___namespace___horizontalpodautoscalers.post,
 '🟥', apis__autoscaling__v1__namespaces___namespace___horizontalpodautoscalers.delete,
 '🟩', apis__autoscaling__v1__namespaces___namespace___horizontalpodautoscalers___name_.get,
 '🟧', apis__autoscaling__v1__namespaces___namespace___horizontalpodautoscalers___name_.put,
 '🟥', apis__autoscaling__v1__namespaces___namespace___horizontalpodautoscalers___name_.delete,
 '🟫', apis__autoscaling__v1__namespaces___namespace___horizontalpodautoscalers___name_.patch,
 '🟩', apis__autoscaling__v1__namespaces___namespace___horizontalpodautoscalers___name___status.get,
 '🟧', apis__autoscaling__v1__namespaces___namespace___horizontalpodautoscalers___name___status.put,
 '🟫', apis__autoscaling__v1__namespaces___namespace___horizontalpodautoscalers___name___status.patch,
 '🟩', apis__autoscaling__v1__watch__horizontalpodautoscalers.get,
 '🟩', apis__autoscaling__v1__watch__namespaces___namespace___horizontalpodautoscalers.get,
 '🟩', apis__autoscaling__v1__watch__namespaces___namespace___horizontalpodautoscalers___name_.get,
 '🟩', apis__autoscaling__v2__.get,
 '🟩', apis__autoscaling__v2__horizontalpodautoscalers.get,
 '🟩', apis__autoscaling__v2__namespaces___namespace___horizontalpodautoscalers.get,
 '🟪', apis__autoscaling__v2__namespaces___namespace___horizontalpodautoscalers.post,
 '🟥', apis__autoscaling__v2__namespaces___namespace___horizontalpodautoscalers.delete,
 '🟩', apis__autoscaling__v2__namespaces___namespace___horizontalpodautoscalers___name_.get,
 '🟧', apis__autoscaling__v2__namespaces___namespace___horizontalpodautoscalers___name_.put,
 '🟥', apis__autoscaling__v2__namespaces___namespace___horizontalpodautoscalers___name_.delete,
 '🟫', apis__autoscaling__v2__namespaces___namespace___horizontalpodautoscalers___name_.patch,
 '🟩', apis__autoscaling__v2__namespaces___namespace___horizontalpodautoscalers___name___status.get,
 '🟧', apis__autoscaling__v2__namespaces___namespace___horizontalpodautoscalers___name___status.put,
 '🟫', apis__autoscaling__v2__namespaces___namespace___horizontalpodautoscalers___name___status.patch,
 '🟩', apis__autoscaling__v2__watch__horizontalpodautoscalers.get,
 '🟩', apis__autoscaling__v2__watch__namespaces___namespace___horizontalpodautoscalers.get,
 '🟩', apis__autoscaling__v2__watch__namespaces___namespace___horizontalpodautoscalers___name_.get,
 '🟩', apis__autoscaling__v2beta1__.get,
 '🟩', apis__autoscaling__v2beta1__horizontalpodautoscalers.get,
 '🟩', apis__autoscaling__v2beta1__namespaces___namespace___horizontalpodautoscalers.get,
 '🟪', apis__autoscaling__v2beta1__namespaces___namespace___horizontalpodautoscalers.post,
 '🟥', apis__autoscaling__v2beta1__namespaces___namespace___horizontalpodautoscalers.delete,
 '🟩', apis__autoscaling__v2beta1__namespaces___namespace___horizontalpodautoscalers___name_.get,
 '🟧', apis__autoscaling__v2beta1__namespaces___namespace___horizontalpodautoscalers___name_.put,
 '🟥', apis__autoscaling__v2beta1__namespaces___namespace___horizontalpodautoscalers___name_.delete,
 '🟫', apis__autoscaling__v2beta1__namespaces___namespace___horizontalpodautoscalers___name_.patch,
 '🟩', apis__autoscaling__v2beta1__namespaces___namespace___horizontalpodautoscalers___name___status.get,
 '🟧', apis__autoscaling__v2beta1__namespaces___namespace___horizontalpodautoscalers___name___status.put,
 '🟫', apis__autoscaling__v2beta1__namespaces___namespace___horizontalpodautoscalers___name___status.patch,
 '🟩', apis__autoscaling__v2beta1__watch__horizontalpodautoscalers.get,
 '🟩', apis__autoscaling__v2beta1__watch__namespaces___namespace___horizontalpodautoscalers.get,
 '🟩', apis__autoscaling__v2beta1__watch__namespaces___namespace___horizontalpodautoscalers___name_.get,
 '🟩', apis__autoscaling__v2beta2__.get,
 '🟩', apis__autoscaling__v2beta2__horizontalpodautoscalers.get,
 '🟩', apis__autoscaling__v2beta2__namespaces___namespace___horizontalpodautoscalers.get,
 '🟪', apis__autoscaling__v2beta2__namespaces___namespace___horizontalpodautoscalers.post,
 '🟥', apis__autoscaling__v2beta2__namespaces___namespace___horizontalpodautoscalers.delete,
 '🟩', apis__autoscaling__v2beta2__namespaces___namespace___horizontalpodautoscalers___name_.get,
 '🟧', apis__autoscaling__v2beta2__namespaces___namespace___horizontalpodautoscalers___name_.put,
 '🟥', apis__autoscaling__v2beta2__namespaces___namespace___horizontalpodautoscalers___name_.delete,
 '🟫', apis__autoscaling__v2beta2__namespaces___namespace___horizontalpodautoscalers___name_.patch,
 '🟩', apis__autoscaling__v2beta2__namespaces___namespace___horizontalpodautoscalers___name___status.get,
 '🟧', apis__autoscaling__v2beta2__namespaces___namespace___horizontalpodautoscalers___name___status.put,
 '🟫', apis__autoscaling__v2beta2__namespaces___namespace___horizontalpodautoscalers___name___status.patch,
 '🟩', apis__autoscaling__v2beta2__watch__horizontalpodautoscalers.get,
 '🟩', apis__autoscaling__v2beta2__watch__namespaces___namespace___horizontalpodautoscalers.get,
 '🟩', apis__autoscaling__v2beta2__watch__namespaces___namespace___horizontalpodautoscalers___name_.get,
 '🟩', apis__batch__.get,
 '🟩', apis__batch__v1__.get,
 '🟩', apis__batch__v1__cronjobs.get,
 '🟩', apis__batch__v1__jobs.get,
 '🟩', apis__batch__v1__namespaces___namespace___cronjobs.get,
 '🟪', apis__batch__v1__namespaces___namespace___cronjobs.post,
 '🟥', apis__batch__v1__namespaces___namespace___cronjobs.delete,
 '🟩', apis__batch__v1__namespaces___namespace___cronjobs___name_.get,
 '🟧', apis__batch__v1__namespaces___namespace___cronjobs___name_.put,
 '🟥', apis__batch__v1__namespaces___namespace___cronjobs___name_.delete,
 '🟫', apis__batch__v1__namespaces___namespace___cronjobs___name_.patch,
 '🟩', apis__batch__v1__namespaces___namespace___cronjobs___name___status.get,
 '🟧', apis__batch__v1__namespaces___namespace___cronjobs___name___status.put,
 '🟫', apis__batch__v1__namespaces___namespace___cronjobs___name___status.patch,
 '🟩', apis__batch__v1__namespaces___namespace___jobs.get,
 '🟪', apis__batch__v1__namespaces___namespace___jobs.post,
 '🟥', apis__batch__v1__namespaces___namespace___jobs.delete,
 '🟩', apis__batch__v1__namespaces___namespace___jobs___name_.get,
 '🟧', apis__batch__v1__namespaces___namespace___jobs___name_.put,
 '🟥', apis__batch__v1__namespaces___namespace___jobs___name_.delete,
 '🟫', apis__batch__v1__namespaces___namespace___jobs___name_.patch,
 '🟩', apis__batch__v1__namespaces___namespace___jobs___name___status.get,
 '🟧', apis__batch__v1__namespaces___namespace___jobs___name___status.put,
 '🟫', apis__batch__v1__namespaces___namespace___jobs___name___status.patch,
 '🟩', apis__batch__v1__watch__cronjobs.get,
 '🟩', apis__batch__v1__watch__jobs.get,
 '🟩', apis__batch__v1__watch__namespaces___namespace___cronjobs.get,
 '🟩', apis__batch__v1__watch__namespaces___namespace___cronjobs___name_.get,
 '🟩', apis__batch__v1__watch__namespaces___namespace___jobs.get,
 '🟩', apis__batch__v1__watch__namespaces___namespace___jobs___name_.get,
 '🟩', apis__batch__v1beta1__.get,
 '🟩', apis__batch__v1beta1__cronjobs.get,
 '🟩', apis__batch__v1beta1__namespaces___namespace___cronjobs.get,
 '🟪', apis__batch__v1beta1__namespaces___namespace___cronjobs.post,
 '🟥', apis__batch__v1beta1__namespaces___namespace___cronjobs.delete,
 '🟩', apis__batch__v1beta1__namespaces___namespace___cronjobs___name_.get,
 '🟧', apis__batch__v1beta1__namespaces___namespace___cronjobs___name_.put,
 '🟥', apis__batch__v1beta1__namespaces___namespace___cronjobs___name_.delete,
 '🟫', apis__batch__v1beta1__namespaces___namespace___cronjobs___name_.patch,
 '🟩', apis__batch__v1beta1__namespaces___namespace___cronjobs___name___status.get,
 '🟧', apis__batch__v1beta1__namespaces___namespace___cronjobs___name___status.put,
 '🟫', apis__batch__v1beta1__namespaces___namespace___cronjobs___name___status.patch,
 '🟩', apis__batch__v1beta1__watch__cronjobs.get,
 '🟩', apis__batch__v1beta1__watch__namespaces___namespace___cronjobs.get,
 '🟩', apis__batch__v1beta1__watch__namespaces___namespace___cronjobs___name_.get,
 '🟩', apis__certificates_k8s_io__.get,
 '🟩', apis__certificates_k8s_io__v1__.get,
 '🟩', apis__certificates_k8s_io__v1__certificatesigningrequests.get,
 '🟪', apis__certificates_k8s_io__v1__certificatesigningrequests.post,
 '🟥', apis__certificates_k8s_io__v1__certificatesigningrequests.delete,
 '🟩', apis__certificates_k8s_io__v1__certificatesigningrequests___name_.get,
 '🟧', apis__certificates_k8s_io__v1__certificatesigningrequests___name_.put,
 '🟥', apis__certificates_k8s_io__v1__certificatesigningrequests___name_.delete,
 '🟫', apis__certificates_k8s_io__v1__certificatesigningrequests___name_.patch,
 '🟩', apis__certificates_k8s_io__v1__certificatesigningrequests___name___approval.get,
 '🟧', apis__certificates_k8s_io__v1__certificatesigningrequests___name___approval.put,
 '🟫', apis__certificates_k8s_io__v1__certificatesigningrequests___name___approval.patch,
 '🟩', apis__certificates_k8s_io__v1__certificatesigningrequests___name___status.get,
 '🟧', apis__certificates_k8s_io__v1__certificatesigningrequests___name___status.put,
 '🟫', apis__certificates_k8s_io__v1__certificatesigningrequests___name___status.patch,
 '🟩', apis__certificates_k8s_io__v1__watch__certificatesigningrequests.get,
 '🟩', apis__certificates_k8s_io__v1__watch__certificatesigningrequests___name_.get,
 '🟩', apis__coordination_k8s_io__.get,
 '🟩', apis__coordination_k8s_io__v1__.get,
 '🟩', apis__coordination_k8s_io__v1__leases.get,
 '🟩', apis__coordination_k8s_io__v1__namespaces___namespace___leases.get,
 '🟪', apis__coordination_k8s_io__v1__namespaces___namespace___leases.post,
 '🟥', apis__coordination_k8s_io__v1__namespaces___namespace___leases.delete,
 '🟩', apis__coordination_k8s_io__v1__namespaces___namespace___leases___name_.get,
 '🟧', apis__coordination_k8s_io__v1__namespaces___namespace___leases___name_.put,
 '🟥', apis__coordination_k8s_io__v1__namespaces___namespace___leases___name_.delete,
 '🟫', apis__coordination_k8s_io__v1__namespaces___namespace___leases___name_.patch,
 '🟩', apis__coordination_k8s_io__v1__watch__leases.get,
 '🟩', apis__coordination_k8s_io__v1__watch__namespaces___namespace___leases.get,
 '🟩', apis__coordination_k8s_io__v1__watch__namespaces___namespace___leases___name_.get,
 '🟩', apis__discovery_k8s_io__.get,
 '🟩', apis__discovery_k8s_io__v1__.get,
 '🟩', apis__discovery_k8s_io__v1__endpointslices.get,
 '🟩', apis__discovery_k8s_io__v1__namespaces___namespace___endpointslices.get,
 '🟪', apis__discovery_k8s_io__v1__namespaces___namespace___endpointslices.post,
 '🟥', apis__discovery_k8s_io__v1__namespaces___namespace___endpointslices.delete,
 '🟩', apis__discovery_k8s_io__v1__namespaces___namespace___endpointslices___name_.get,
 '🟧', apis__discovery_k8s_io__v1__namespaces___namespace___endpointslices___name_.put,
 '🟥', apis__discovery_k8s_io__v1__namespaces___namespace___endpointslices___name_.delete,
 '🟫', apis__discovery_k8s_io__v1__namespaces___namespace___endpointslices___name_.patch,
 '🟩', apis__discovery_k8s_io__v1__watch__endpointslices.get,
 '🟩', apis__discovery_k8s_io__v1__watch__namespaces___namespace___endpointslices.get,
 '🟩', apis__discovery_k8s_io__v1__watch__namespaces___namespace___endpointslices___name_.get,
 '🟩', apis__discovery_k8s_io__v1beta1__.get,
 '🟩', apis__discovery_k8s_io__v1beta1__endpointslices.get,
 '🟩', apis__discovery_k8s_io__v1beta1__namespaces___namespace___endpointslices.get,
 '🟪', apis__discovery_k8s_io__v1beta1__namespaces___namespace___endpointslices.post,
 '🟥', apis__discovery_k8s_io__v1beta1__namespaces___namespace___endpointslices.delete,
 '🟩', apis__discovery_k8s_io__v1beta1__namespaces___namespace___endpointslices___name_.get,
 '🟧', apis__discovery_k8s_io__v1beta1__namespaces___namespace___endpointslices___name_.put,
 '🟥', apis__discovery_k8s_io__v1beta1__namespaces___namespace___endpointslices___name_.delete,
 '🟫', apis__discovery_k8s_io__v1beta1__namespaces___namespace___endpointslices___name_.patch,
 '🟩', apis__discovery_k8s_io__v1beta1__watch__endpointslices.get,
 '🟩', apis__discovery_k8s_io__v1beta1__watch__namespaces___namespace___endpointslices.get,
 '🟩', apis__discovery_k8s_io__v1beta1__watch__namespaces___namespace___endpointslices___name_.get,
 '🟩', apis__events_k8s_io__.get,
 '🟩', apis__events_k8s_io__v1__.get,
 '🟩', apis__events_k8s_io__v1__events.get,
 '🟩', apis__events_k8s_io__v1__namespaces___namespace___events.get,
 '🟪', apis__events_k8s_io__v1__namespaces___namespace___events.post,
 '🟥', apis__events_k8s_io__v1__namespaces___namespace___events.delete,
 '🟩', apis__events_k8s_io__v1__namespaces___namespace___events___name_.get,
 '🟧', apis__events_k8s_io__v1__namespaces___namespace___events___name_.put,
 '🟥', apis__events_k8s_io__v1__namespaces___namespace___events___name_.delete,
 '🟫', apis__events_k8s_io__v1__namespaces___namespace___events___name_.patch,
 '🟩', apis__events_k8s_io__v1__watch__events.get,
 '🟩', apis__events_k8s_io__v1__watch__namespaces___namespace___events.get,
 '🟩', apis__events_k8s_io__v1__watch__namespaces___namespace___events___name_.get,
 '🟩', apis__events_k8s_io__v1beta1__.get,
 '🟩', apis__events_k8s_io__v1beta1__events.get,
 '🟩', apis__events_k8s_io__v1beta1__namespaces___namespace___events.get,
 '🟪', apis__events_k8s_io__v1beta1__namespaces___namespace___events.post,
 '🟥', apis__events_k8s_io__v1beta1__namespaces___namespace___events.delete,
 '🟩', apis__events_k8s_io__v1beta1__namespaces___namespace___events___name_.get,
 '🟧', apis__events_k8s_io__v1beta1__namespaces___namespace___events___name_.put,
 '🟥', apis__events_k8s_io__v1beta1__namespaces___namespace___events___name_.delete,
 '🟫', apis__events_k8s_io__v1beta1__namespaces___namespace___events___name_.patch,
 '🟩', apis__events_k8s_io__v1beta1__watch__events.get,
 '🟩', apis__events_k8s_io__v1beta1__watch__namespaces___namespace___events.get,
 '🟩', apis__events_k8s_io__v1beta1__watch__namespaces___namespace___events___name_.get,
 '🟩', apis__flowcontrol_apiserver_k8s_io__.get,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta1__.get,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta1__flowschemas.get,
 '🟪', apis__flowcontrol_apiserver_k8s_io__v1beta1__flowschemas.post,
 '🟥', apis__flowcontrol_apiserver_k8s_io__v1beta1__flowschemas.delete,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta1__flowschemas___name_.get,
 '🟧', apis__flowcontrol_apiserver_k8s_io__v1beta1__flowschemas___name_.put,
 '🟥', apis__flowcontrol_apiserver_k8s_io__v1beta1__flowschemas___name_.delete,
 '🟫', apis__flowcontrol_apiserver_k8s_io__v1beta1__flowschemas___name_.patch,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta1__flowschemas___name___status.get,
 '🟧', apis__flowcontrol_apiserver_k8s_io__v1beta1__flowschemas___name___status.put,
 '🟫', apis__flowcontrol_apiserver_k8s_io__v1beta1__flowschemas___name___status.patch,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta1__prioritylevelconfigurations.get,
 '🟪', apis__flowcontrol_apiserver_k8s_io__v1beta1__prioritylevelconfigurations.post,
 '🟥', apis__flowcontrol_apiserver_k8s_io__v1beta1__prioritylevelconfigurations.delete,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta1__prioritylevelconfigurations___name_.get,
 '🟧', apis__flowcontrol_apiserver_k8s_io__v1beta1__prioritylevelconfigurations___name_.put,
 '🟥', apis__flowcontrol_apiserver_k8s_io__v1beta1__prioritylevelconfigurations___name_.delete,
 '🟫', apis__flowcontrol_apiserver_k8s_io__v1beta1__prioritylevelconfigurations___name_.patch,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta1__prioritylevelconfigurations___name___status.get,
 '🟧', apis__flowcontrol_apiserver_k8s_io__v1beta1__prioritylevelconfigurations___name___status.put,
 '🟫', apis__flowcontrol_apiserver_k8s_io__v1beta1__prioritylevelconfigurations___name___status.patch,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta1__watch__flowschemas.get,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta1__watch__flowschemas___name_.get,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta1__watch__prioritylevelconfigurations.get,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta1__watch__prioritylevelconfigurations___name_.get,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta2__.get,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta2__flowschemas.get,
 '🟪', apis__flowcontrol_apiserver_k8s_io__v1beta2__flowschemas.post,
 '🟥', apis__flowcontrol_apiserver_k8s_io__v1beta2__flowschemas.delete,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta2__flowschemas___name_.get,
 '🟧', apis__flowcontrol_apiserver_k8s_io__v1beta2__flowschemas___name_.put,
 '🟥', apis__flowcontrol_apiserver_k8s_io__v1beta2__flowschemas___name_.delete,
 '🟫', apis__flowcontrol_apiserver_k8s_io__v1beta2__flowschemas___name_.patch,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta2__flowschemas___name___status.get,
 '🟧', apis__flowcontrol_apiserver_k8s_io__v1beta2__flowschemas___name___status.put,
 '🟫', apis__flowcontrol_apiserver_k8s_io__v1beta2__flowschemas___name___status.patch,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta2__prioritylevelconfigurations.get,
 '🟪', apis__flowcontrol_apiserver_k8s_io__v1beta2__prioritylevelconfigurations.post,
 '🟥', apis__flowcontrol_apiserver_k8s_io__v1beta2__prioritylevelconfigurations.delete,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta2__prioritylevelconfigurations___name_.get,
 '🟧', apis__flowcontrol_apiserver_k8s_io__v1beta2__prioritylevelconfigurations___name_.put,
 '🟥', apis__flowcontrol_apiserver_k8s_io__v1beta2__prioritylevelconfigurations___name_.delete,
 '🟫', apis__flowcontrol_apiserver_k8s_io__v1beta2__prioritylevelconfigurations___name_.patch,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta2__prioritylevelconfigurations___name___status.get,
 '🟧', apis__flowcontrol_apiserver_k8s_io__v1beta2__prioritylevelconfigurations___name___status.put,
 '🟫', apis__flowcontrol_apiserver_k8s_io__v1beta2__prioritylevelconfigurations___name___status.patch,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta2__watch__flowschemas.get,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta2__watch__flowschemas___name_.get,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta2__watch__prioritylevelconfigurations.get,
 '🟩', apis__flowcontrol_apiserver_k8s_io__v1beta2__watch__prioritylevelconfigurations___name_.get,
 '🟩', apis__networking_k8s_io__.get,
 '🟩', apis__networking_k8s_io__v1__.get,
 '🟩', apis__networking_k8s_io__v1__ingressclasses.get,
 '🟪', apis__networking_k8s_io__v1__ingressclasses.post,
 '🟥', apis__networking_k8s_io__v1__ingressclasses.delete,
 '🟩', apis__networking_k8s_io__v1__ingressclasses___name_.get,
 '🟧', apis__networking_k8s_io__v1__ingressclasses___name_.put,
 '🟥', apis__networking_k8s_io__v1__ingressclasses___name_.delete,
 '🟫', apis__networking_k8s_io__v1__ingressclasses___name_.patch,
 '🟩', apis__networking_k8s_io__v1__ingresses.get,
 '🟩', apis__networking_k8s_io__v1__namespaces___namespace___ingresses.get,
 '🟪', apis__networking_k8s_io__v1__namespaces___namespace___ingresses.post,
 '🟥', apis__networking_k8s_io__v1__namespaces___namespace___ingresses.delete,
 '🟩', apis__networking_k8s_io__v1__namespaces___namespace___ingresses___name_.get,
 '🟧', apis__networking_k8s_io__v1__namespaces___namespace___ingresses___name_.put,
 '🟥', apis__networking_k8s_io__v1__namespaces___namespace___ingresses___name_.delete,
 '🟫', apis__networking_k8s_io__v1__namespaces___namespace___ingresses___name_.patch,
 '🟩', apis__networking_k8s_io__v1__namespaces___namespace___ingresses___name___status.get,
 '🟧', apis__networking_k8s_io__v1__namespaces___namespace___ingresses___name___status.put,
 '🟫', apis__networking_k8s_io__v1__namespaces___namespace___ingresses___name___status.patch,
 '🟩', apis__networking_k8s_io__v1__namespaces___namespace___networkpolicies.get,
 '🟪', apis__networking_k8s_io__v1__namespaces___namespace___networkpolicies.post,
 '🟥', apis__networking_k8s_io__v1__namespaces___namespace___networkpolicies.delete,
 '🟩', apis__networking_k8s_io__v1__namespaces___namespace___networkpolicies___name_.get,
 '🟧', apis__networking_k8s_io__v1__namespaces___namespace___networkpolicies___name_.put,
 '🟥', apis__networking_k8s_io__v1__namespaces___namespace___networkpolicies___name_.delete,
 '🟫', apis__networking_k8s_io__v1__namespaces___namespace___networkpolicies___name_.patch,
 '🟩', apis__networking_k8s_io__v1__networkpolicies.get,
 '🟩', apis__networking_k8s_io__v1__watch__ingressclasses.get,
 '🟩', apis__networking_k8s_io__v1__watch__ingressclasses___name_.get,
 '🟩', apis__networking_k8s_io__v1__watch__ingresses.get,
 '🟩', apis__networking_k8s_io__v1__watch__namespaces___namespace___ingresses.get,
 '🟩', apis__networking_k8s_io__v1__watch__namespaces___namespace___ingresses___name_.get,
 '🟩', apis__networking_k8s_io__v1__watch__namespaces___namespace___networkpolicies.get,
 '🟩', apis__networking_k8s_io__v1__watch__namespaces___namespace___networkpolicies___name_.get,
 '🟩', apis__networking_k8s_io__v1__watch__networkpolicies.get,
 '🟩', apis__node_k8s_io__.get,
 '🟩', apis__node_k8s_io__v1__.get,
 '🟩', apis__node_k8s_io__v1__runtimeclasses.get,
 '🟪', apis__node_k8s_io__v1__runtimeclasses.post,
 '🟥', apis__node_k8s_io__v1__runtimeclasses.delete,
 '🟩', apis__node_k8s_io__v1__runtimeclasses___name_.get,
 '🟧', apis__node_k8s_io__v1__runtimeclasses___name_.put,
 '🟥', apis__node_k8s_io__v1__runtimeclasses___name_.delete,
 '🟫', apis__node_k8s_io__v1__runtimeclasses___name_.patch,
 '🟩', apis__node_k8s_io__v1__watch__runtimeclasses.get,
 '🟩', apis__node_k8s_io__v1__watch__runtimeclasses___name_.get,
 '🟩', apis__node_k8s_io__v1beta1__.get,
 '🟩', apis__node_k8s_io__v1beta1__runtimeclasses.get,
 '🟪', apis__node_k8s_io__v1beta1__runtimeclasses.post,
 '🟥', apis__node_k8s_io__v1beta1__runtimeclasses.delete,
 '🟩', apis__node_k8s_io__v1beta1__runtimeclasses___name_.get,
 '🟧', apis__node_k8s_io__v1beta1__runtimeclasses___name_.put,
 '🟥', apis__node_k8s_io__v1beta1__runtimeclasses___name_.delete,
 '🟫', apis__node_k8s_io__v1beta1__runtimeclasses___name_.patch,
 '🟩', apis__node_k8s_io__v1beta1__watch__runtimeclasses.get,
 '🟩', apis__node_k8s_io__v1beta1__watch__runtimeclasses___name_.get,
 '🟩', apis__policy__.get,
 '🟩', apis__policy__v1__.get,
 '🟩', apis__policy__v1__namespaces___namespace___poddisruptionbudgets.get,
 '🟪', apis__policy__v1__namespaces___namespace___poddisruptionbudgets.post,
 '🟥', apis__policy__v1__namespaces___namespace___poddisruptionbudgets.delete,
 '🟩', apis__policy__v1__namespaces___namespace___poddisruptionbudgets___name_.get,
 '🟧', apis__policy__v1__namespaces___namespace___poddisruptionbudgets___name_.put,
 '🟥', apis__policy__v1__namespaces___namespace___poddisruptionbudgets___name_.delete,
 '🟫', apis__policy__v1__namespaces___namespace___poddisruptionbudgets___name_.patch,
 '🟩', apis__policy__v1__namespaces___namespace___poddisruptionbudgets___name___status.get,
 '🟧', apis__policy__v1__namespaces___namespace___poddisruptionbudgets___name___status.put,
 '🟫', apis__policy__v1__namespaces___namespace___poddisruptionbudgets___name___status.patch,
 '🟩', apis__policy__v1__poddisruptionbudgets.get,
 '🟩', apis__policy__v1__watch__namespaces___namespace___poddisruptionbudgets.get,
 '🟩', apis__policy__v1__watch__namespaces___namespace___poddisruptionbudgets___name_.get,
 '🟩', apis__policy__v1__watch__poddisruptionbudgets.get,
 '🟩', apis__policy__v1beta1__.get,
 '🟩', apis__policy__v1beta1__namespaces___namespace___poddisruptionbudgets.get,
 '🟪', apis__policy__v1beta1__namespaces___namespace___poddisruptionbudgets.post,
 '🟥', apis__policy__v1beta1__namespaces___namespace___poddisruptionbudgets.delete,
 '🟩', apis__policy__v1beta1__namespaces___namespace___poddisruptionbudgets___name_.get,
 '🟧', apis__policy__v1beta1__namespaces___namespace___poddisruptionbudgets___name_.put,
 '🟥', apis__policy__v1beta1__namespaces___namespace___poddisruptionbudgets___name_.delete,
 '🟫', apis__policy__v1beta1__namespaces___namespace___poddisruptionbudgets___name_.patch,
 '🟩', apis__policy__v1beta1__namespaces___namespace___poddisruptionbudgets___name___status.get,
 '🟧', apis__policy__v1beta1__namespaces___namespace___poddisruptionbudgets___name___status.put,
 '🟫', apis__policy__v1beta1__namespaces___namespace___poddisruptionbudgets___name___status.patch,
 '🟩', apis__policy__v1beta1__poddisruptionbudgets.get,
 '🟩', apis__policy__v1beta1__podsecuritypolicies.get,
 '🟪', apis__policy__v1beta1__podsecuritypolicies.post,
 '🟥', apis__policy__v1beta1__podsecuritypolicies.delete,
 '🟩', apis__policy__v1beta1__podsecuritypolicies___name_.get,
 '🟧', apis__policy__v1beta1__podsecuritypolicies___name_.put,
 '🟥', apis__policy__v1beta1__podsecuritypolicies___name_.delete,
 '🟫', apis__policy__v1beta1__podsecuritypolicies___name_.patch,
 '🟩', apis__policy__v1beta1__watch__namespaces___namespace___poddisruptionbudgets.get,
 '🟩', apis__policy__v1beta1__watch__namespaces___namespace___poddisruptionbudgets___name_.get,
 '🟩', apis__policy__v1beta1__watch__poddisruptionbudgets.get,
 '🟩', apis__policy__v1beta1__watch__podsecuritypolicies.get,
 '🟩', apis__policy__v1beta1__watch__podsecuritypolicies___name_.get,
 '🟩', apis__rbac_authorization_k8s_io__.get,
 '🟩', apis__rbac_authorization_k8s_io__v1__.get,
 '🟩', apis__rbac_authorization_k8s_io__v1__clusterrolebindings.get,
 '🟪', apis__rbac_authorization_k8s_io__v1__clusterrolebindings.post,
 '🟥', apis__rbac_authorization_k8s_io__v1__clusterrolebindings.delete,
 '🟩', apis__rbac_authorization_k8s_io__v1__clusterrolebindings___name_.get,
 '🟧', apis__rbac_authorization_k8s_io__v1__clusterrolebindings___name_.put,
 '🟥', apis__rbac_authorization_k8s_io__v1__clusterrolebindings___name_.delete,
 '🟫', apis__rbac_authorization_k8s_io__v1__clusterrolebindings___name_.patch,
 '🟩', apis__rbac_authorization_k8s_io__v1__clusterroles.get,
 '🟪', apis__rbac_authorization_k8s_io__v1__clusterroles.post,
 '🟥', apis__rbac_authorization_k8s_io__v1__clusterroles.delete,
 '🟩', apis__rbac_authorization_k8s_io__v1__clusterroles___name_.get,
 '🟧', apis__rbac_authorization_k8s_io__v1__clusterroles___name_.put,
 '🟥', apis__rbac_authorization_k8s_io__v1__clusterroles___name_.delete,
 '🟫', apis__rbac_authorization_k8s_io__v1__clusterroles___name_.patch,
 '🟩', apis__rbac_authorization_k8s_io__v1__namespaces___namespace___rolebindings.get,
 '🟪', apis__rbac_authorization_k8s_io__v1__namespaces___namespace___rolebindings.post,
 '🟥', apis__rbac_authorization_k8s_io__v1__namespaces___namespace___rolebindings.delete,
 '🟩', apis__rbac_authorization_k8s_io__v1__namespaces___namespace___rolebindings___name_.get,
 '🟧', apis__rbac_authorization_k8s_io__v1__namespaces___namespace___rolebindings___name_.put,
 '🟥', apis__rbac_authorization_k8s_io__v1__namespaces___namespace___rolebindings___name_.delete,
 '🟫', apis__rbac_authorization_k8s_io__v1__namespaces___namespace___rolebindings___name_.patch,
 '🟩', apis__rbac_authorization_k8s_io__v1__namespaces___namespace___roles.get,
 '🟪', apis__rbac_authorization_k8s_io__v1__namespaces___namespace___roles.post,
 '🟥', apis__rbac_authorization_k8s_io__v1__namespaces___namespace___roles.delete,
 '🟩', apis__rbac_authorization_k8s_io__v1__namespaces___namespace___roles___name_.get,
 '🟧', apis__rbac_authorization_k8s_io__v1__namespaces___namespace___roles___name_.put,
 '🟥', apis__rbac_authorization_k8s_io__v1__namespaces___namespace___roles___name_.delete,
 '🟫', apis__rbac_authorization_k8s_io__v1__namespaces___namespace___roles___name_.patch,
 '🟩', apis__rbac_authorization_k8s_io__v1__rolebindings.get,
 '🟩', apis__rbac_authorization_k8s_io__v1__roles.get,
 '🟩', apis__rbac_authorization_k8s_io__v1__watch__clusterrolebindings.get,
 '🟩', apis__rbac_authorization_k8s_io__v1__watch__clusterrolebindings___name_.get,
 '🟩', apis__rbac_authorization_k8s_io__v1__watch__clusterroles.get,
 '🟩', apis__rbac_authorization_k8s_io__v1__watch__clusterroles___name_.get,
 '🟩', apis__rbac_authorization_k8s_io__v1__watch__namespaces___namespace___rolebindings.get,
 '🟩', apis__rbac_authorization_k8s_io__v1__watch__namespaces___namespace___rolebindings___name_.get,
 '🟩', apis__rbac_authorization_k8s_io__v1__watch__namespaces___namespace___roles.get,
 '🟩', apis__rbac_authorization_k8s_io__v1__watch__namespaces___namespace___roles___name_.get,
 '🟩', apis__rbac_authorization_k8s_io__v1__watch__rolebindings.get,
 '🟩', apis__rbac_authorization_k8s_io__v1__watch__roles.get,
 '🟩', apis__scheduling_k8s_io__.get,
 '🟩', apis__scheduling_k8s_io__v1__.get,
 '🟩', apis__scheduling_k8s_io__v1__priorityclasses.get,
 '🟪', apis__scheduling_k8s_io__v1__priorityclasses.post,
 '🟥', apis__scheduling_k8s_io__v1__priorityclasses.delete,
 '🟩', apis__scheduling_k8s_io__v1__priorityclasses___name_.get,
 '🟧', apis__scheduling_k8s_io__v1__priorityclasses___name_.put,
 '🟥', apis__scheduling_k8s_io__v1__priorityclasses___name_.delete,
 '🟫', apis__scheduling_k8s_io__v1__priorityclasses___name_.patch,
 '🟩', apis__scheduling_k8s_io__v1__watch__priorityclasses.get,
 '🟩', apis__scheduling_k8s_io__v1__watch__priorityclasses___name_.get,
 '🟩', apis__storage_k8s_io__.get,
 '🟩', apis__storage_k8s_io__v1__.get,
 '🟩', apis__storage_k8s_io__v1__csidrivers.get,
 '🟪', apis__storage_k8s_io__v1__csidrivers.post,
 '🟥', apis__storage_k8s_io__v1__csidrivers.delete,
 '🟩', apis__storage_k8s_io__v1__csidrivers___name_.get,
 '🟧', apis__storage_k8s_io__v1__csidrivers___name_.put,
 '🟥', apis__storage_k8s_io__v1__csidrivers___name_.delete,
 '🟫', apis__storage_k8s_io__v1__csidrivers___name_.patch,
 '🟩', apis__storage_k8s_io__v1__csinodes.get,
 '🟪', apis__storage_k8s_io__v1__csinodes.post,
 '🟥', apis__storage_k8s_io__v1__csinodes.delete,
 '🟩', apis__storage_k8s_io__v1__csinodes___name_.get,
 '🟧', apis__storage_k8s_io__v1__csinodes___name_.put,
 '🟥', apis__storage_k8s_io__v1__csinodes___name_.delete,
 '🟫', apis__storage_k8s_io__v1__csinodes___name_.patch,
 '🟩', apis__storage_k8s_io__v1__storageclasses.get,
 '🟪', apis__storage_k8s_io__v1__storageclasses.post,
 '🟥', apis__storage_k8s_io__v1__storageclasses.delete,
 '🟩', apis__storage_k8s_io__v1__storageclasses___name_.get,
 '🟧', apis__storage_k8s_io__v1__storageclasses___name_.put,
 '🟥', apis__storage_k8s_io__v1__storageclasses___name_.delete,
 '🟫', apis__storage_k8s_io__v1__storageclasses___name_.patch,
 '🟩', apis__storage_k8s_io__v1__volumeattachments.get,
 '🟪', apis__storage_k8s_io__v1__volumeattachments.post,
 '🟥', apis__storage_k8s_io__v1__volumeattachments.delete,
 '🟩', apis__storage_k8s_io__v1__volumeattachments___name_.get,
 '🟧', apis__storage_k8s_io__v1__volumeattachments___name_.put,
 '🟥', apis__storage_k8s_io__v1__volumeattachments___name_.delete,
 '🟫', apis__storage_k8s_io__v1__volumeattachments___name_.patch,
 '🟩', apis__storage_k8s_io__v1__volumeattachments___name___status.get,
 '🟧', apis__storage_k8s_io__v1__volumeattachments___name___status.put,
 '🟫', apis__storage_k8s_io__v1__volumeattachments___name___status.patch,
 '🟩', apis__storage_k8s_io__v1__watch__csidrivers.get,
 '🟩', apis__storage_k8s_io__v1__watch__csidrivers___name_.get,
 '🟩', apis__storage_k8s_io__v1__watch__csinodes.get,
 '🟩', apis__storage_k8s_io__v1__watch__csinodes___name_.get,
 '🟩', apis__storage_k8s_io__v1__watch__storageclasses.get,
 '🟩', apis__storage_k8s_io__v1__watch__storageclasses___name_.get,
 '🟩', apis__storage_k8s_io__v1__watch__volumeattachments.get,
 '🟩', apis__storage_k8s_io__v1__watch__volumeattachments___name_.get,
 '🟩', apis__storage_k8s_io__v1beta1__.get,
 '🟩', apis__storage_k8s_io__v1beta1__csistoragecapacities.get,
 '🟩', apis__storage_k8s_io__v1beta1__namespaces___namespace___csistoragecapacities.get,
 '🟪', apis__storage_k8s_io__v1beta1__namespaces___namespace___csistoragecapacities.post,
 '🟥', apis__storage_k8s_io__v1beta1__namespaces___namespace___csistoragecapacities.delete,
 '🟩', apis__storage_k8s_io__v1beta1__namespaces___namespace___csistoragecapacities___name_.get,
 '🟧', apis__storage_k8s_io__v1beta1__namespaces___namespace___csistoragecapacities___name_.put,
 '🟥', apis__storage_k8s_io__v1beta1__namespaces___namespace___csistoragecapacities___name_.delete,
 '🟫', apis__storage_k8s_io__v1beta1__namespaces___namespace___csistoragecapacities___name_.patch,
 '🟩', apis__storage_k8s_io__v1beta1__watch__csistoragecapacities.get,
 '🟩', apis__storage_k8s_io__v1beta1__watch__namespaces___namespace___csistoragecapacities.get,
 '🟩', apis__storage_k8s_io__v1beta1__watch__namespaces___namespace___csistoragecapacities___name_.get,
 '🟩', logs__.get,
 '🟩', logs___logpath_.get,
 '🟩', openid__v1__jwks__.get,
 '🟩', version__.get,
) 
# fmt:on


class Defs:
    class definitions_io_k8s_api_admissionregistration_v1_MutatingWebhook:
        """#/definitions/io.k8s.api.admissionregistration.v1.MutatingWebhook"""
        class R:
            description = 'MutatingWebhook describes an admission webhook and the resources and operations it applies to.'
            type = 'object'
            required = ['name', 'clientConfig', 'sideEffects', 'admissionReviewVersions']
            _attrs = ['admissionReviewVersions', 'clientConfig', 'failurePolicy', 'matchPolicy', 'name', 'namespaceSelector', 'objectSelector', 'reinvocationPolicy', 'rules', 'sideEffects', 'timeoutSeconds']
            admissionReviewVersions = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.'}
            clientConfig = {'$ref': lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_WebhookClientConfig, 'descr': 'ClientConfig defines how to communicate with the hook. Required'}
            failurePolicy = {'type': 'string', 'descr': 'FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.'}
            matchPolicy = {'type': 'string', 'descr': 'matchPolicy defines how the "rules" list is used to match incoming requests. Allowed values are "Exact" or "Equivalent".\n\n- Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.\n\n- Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.\n\nDefaults to "Equivalent"'}
            name = {'type': 'string', 'descr': 'The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy" is the name of the webhook, and kubernetes.io is the name of the organization. Required.'}
            namespaceSelector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook.\n\nFor example, to run the webhook on any objects whose namespace is not associated with "runlevel" of "0" or "1";  you will set the selector as follows: "namespaceSelector": {\n  "matchExpressions": [\n    {\n      "key": "runlevel",\n      "operator": "NotIn",\n      "values": [\n        "0",\n        "1"\n      ]\n    }\n  ]\n}\n\nIf instead you want to only run the webhook on any objects whose namespace is associated with the "environment" of "prod" or "staging"; you will set the selector as follows: "namespaceSelector": {\n  "matchExpressions": [\n    {\n      "key": "environment",\n      "operator": "In",\n      "values": [\n        "prod",\n        "staging"\n      ]\n    }\n  ]\n}\n\nSee https://kubernetes.i...'}
            objectSelector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'ObjectSelector decides whether to run the webhook based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.'}
            reinvocationPolicy = {'type': 'string', 'descr': 'reinvocationPolicy indicates whether this webhook should be called multiple times as part of a single admission evaluation. Allowed values are "Never" and "IfNeeded".\n\nNever: the webhook will not be called more than once in a single admission evaluation.\n\nIfNeeded: the webhook will be called at least one additional time as part of the admission evaluation if the object being admitted is modified by other admission plugins after the initial webhook call. Webhooks that specify this option *must* be idempotent, able to process objects they previously admitted. Note: * the number of additional invocations is not guaranteed to be exactly one. * if additional invocations result in further modifications to the object, webhooks are not guaranteed to be invoked again. * webhooks that use this option may be reordered to minimize the number of additional invocations. * to validate an object after all mutations are guaranteed complete, use a validating admission webhook instead.\n\nDefaults to "Neve...'}
            rules = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_RuleWithOperations, 'descr': 'Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.'}
            sideEffects = {'type': 'string', 'descr': 'SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission chain and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.'}
            timeoutSeconds = {'type': 'integer', 'format': 'int32', 'descr': 'TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.'}
        R.admissionReviewVersions = [str_dflt]
        R.clientConfig = lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_WebhookClientConfig
        R.failurePolicy = str_dflt
        R.matchPolicy = str_dflt
        R.name = name
        R.namespaceSelector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.objectSelector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.reinvocationPolicy = str_dflt
        R.rules = [lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_RuleWithOperations]
        R.sideEffects = str_dflt
        R.timeoutSeconds = 0
    class definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfiguration:
        """#/definitions/io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration"""
        class R:
            description = 'MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'admissionregistration.k8s.io', 'kind': 'MutatingWebhookConfiguration', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'webhooks']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.'}
            webhooks = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhook, 'x-kubernetes-patch-merge-key': 'name', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'Webhooks is a list of webhooks and the affected resources and operations.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.webhooks = [lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhook]
    class definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfigurationList:
        """#/definitions/io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList"""
        class R:
            description = 'MutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'admissionregistration.k8s.io', 'kind': 'MutatingWebhookConfigurationList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfiguration, 'descr': 'List of MutatingWebhookConfiguration.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfiguration]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_admissionregistration_v1_RuleWithOperations:
        """#/definitions/io.k8s.api.admissionregistration.v1.RuleWithOperations"""
        class R:
            description = 'RuleWithOperations is a tuple of Operations and Resources. It is recommended to make sure that all the tuple expansions are valid.'
            type = 'object'
            _attrs = ['apiGroups', 'apiVersions', 'operations', 'resources', 'scope']
            apiGroups = {'type': 'array', 'items': {'type': 'string'}, 'descr': "APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required."}
            apiVersions = {'type': 'array', 'items': {'type': 'string'}, 'descr': "APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required."}
            operations = {'type': 'array', 'items': {'type': 'string'}, 'descr': "Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required."}
            resources = {'type': 'array', 'items': {'type': 'string'}, 'descr': "Resources is a list of resources this rule applies to.\n\nFor example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.\n\nIf wildcard is present, the validation rule will ensure resources do not overlap with each other.\n\nDepending on the enclosing object, subresources might not be allowed. Required."}
            scope = {'type': 'string', 'descr': 'scope specifies the scope of this rule. Valid values are "Cluster", "Namespaced", and "*" "Cluster" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. "Namespaced" means that only namespaced resources will match this rule. "*" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is "*".'}
        R.apiGroups = [str_dflt]
        R.apiVersions = [str_dflt]
        R.operations = [str_dflt]
        R.resources = [str_dflt]
        R.scope = str_dflt
    class definitions_io_k8s_api_admissionregistration_v1_ServiceReference:
        """#/definitions/io.k8s.api.admissionregistration.v1.ServiceReference"""
        class R:
            description = 'ServiceReference holds a reference to Service.legacy.k8s.io'
            type = 'object'
            required = ['namespace', 'name']
            _attrs = ['name', 'namespace', 'path', 'port']
            name = {'type': 'string', 'descr': '`name` is the name of the service. Required'}
            namespace = {'type': 'string', 'descr': '`namespace` is the namespace of the service. Required'}
            path = {'type': 'string', 'descr': '`path` is an optional URL path which will be sent in any request to this service.'}
            port = {'type': 'integer', 'format': 'int32', 'descr': 'If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).'}
        R.name = name
        R.namespace = namespace
        R.path = path
        R.port = 0
    class definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhook:
        """#/definitions/io.k8s.api.admissionregistration.v1.ValidatingWebhook"""
        class R:
            description = 'ValidatingWebhook describes an admission webhook and the resources and operations it applies to.'
            type = 'object'
            required = ['name', 'clientConfig', 'sideEffects', 'admissionReviewVersions']
            _attrs = ['admissionReviewVersions', 'clientConfig', 'failurePolicy', 'matchPolicy', 'name', 'namespaceSelector', 'objectSelector', 'rules', 'sideEffects', 'timeoutSeconds']
            admissionReviewVersions = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.'}
            clientConfig = {'$ref': lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_WebhookClientConfig, 'descr': 'ClientConfig defines how to communicate with the hook. Required'}
            failurePolicy = {'type': 'string', 'descr': 'FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.'}
            matchPolicy = {'type': 'string', 'descr': 'matchPolicy defines how the "rules" list is used to match incoming requests. Allowed values are "Exact" or "Equivalent".\n\n- Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.\n\n- Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.\n\nDefaults to "Equivalent"'}
            name = {'type': 'string', 'descr': 'The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy" is the name of the webhook, and kubernetes.io is the name of the organization. Required.'}
            namespaceSelector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook.\n\nFor example, to run the webhook on any objects whose namespace is not associated with "runlevel" of "0" or "1";  you will set the selector as follows: "namespaceSelector": {\n  "matchExpressions": [\n    {\n      "key": "runlevel",\n      "operator": "NotIn",\n      "values": [\n        "0",\n        "1"\n      ]\n    }\n  ]\n}\n\nIf instead you want to only run the webhook on any objects whose namespace is associated with the "environment" of "prod" or "staging"; you will set the selector as follows: "namespaceSelector": {\n  "matchExpressions": [\n    {\n      "key": "environment",\n      "operator": "In",\n      "values": [\n        "prod",\n        "staging"\n      ]\n    }\n  ]\n}\n\nSee https://kubernetes.i...'}
            objectSelector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'ObjectSelector decides whether to run the webhook based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.'}
            rules = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_RuleWithOperations, 'descr': 'Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.'}
            sideEffects = {'type': 'string', 'descr': 'SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission chain and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.'}
            timeoutSeconds = {'type': 'integer', 'format': 'int32', 'descr': 'TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.'}
        R.admissionReviewVersions = [str_dflt]
        R.clientConfig = lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_WebhookClientConfig
        R.failurePolicy = str_dflt
        R.matchPolicy = str_dflt
        R.name = name
        R.namespaceSelector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.objectSelector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.rules = [lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_RuleWithOperations]
        R.sideEffects = str_dflt
        R.timeoutSeconds = 0
    class definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfiguration:
        """#/definitions/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration"""
        class R:
            description = 'ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'admissionregistration.k8s.io', 'kind': 'ValidatingWebhookConfiguration', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'webhooks']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.'}
            webhooks = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhook, 'x-kubernetes-patch-merge-key': 'name', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'Webhooks is a list of webhooks and the affected resources and operations.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.webhooks = [lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhook]
    class definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfigurationList:
        """#/definitions/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList"""
        class R:
            description = 'ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'admissionregistration.k8s.io', 'kind': 'ValidatingWebhookConfigurationList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfiguration, 'descr': 'List of ValidatingWebhookConfiguration.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfiguration]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_admissionregistration_v1_WebhookClientConfig:
        """#/definitions/io.k8s.api.admissionregistration.v1.WebhookClientConfig"""
        class R:
            description = 'WebhookClientConfig contains the information to make a TLS connection with the webhook'
            type = 'object'
            _attrs = ['caBundle', 'service', 'url']
            caBundle = {'type': 'string', 'format': 'byte', 'descr': "`caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used."}
            service = {'$ref': lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_ServiceReference, 'descr': '`service` is a reference to the service for this webhook. Either `service` or `url` must be specified.\n\nIf the webhook is running within the cluster, then you should use `service`.'}
            url = {'type': 'string', 'descr': '`url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.\n\nThe `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.\n\nPlease note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\n\nThe scheme must be "https"; the URL must begin with "https://".\n\nA path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.\n\nAttempting to use a user or basi...'}
        R.caBundle = str_dflt
        R.service = lambda: Defs.definitions_io_k8s_api_admissionregistration_v1_ServiceReference
        R.url = str_dflt
    class definitions_io_k8s_api_apps_v1_ControllerRevision:
        """#/definitions/io.k8s.api.apps.v1.ControllerRevision"""
        class R:
            description = 'ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers.'
            type = 'object'
            required = ['revision']
            x_kubernetes_group_version_kind = [{'group': 'apps', 'kind': 'ControllerRevision', 'version': 'v1'}]
            _attrs = ['apiVersion', 'data', 'kind', 'metadata', 'revision']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            data = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_runtime_RawExtension, 'descr': 'Data is the serialized representation of the state.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            revision = {'type': 'integer', 'format': 'int64', 'descr': 'Revision indicates the revision of the state represented by Data.'}
        R.apiVersion = str_dflt
        R.data = lambda: Defs.definitions_io_k8s_apimachinery_pkg_runtime_RawExtension
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.revision = 0
    class definitions_io_k8s_api_apps_v1_ControllerRevisionList:
        """#/definitions/io.k8s.api.apps.v1.ControllerRevisionList"""
        class R:
            description = 'ControllerRevisionList is a resource containing a list of ControllerRevision objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'apps', 'kind': 'ControllerRevisionList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_apps_v1_ControllerRevision, 'descr': 'Items is the list of ControllerRevisions'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_apps_v1_ControllerRevision]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_apps_v1_DaemonSet:
        """#/definitions/io.k8s.api.apps.v1.DaemonSet"""
        class R:
            description = 'DaemonSet represents the configuration of a daemon set.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'apps', 'kind': 'DaemonSet', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_apps_v1_DaemonSetSpec, 'descr': 'The desired behavior of this daemon set. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_apps_v1_DaemonSetStatus, 'descr': 'The current status of this daemon set. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_apps_v1_DaemonSetSpec
        R.status = lambda: Defs.definitions_io_k8s_api_apps_v1_DaemonSetStatus
    class definitions_io_k8s_api_apps_v1_DaemonSetCondition:
        """#/definitions/io.k8s.api.apps.v1.DaemonSetCondition"""
        class R:
            description = 'DaemonSetCondition describes the state of a DaemonSet at a certain point.'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Last time the condition transitioned from one status to another.'}
            message = {'type': 'string', 'descr': 'A human readable message indicating details about the transition.'}
            reason = {'type': 'string', 'descr': "The reason for the condition's last transition."}
            status = {'type': 'string', 'descr': 'Status of the condition, one of True, False, Unknown.'}
            type = {'type': 'string', 'descr': 'Type of DaemonSet condition.'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_apps_v1_DaemonSetList:
        """#/definitions/io.k8s.api.apps.v1.DaemonSetList"""
        class R:
            description = 'DaemonSetList is a collection of daemon sets.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'apps', 'kind': 'DaemonSetList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_apps_v1_DaemonSet, 'descr': 'A list of daemon sets.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_apps_v1_DaemonSet]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_apps_v1_DaemonSetSpec:
        """#/definitions/io.k8s.api.apps.v1.DaemonSetSpec"""
        class R:
            description = 'DaemonSetSpec is the specification of a daemon set.'
            type = 'object'
            required = ['selector', 'template']
            _attrs = ['minReadySeconds', 'revisionHistoryLimit', 'selector', 'template', 'updateStrategy']
            minReadySeconds = {'type': 'integer', 'format': 'int32', 'descr': 'The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).'}
            revisionHistoryLimit = {'type': 'integer', 'format': 'int32', 'descr': 'The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.'}
            selector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': "A label query over pods that are managed by the daemon set. Must match in order to be controlled. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"}
            template = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PodTemplateSpec, 'descr': "An object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template"}
            updateStrategy = {'$ref': lambda: Defs.definitions_io_k8s_api_apps_v1_DaemonSetUpdateStrategy, 'descr': 'An update strategy to replace existing DaemonSet pods with new pods.'}
        R.minReadySeconds = 0
        R.revisionHistoryLimit = 0
        R.selector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.template = lambda: Defs.definitions_io_k8s_api_core_v1_PodTemplateSpec
        R.updateStrategy = lambda: Defs.definitions_io_k8s_api_apps_v1_DaemonSetUpdateStrategy
    class definitions_io_k8s_api_apps_v1_DaemonSetStatus:
        """#/definitions/io.k8s.api.apps.v1.DaemonSetStatus"""
        class R:
            description = 'DaemonSetStatus represents the current status of a daemon set.'
            type = 'object'
            required = ['currentNumberScheduled', 'numberMisscheduled', 'desiredNumberScheduled', 'numberReady']
            _attrs = ['collisionCount', 'conditions', 'currentNumberScheduled', 'desiredNumberScheduled', 'numberAvailable', 'numberMisscheduled', 'numberReady', 'numberUnavailable', 'observedGeneration', 'updatedNumberScheduled']
            collisionCount = {'type': 'integer', 'format': 'int32', 'descr': 'Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.'}
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_apps_v1_DaemonSetCondition, 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': "Represents the latest available observations of a DaemonSet's current state."}
            currentNumberScheduled = {'type': 'integer', 'format': 'int32', 'descr': 'The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'}
            desiredNumberScheduled = {'type': 'integer', 'format': 'int32', 'descr': 'The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'}
            numberAvailable = {'type': 'integer', 'format': 'int32', 'descr': 'The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)'}
            numberMisscheduled = {'type': 'integer', 'format': 'int32', 'descr': 'The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'}
            numberReady = {'type': 'integer', 'format': 'int32', 'descr': 'numberReady is the number of nodes that should be running the daemon pod and have one or more of the daemon pod running with a Ready Condition.'}
            numberUnavailable = {'type': 'integer', 'format': 'int32', 'descr': 'The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)'}
            observedGeneration = {'type': 'integer', 'format': 'int64', 'descr': 'The most recent generation observed by the daemon set controller.'}
            updatedNumberScheduled = {'type': 'integer', 'format': 'int32', 'descr': 'The total number of nodes that are running updated daemon pod'}
        R.collisionCount = 0
        R.conditions = [lambda: Defs.definitions_io_k8s_api_apps_v1_DaemonSetCondition]
        R.currentNumberScheduled = 0
        R.desiredNumberScheduled = 0
        R.numberAvailable = 0
        R.numberMisscheduled = 0
        R.numberReady = 0
        R.numberUnavailable = 0
        R.observedGeneration = 0
        R.updatedNumberScheduled = 0
    class definitions_io_k8s_api_apps_v1_DaemonSetUpdateStrategy:
        """#/definitions/io.k8s.api.apps.v1.DaemonSetUpdateStrategy"""
        class R:
            description = 'DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.'
            type = 'object'
            _attrs = ['rollingUpdate', 'type']
            rollingUpdate = {'$ref': lambda: Defs.definitions_io_k8s_api_apps_v1_RollingUpdateDaemonSet, 'descr': 'Rolling update config params. Present only if type = "RollingUpdate".'}
            type = {'type': 'string', 'descr': 'Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.\n\n'}
        R.rollingUpdate = lambda: Defs.definitions_io_k8s_api_apps_v1_RollingUpdateDaemonSet
        R.type = str_dflt
    class definitions_io_k8s_api_apps_v1_Deployment:
        """#/definitions/io.k8s.api.apps.v1.Deployment"""
        class R:
            description = 'Deployment enables declarative updates for Pods and ReplicaSets.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'apps', 'kind': 'Deployment', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_apps_v1_DeploymentSpec, 'descr': 'Specification of the desired behavior of the Deployment.'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_apps_v1_DeploymentStatus, 'descr': 'Most recently observed status of the Deployment.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_apps_v1_DeploymentSpec
        R.status = lambda: Defs.definitions_io_k8s_api_apps_v1_DeploymentStatus
    class definitions_io_k8s_api_apps_v1_DeploymentCondition:
        """#/definitions/io.k8s.api.apps.v1.DeploymentCondition"""
        class R:
            description = 'DeploymentCondition describes the state of a deployment at a certain point.'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['lastTransitionTime', 'lastUpdateTime', 'message', 'reason', 'status', 'type']
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Last time the condition transitioned from one status to another.'}
            lastUpdateTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'The last time this condition was updated.'}
            message = {'type': 'string', 'descr': 'A human readable message indicating details about the transition.'}
            reason = {'type': 'string', 'descr': "The reason for the condition's last transition."}
            status = {'type': 'string', 'descr': 'Status of the condition, one of True, False, Unknown.'}
            type = {'type': 'string', 'descr': 'Type of deployment condition.'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.lastUpdateTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_apps_v1_DeploymentList:
        """#/definitions/io.k8s.api.apps.v1.DeploymentList"""
        class R:
            description = 'DeploymentList is a list of Deployments.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'apps', 'kind': 'DeploymentList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_apps_v1_Deployment, 'descr': 'Items is the list of Deployments.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata.'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_apps_v1_Deployment]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_apps_v1_DeploymentSpec:
        """#/definitions/io.k8s.api.apps.v1.DeploymentSpec"""
        class R:
            description = 'DeploymentSpec is the specification of the desired behavior of the Deployment.'
            type = 'object'
            required = ['selector', 'template']
            _attrs = ['minReadySeconds', 'paused', 'progressDeadlineSeconds', 'replicas', 'revisionHistoryLimit', 'selector', 'strategy', 'template']
            minReadySeconds = {'type': 'integer', 'format': 'int32', 'descr': 'Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)'}
            paused = {'type': 'boolean', 'descr': 'Indicates that the deployment is paused.'}
            progressDeadlineSeconds = {'type': 'integer', 'format': 'int32', 'descr': 'The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.'}
            replicas = {'type': 'integer', 'format': 'int32', 'descr': 'Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.'}
            revisionHistoryLimit = {'type': 'integer', 'format': 'int32', 'descr': 'The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.'}
            selector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment. It must match the pod template's labels."}
            strategy = {'x-kubernetes-patch-strategy': 'retainKeys', '$ref': lambda: Defs.definitions_io_k8s_api_apps_v1_DeploymentStrategy, 'descr': 'The deployment strategy to use to replace existing pods with new ones.'}
            template = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PodTemplateSpec, 'descr': 'Template describes the pods that will be created.'}
        R.minReadySeconds = 0
        R.paused = True
        R.progressDeadlineSeconds = 0
        R.replicas = 0
        R.revisionHistoryLimit = 0
        R.selector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.strategy = lambda: Defs.definitions_io_k8s_api_apps_v1_DeploymentStrategy
        R.template = lambda: Defs.definitions_io_k8s_api_core_v1_PodTemplateSpec
    class definitions_io_k8s_api_apps_v1_DeploymentStatus:
        """#/definitions/io.k8s.api.apps.v1.DeploymentStatus"""
        class R:
            description = 'DeploymentStatus is the most recently observed status of the Deployment.'
            type = 'object'
            _attrs = ['availableReplicas', 'collisionCount', 'conditions', 'observedGeneration', 'readyReplicas', 'replicas', 'unavailableReplicas', 'updatedReplicas']
            availableReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.'}
            collisionCount = {'type': 'integer', 'format': 'int32', 'descr': 'Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.'}
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_apps_v1_DeploymentCondition, 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': "Represents the latest available observations of a deployment's current state."}
            observedGeneration = {'type': 'integer', 'format': 'int64', 'descr': 'The generation observed by the deployment controller.'}
            readyReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'readyReplicas is the number of pods targeted by this Deployment with a Ready Condition.'}
            replicas = {'type': 'integer', 'format': 'int32', 'descr': 'Total number of non-terminated pods targeted by this deployment (their labels match the selector).'}
            unavailableReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.'}
            updatedReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'Total number of non-terminated pods targeted by this deployment that have the desired template spec.'}
        R.availableReplicas = 0
        R.collisionCount = 0
        R.conditions = [lambda: Defs.definitions_io_k8s_api_apps_v1_DeploymentCondition]
        R.observedGeneration = 0
        R.readyReplicas = 0
        R.replicas = 0
        R.unavailableReplicas = 0
        R.updatedReplicas = 0
    class definitions_io_k8s_api_apps_v1_DeploymentStrategy:
        """#/definitions/io.k8s.api.apps.v1.DeploymentStrategy"""
        class R:
            description = 'DeploymentStrategy describes how to replace existing pods with new ones.'
            type = 'object'
            _attrs = ['rollingUpdate', 'type']
            rollingUpdate = {'$ref': lambda: Defs.definitions_io_k8s_api_apps_v1_RollingUpdateDeployment, 'descr': 'Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.'}
            type = {'type': 'string', 'descr': 'Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.\n\n'}
        R.rollingUpdate = lambda: Defs.definitions_io_k8s_api_apps_v1_RollingUpdateDeployment
        R.type = str_dflt
    class definitions_io_k8s_api_apps_v1_ReplicaSet:
        """#/definitions/io.k8s.api.apps.v1.ReplicaSet"""
        class R:
            description = 'ReplicaSet ensures that a specified number of pod replicas are running at any given time.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'apps', 'kind': 'ReplicaSet', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "If the Labels of a ReplicaSet are empty, they are defaulted to be the same as the Pod(s) that the ReplicaSet manages. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_apps_v1_ReplicaSetSpec, 'descr': 'Spec defines the specification of the desired behavior of the ReplicaSet. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_apps_v1_ReplicaSetStatus, 'descr': 'Status is the most recently observed status of the ReplicaSet. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_apps_v1_ReplicaSetSpec
        R.status = lambda: Defs.definitions_io_k8s_api_apps_v1_ReplicaSetStatus
    class definitions_io_k8s_api_apps_v1_ReplicaSetCondition:
        """#/definitions/io.k8s.api.apps.v1.ReplicaSetCondition"""
        class R:
            description = 'ReplicaSetCondition describes the state of a replica set at a certain point.'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'The last time the condition transitioned from one status to another.'}
            message = {'type': 'string', 'descr': 'A human readable message indicating details about the transition.'}
            reason = {'type': 'string', 'descr': "The reason for the condition's last transition."}
            status = {'type': 'string', 'descr': 'Status of the condition, one of True, False, Unknown.'}
            type = {'type': 'string', 'descr': 'Type of replica set condition.'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_apps_v1_ReplicaSetList:
        """#/definitions/io.k8s.api.apps.v1.ReplicaSetList"""
        class R:
            description = 'ReplicaSetList is a collection of ReplicaSets.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'apps', 'kind': 'ReplicaSetList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_apps_v1_ReplicaSet, 'descr': 'List of ReplicaSets. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_apps_v1_ReplicaSet]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_apps_v1_ReplicaSetSpec:
        """#/definitions/io.k8s.api.apps.v1.ReplicaSetSpec"""
        class R:
            description = 'ReplicaSetSpec is the specification of a ReplicaSet.'
            type = 'object'
            required = ['selector']
            _attrs = ['minReadySeconds', 'replicas', 'selector', 'template']
            minReadySeconds = {'type': 'integer', 'format': 'int32', 'descr': 'Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)'}
            replicas = {'type': 'integer', 'format': 'int32', 'descr': 'Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller'}
            selector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': "Selector is a label query over pods that should match the replica count. Label keys and values that must match in order to be controlled by this replica set. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"}
            template = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PodTemplateSpec, 'descr': 'Template is the object that describes the pod that will be created if insufficient replicas are detected. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template'}
        R.minReadySeconds = 0
        R.replicas = 0
        R.selector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.template = lambda: Defs.definitions_io_k8s_api_core_v1_PodTemplateSpec
    class definitions_io_k8s_api_apps_v1_ReplicaSetStatus:
        """#/definitions/io.k8s.api.apps.v1.ReplicaSetStatus"""
        class R:
            description = 'ReplicaSetStatus represents the current status of a ReplicaSet.'
            type = 'object'
            required = ['replicas']
            _attrs = ['availableReplicas', 'conditions', 'fullyLabeledReplicas', 'observedGeneration', 'readyReplicas', 'replicas']
            availableReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'The number of available replicas (ready for at least minReadySeconds) for this replica set.'}
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_apps_v1_ReplicaSetCondition, 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': "Represents the latest available observations of a replica set's current state."}
            fullyLabeledReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'The number of pods that have labels matching the labels of the pod template of the replicaset.'}
            observedGeneration = {'type': 'integer', 'format': 'int64', 'descr': 'ObservedGeneration reflects the generation of the most recently observed ReplicaSet.'}
            readyReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'readyReplicas is the number of pods targeted by this ReplicaSet with a Ready Condition.'}
            replicas = {'type': 'integer', 'format': 'int32', 'descr': 'Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller'}
        R.availableReplicas = 0
        R.conditions = [lambda: Defs.definitions_io_k8s_api_apps_v1_ReplicaSetCondition]
        R.fullyLabeledReplicas = 0
        R.observedGeneration = 0
        R.readyReplicas = 0
        R.replicas = 0
    class definitions_io_k8s_api_apps_v1_RollingUpdateDaemonSet:
        """#/definitions/io.k8s.api.apps.v1.RollingUpdateDaemonSet"""
        class R:
            description = 'Spec to control the desired behavior of daemon set rolling update.'
            type = 'object'
            _attrs = ['maxSurge', 'maxUnavailable']
            maxSurge = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString, 'descr': 'The maximum number of nodes with an existing available DaemonSet pod that can have an updated DaemonSet pod during during an update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up to a minimum of 1. Default value is 0. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their a new pod created before the old pod is marked as deleted. The update starts by launching new pods on 30% of nodes. Once an updated pod is available (Ready for at least minReadySeconds) the old DaemonSet pod on that node is marked deleted. If the old pod becomes unavailable for any reason (Ready transitions to false, is evicted, or is drained) an updated pod is immediatedly created on that node without considering surge limits. Allowing surge implies the possibility that t...'}
            maxUnavailable = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString, 'descr': 'The maximum number of DaemonSet pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0 if MaxSurge is 0 Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update.'}
        R.maxSurge = lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString
        R.maxUnavailable = lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString
    class definitions_io_k8s_api_apps_v1_RollingUpdateDeployment:
        """#/definitions/io.k8s.api.apps.v1.RollingUpdateDeployment"""
        class R:
            description = 'Spec to control the desired behavior of rolling update.'
            type = 'object'
            _attrs = ['maxSurge', 'maxUnavailable']
            maxSurge = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString, 'descr': 'The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods.'}
            maxUnavailable = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString, 'descr': 'The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.'}
        R.maxSurge = lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString
        R.maxUnavailable = lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString
    class definitions_io_k8s_api_apps_v1_RollingUpdateStatefulSetStrategy:
        """#/definitions/io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy"""
        class R:
            description = 'RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType.'
            type = 'object'
            _attrs = ['partition']
            partition = {'type': 'integer', 'format': 'int32', 'descr': 'Partition indicates the ordinal at which the StatefulSet should be partitioned. Default value is 0.'}
        R.partition = 0
    class definitions_io_k8s_api_apps_v1_StatefulSet:
        """#/definitions/io.k8s.api.apps.v1.StatefulSet"""
        class R:
            description = 'StatefulSet represents a set of pods with consistent identities. Identities are defined as:\n - Network: A single stable DNS and hostname.\n - Storage: As many VolumeClaims as requested.\nThe StatefulSet guarantees that a given network identity will always map to the same storage identity.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'apps', 'kind': 'StatefulSet', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_apps_v1_StatefulSetSpec, 'descr': 'Spec defines the desired identities of pods in this set.'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_apps_v1_StatefulSetStatus, 'descr': 'Status is the current status of Pods in this StatefulSet. This data may be out of date by some window of time.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_apps_v1_StatefulSetSpec
        R.status = lambda: Defs.definitions_io_k8s_api_apps_v1_StatefulSetStatus
    class definitions_io_k8s_api_apps_v1_StatefulSetCondition:
        """#/definitions/io.k8s.api.apps.v1.StatefulSetCondition"""
        class R:
            description = 'StatefulSetCondition describes the state of a statefulset at a certain point.'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Last time the condition transitioned from one status to another.'}
            message = {'type': 'string', 'descr': 'A human readable message indicating details about the transition.'}
            reason = {'type': 'string', 'descr': "The reason for the condition's last transition."}
            status = {'type': 'string', 'descr': 'Status of the condition, one of True, False, Unknown.'}
            type = {'type': 'string', 'descr': 'Type of statefulset condition.'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_apps_v1_StatefulSetList:
        """#/definitions/io.k8s.api.apps.v1.StatefulSetList"""
        class R:
            description = 'StatefulSetList is a collection of StatefulSets.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'apps', 'kind': 'StatefulSetList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_apps_v1_StatefulSet, 'descr': 'Items is the list of stateful sets.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': "Standard list's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_apps_v1_StatefulSet]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_apps_v1_StatefulSetPersistentVolumeClaimRetentionPolicy:
        """#/definitions/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy"""
        class R:
            description = 'StatefulSetPersistentVolumeClaimRetentionPolicy describes the policy used for PVCs created from the StatefulSet VolumeClaimTemplates.'
            type = 'object'
            _attrs = ['whenDeleted', 'whenScaled']
            whenDeleted = {'type': 'string', 'descr': 'WhenDeleted specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is deleted. The default policy of `Retain` causes PVCs to not be affected by StatefulSet deletion. The `Delete` policy causes those PVCs to be deleted.'}
            whenScaled = {'type': 'string', 'descr': 'WhenScaled specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is scaled down. The default policy of `Retain` causes PVCs to not be affected by a scaledown. The `Delete` policy causes the associated PVCs for any excess pods above the replica count to be deleted.'}
        R.whenDeleted = str_dflt
        R.whenScaled = str_dflt
    class definitions_io_k8s_api_apps_v1_StatefulSetSpec:
        """#/definitions/io.k8s.api.apps.v1.StatefulSetSpec"""
        class R:
            description = 'A StatefulSetSpec is the specification of a StatefulSet.'
            type = 'object'
            required = ['selector', 'template', 'serviceName']
            _attrs = ['minReadySeconds', 'persistentVolumeClaimRetentionPolicy', 'podManagementPolicy', 'replicas', 'revisionHistoryLimit', 'selector', 'serviceName', 'template', 'updateStrategy', 'volumeClaimTemplates']
            minReadySeconds = {'type': 'integer', 'format': 'int32', 'descr': 'Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready) This is an alpha field and requires enabling StatefulSetMinReadySeconds feature gate.'}
            persistentVolumeClaimRetentionPolicy = {'$ref': lambda: Defs.definitions_io_k8s_api_apps_v1_StatefulSetPersistentVolumeClaimRetentionPolicy, 'descr': 'persistentVolumeClaimRetentionPolicy describes the lifecycle of persistent volume claims created from volumeClaimTemplates. By default, all persistent volume claims are created as needed and retained until manually deleted. This policy allows the lifecycle to be altered, for example by deleting persistent volume claims when their stateful set is deleted, or when their pod is scaled down. This requires the StatefulSetAutoDeletePVC feature gate to be enabled, which is alpha.  +optional'}
            podManagementPolicy = {'type': 'string', 'descr': 'podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.\n\n'}
            replicas = {'type': 'integer', 'format': 'int32', 'descr': 'replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.'}
            revisionHistoryLimit = {'type': 'integer', 'format': 'int32', 'descr': "revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10."}
            selector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': "selector is a label query over pods that should match the replica count. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"}
            serviceName = {'type': 'string', 'descr': 'serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where "pod-specific-string" is managed by the StatefulSet controller.'}
            template = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PodTemplateSpec, 'descr': 'template is the object that describes the pod that will be created if insufficient replicas are detected. Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique identity from the rest of the StatefulSet.'}
            updateStrategy = {'$ref': lambda: Defs.definitions_io_k8s_api_apps_v1_StatefulSetUpdateStrategy, 'descr': 'updateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template.'}
            volumeClaimTemplates = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim, 'descr': 'volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.'}
        R.minReadySeconds = 0
        R.persistentVolumeClaimRetentionPolicy = lambda: Defs.definitions_io_k8s_api_apps_v1_StatefulSetPersistentVolumeClaimRetentionPolicy
        R.podManagementPolicy = str_dflt
        R.replicas = 0
        R.revisionHistoryLimit = 0
        R.selector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.serviceName = str_dflt
        R.template = lambda: Defs.definitions_io_k8s_api_core_v1_PodTemplateSpec
        R.updateStrategy = lambda: Defs.definitions_io_k8s_api_apps_v1_StatefulSetUpdateStrategy
        R.volumeClaimTemplates = [lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim]
    class definitions_io_k8s_api_apps_v1_StatefulSetStatus:
        """#/definitions/io.k8s.api.apps.v1.StatefulSetStatus"""
        class R:
            description = 'StatefulSetStatus represents the current state of a StatefulSet.'
            type = 'object'
            required = ['replicas', 'availableReplicas']
            _attrs = ['availableReplicas', 'collisionCount', 'conditions', 'currentReplicas', 'currentRevision', 'observedGeneration', 'readyReplicas', 'replicas', 'updateRevision', 'updatedReplicas']
            availableReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'Total number of available pods (ready for at least minReadySeconds) targeted by this statefulset. This is a beta field and enabled/disabled by StatefulSetMinReadySeconds feature gate.'}
            collisionCount = {'type': 'integer', 'format': 'int32', 'descr': 'collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.'}
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_apps_v1_StatefulSetCondition, 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': "Represents the latest available observations of a statefulset's current state."}
            currentReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision.'}
            currentRevision = {'type': 'string', 'descr': 'currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas).'}
            observedGeneration = {'type': 'integer', 'format': 'int64', 'descr': "observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server."}
            readyReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'readyReplicas is the number of pods created for this StatefulSet with a Ready Condition.'}
            replicas = {'type': 'integer', 'format': 'int32', 'descr': 'replicas is the number of Pods created by the StatefulSet controller.'}
            updateRevision = {'type': 'string', 'descr': 'updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)'}
            updatedReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision.'}
        R.availableReplicas = 0
        R.collisionCount = 0
        R.conditions = [lambda: Defs.definitions_io_k8s_api_apps_v1_StatefulSetCondition]
        R.currentReplicas = 0
        R.currentRevision = str_dflt
        R.observedGeneration = 0
        R.readyReplicas = 0
        R.replicas = 0
        R.updateRevision = str_dflt
        R.updatedReplicas = 0
    class definitions_io_k8s_api_apps_v1_StatefulSetUpdateStrategy:
        """#/definitions/io.k8s.api.apps.v1.StatefulSetUpdateStrategy"""
        class R:
            description = 'StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy.'
            type = 'object'
            _attrs = ['rollingUpdate', 'type']
            rollingUpdate = {'$ref': lambda: Defs.definitions_io_k8s_api_apps_v1_RollingUpdateStatefulSetStrategy, 'descr': 'RollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType.'}
            type = {'type': 'string', 'descr': 'Type indicates the type of the StatefulSetUpdateStrategy. Default is RollingUpdate.\n\n'}
        R.rollingUpdate = lambda: Defs.definitions_io_k8s_api_apps_v1_RollingUpdateStatefulSetStrategy
        R.type = str_dflt
    class definitions_io_k8s_api_authentication_v1_BoundObjectReference:
        """#/definitions/io.k8s.api.authentication.v1.BoundObjectReference"""
        class R:
            description = 'BoundObjectReference is a reference to an object that a token is bound to.'
            type = 'object'
            _attrs = ['apiVersion', 'kind', 'name', 'uid']
            apiVersion = {'type': 'string', 'descr': 'API version of the referent.'}
            kind = {'type': 'string', 'descr': "Kind of the referent. Valid kinds are 'Pod' and 'Secret'."}
            name = {'type': 'string', 'descr': 'Name of the referent.'}
            uid = {'type': 'string', 'descr': 'UID of the referent.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.name = name
        R.uid = str_dflt
    class definitions_io_k8s_api_authentication_v1_TokenRequest:
        """#/definitions/io.k8s.api.authentication.v1.TokenRequest"""
        class R:
            description = 'TokenRequest requests a token for a given service account.'
            type = 'object'
            required = ['spec']
            x_kubernetes_group_version_kind = [{'group': 'authentication.k8s.io', 'kind': 'TokenRequest', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_authentication_v1_TokenRequestSpec, 'descr': 'Spec holds information about the request being evaluated'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_authentication_v1_TokenRequestStatus, 'descr': 'Status is filled in by the server and indicates whether the token can be authenticated.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_authentication_v1_TokenRequestSpec
        R.status = lambda: Defs.definitions_io_k8s_api_authentication_v1_TokenRequestStatus
    class definitions_io_k8s_api_authentication_v1_TokenRequestSpec:
        """#/definitions/io.k8s.api.authentication.v1.TokenRequestSpec"""
        class R:
            description = 'TokenRequestSpec contains client provided parameters of a token request.'
            type = 'object'
            required = ['audiences']
            _attrs = ['audiences', 'boundObjectRef', 'expirationSeconds']
            audiences = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Audiences are the intendend audiences of the token. A recipient of a token must identitfy themself with an identifier in the list of audiences of the token, and otherwise should reject the token. A token issued for multiple audiences may be used to authenticate against any of the audiences listed but implies a high degree of trust between the target audiences.'}
            boundObjectRef = {'$ref': lambda: Defs.definitions_io_k8s_api_authentication_v1_BoundObjectReference, 'descr': "BoundObjectRef is a reference to an object that the token will be bound to. The token will only be valid for as long as the bound object exists. NOTE: The API server's TokenReview endpoint will validate the BoundObjectRef, but other audiences may not. Keep ExpirationSeconds small if you want prompt revocation."}
            expirationSeconds = {'type': 'integer', 'format': 'int64', 'descr': "ExpirationSeconds is the requested duration of validity of the request. The token issuer may return a token with a different validity duration so a client needs to check the 'expiration' field in a response."}
        R.audiences = [str_dflt]
        R.boundObjectRef = lambda: Defs.definitions_io_k8s_api_authentication_v1_BoundObjectReference
        R.expirationSeconds = 0
    class definitions_io_k8s_api_authentication_v1_TokenRequestStatus:
        """#/definitions/io.k8s.api.authentication.v1.TokenRequestStatus"""
        class R:
            description = 'TokenRequestStatus is the result of a token request.'
            type = 'object'
            required = ['token', 'expirationTimestamp']
            _attrs = ['expirationTimestamp', 'token']
            expirationTimestamp = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'ExpirationTimestamp is the time of expiration of the returned token.'}
            token = {'type': 'string', 'descr': 'Token is the opaque bearer token.'}
        R.expirationTimestamp = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.token = str_dflt
    class definitions_io_k8s_api_authentication_v1_TokenReview:
        """#/definitions/io.k8s.api.authentication.v1.TokenReview"""
        class R:
            description = 'TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.'
            type = 'object'
            required = ['spec']
            x_kubernetes_group_version_kind = [{'group': 'authentication.k8s.io', 'kind': 'TokenReview', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_authentication_v1_TokenReviewSpec, 'descr': 'Spec holds information about the request being evaluated'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_authentication_v1_TokenReviewStatus, 'descr': 'Status is filled in by the server and indicates whether the request can be authenticated.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_authentication_v1_TokenReviewSpec
        R.status = lambda: Defs.definitions_io_k8s_api_authentication_v1_TokenReviewStatus
    class definitions_io_k8s_api_authentication_v1_TokenReviewSpec:
        """#/definitions/io.k8s.api.authentication.v1.TokenReviewSpec"""
        class R:
            description = 'TokenReviewSpec is a description of the token authentication request.'
            type = 'object'
            _attrs = ['audiences', 'token']
            audiences = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Audiences is a list of the identifiers that the resource server presented with the token identifies as. Audience-aware token authenticators will verify that the token was intended for at least one of the audiences in this list. If no audiences are provided, the audience will default to the audience of the Kubernetes apiserver.'}
            token = {'type': 'string', 'descr': 'Token is the opaque bearer token.'}
        R.audiences = [str_dflt]
        R.token = str_dflt
    class definitions_io_k8s_api_authentication_v1_TokenReviewStatus:
        """#/definitions/io.k8s.api.authentication.v1.TokenReviewStatus"""
        class R:
            description = 'TokenReviewStatus is the result of the token authentication request.'
            type = 'object'
            _attrs = ['audiences', 'authenticated', 'error', 'user']
            audiences = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Audiences are audience identifiers chosen by the authenticator that are compatible with both the TokenReview and token. An identifier is any identifier in the intersection of the TokenReviewSpec audiences and the token\'s audiences. A client of the TokenReview API that sets the spec.audiences field should validate that a compatible audience identifier is returned in the status.audiences field to ensure that the TokenReview server is audience aware. If a TokenReview returns an empty status.audience field where status.authenticated is "true", the token is valid against the audience of the Kubernetes API server.'}
            authenticated = {'type': 'boolean', 'descr': 'Authenticated indicates that the token was associated with a known user.'}
            error = {'type': 'string', 'descr': "Error indicates that the token couldn't be checked"}
            user = {'$ref': lambda: Defs.definitions_io_k8s_api_authentication_v1_UserInfo, 'descr': 'User is the UserInfo associated with the provided token.'}
        R.audiences = [str_dflt]
        R.authenticated = True
        R.error = str_dflt
        R.user = lambda: Defs.definitions_io_k8s_api_authentication_v1_UserInfo
    class definitions_io_k8s_api_authentication_v1_UserInfo:
        """#/definitions/io.k8s.api.authentication.v1.UserInfo"""
        class R:
            description = 'UserInfo holds the information about the user needed to implement the user.Info interface.'
            type = 'object'
            _attrs = ['extra', 'groups', 'uid', 'username']
            extra = {'type': 'object', 'additionalProperties': {'type': 'array', 'items': {'type': 'string'}}, 'descr': 'Any additional information provided by the authenticator.'}
            groups = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'The names of groups this user is a part of.'}
            uid = {'type': 'string', 'descr': 'A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.'}
            username = {'type': 'string', 'descr': 'The name that uniquely identifies this user among all active users.'}
        R.extra = {}
        R.groups = [str_dflt]
        R.uid = str_dflt
        R.username = str_dflt
    class definitions_io_k8s_api_authorization_v1_LocalSubjectAccessReview:
        """#/definitions/io.k8s.api.authorization.v1.LocalSubjectAccessReview"""
        class R:
            description = 'LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.'
            type = 'object'
            required = ['spec']
            x_kubernetes_group_version_kind = [{'group': 'authorization.k8s.io', 'kind': 'LocalSubjectAccessReview', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_authorization_v1_SubjectAccessReviewSpec, 'descr': 'Spec holds information about the request being evaluated.  spec.namespace must be equal to the namespace you made the request against.  If empty, it is defaulted.'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_authorization_v1_SubjectAccessReviewStatus, 'descr': 'Status is filled in by the server and indicates whether the request is allowed or not'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_authorization_v1_SubjectAccessReviewSpec
        R.status = lambda: Defs.definitions_io_k8s_api_authorization_v1_SubjectAccessReviewStatus
    class definitions_io_k8s_api_authorization_v1_NonResourceAttributes:
        """#/definitions/io.k8s.api.authorization.v1.NonResourceAttributes"""
        class R:
            description = 'NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface'
            type = 'object'
            _attrs = ['path', 'verb']
            path = {'type': 'string', 'descr': 'Path is the URL path of the request'}
            verb = {'type': 'string', 'descr': 'Verb is the standard HTTP verb'}
        R.path = path
        R.verb = str_dflt
    class definitions_io_k8s_api_authorization_v1_NonResourceRule:
        """#/definitions/io.k8s.api.authorization.v1.NonResourceRule"""
        class R:
            description = 'NonResourceRule holds information that describes a rule for the non-resource'
            type = 'object'
            required = ['verbs']
            _attrs = ['nonResourceURLs', 'verbs']
            nonResourceURLs = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  "*" means all.'}
            verbs = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  "*" means all.'}
        R.nonResourceURLs = [str_dflt]
        R.verbs = [str_dflt]
    class definitions_io_k8s_api_authorization_v1_ResourceAttributes:
        """#/definitions/io.k8s.api.authorization.v1.ResourceAttributes"""
        class R:
            description = 'ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface'
            type = 'object'
            _attrs = ['group', 'name', 'namespace', 'resource', 'subresource', 'verb', 'version']
            group = {'type': 'string', 'descr': 'Group is the API Group of the Resource.  "*" means all.'}
            name = {'type': 'string', 'descr': 'Name is the name of the resource being requested for a "get" or deleted for a "delete". "" (empty) means all.'}
            namespace = {'type': 'string', 'descr': 'Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces "" (empty) is defaulted for LocalSubjectAccessReviews "" (empty) is empty for cluster-scoped resources "" (empty) means "all" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview'}
            resource = {'type': 'string', 'descr': 'Resource is one of the existing resource types.  "*" means all.'}
            subresource = {'type': 'string', 'descr': 'Subresource is one of the existing resource types.  "" means none.'}
            verb = {'type': 'string', 'descr': 'Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  "*" means all.'}
            version = {'type': 'string', 'descr': 'Version is the API Version of the Resource.  "*" means all.'}
        R.group = str_dflt
        R.name = name
        R.namespace = namespace
        R.resource = str_dflt
        R.subresource = str_dflt
        R.verb = str_dflt
        R.version = str_dflt
    class definitions_io_k8s_api_authorization_v1_ResourceRule:
        """#/definitions/io.k8s.api.authorization.v1.ResourceRule"""
        class R:
            description = 'ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn"t significant, may contain duplicates, and possibly be incomplete.'
            type = 'object'
            required = ['verbs']
            _attrs = ['apiGroups', 'resourceNames', 'resources', 'verbs']
            apiGroups = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  "*" means all.'}
            resourceNames = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  "*" means all.'}
            resources = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Resources is a list of resources this rule applies to.  "*" means all in the specified apiGroups.\n "*/foo" represents the subresource \'foo\' for all resources in the specified apiGroups.'}
            verbs = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  "*" means all.'}
        R.apiGroups = [str_dflt]
        R.resourceNames = [str_dflt]
        R.resources = [str_dflt]
        R.verbs = [str_dflt]
    class definitions_io_k8s_api_authorization_v1_SelfSubjectAccessReview:
        """#/definitions/io.k8s.api.authorization.v1.SelfSubjectAccessReview"""
        class R:
            description = 'SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means "in all namespaces".  Self is a special case, because users should always be able to check whether they can perform an action'
            type = 'object'
            required = ['spec']
            x_kubernetes_group_version_kind = [{'group': 'authorization.k8s.io', 'kind': 'SelfSubjectAccessReview', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_authorization_v1_SelfSubjectAccessReviewSpec, 'descr': 'Spec holds information about the request being evaluated.  user and groups must be empty'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_authorization_v1_SubjectAccessReviewStatus, 'descr': 'Status is filled in by the server and indicates whether the request is allowed or not'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_authorization_v1_SelfSubjectAccessReviewSpec
        R.status = lambda: Defs.definitions_io_k8s_api_authorization_v1_SubjectAccessReviewStatus
    class definitions_io_k8s_api_authorization_v1_SelfSubjectAccessReviewSpec:
        """#/definitions/io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec"""
        class R:
            description = 'SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set'
            type = 'object'
            _attrs = ['nonResourceAttributes', 'resourceAttributes']
            nonResourceAttributes = {'$ref': lambda: Defs.definitions_io_k8s_api_authorization_v1_NonResourceAttributes, 'descr': 'NonResourceAttributes describes information for a non-resource access request'}
            resourceAttributes = {'$ref': lambda: Defs.definitions_io_k8s_api_authorization_v1_ResourceAttributes, 'descr': 'ResourceAuthorizationAttributes describes information for a resource access request'}
        R.nonResourceAttributes = lambda: Defs.definitions_io_k8s_api_authorization_v1_NonResourceAttributes
        R.resourceAttributes = lambda: Defs.definitions_io_k8s_api_authorization_v1_ResourceAttributes
    class definitions_io_k8s_api_authorization_v1_SelfSubjectRulesReview:
        """#/definitions/io.k8s.api.authorization.v1.SelfSubjectRulesReview"""
        class R:
            description = 'SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server"s authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.'
            type = 'object'
            required = ['spec']
            x_kubernetes_group_version_kind = [{'group': 'authorization.k8s.io', 'kind': 'SelfSubjectRulesReview', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_authorization_v1_SelfSubjectRulesReviewSpec, 'descr': 'Spec holds information about the request being evaluated.'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_authorization_v1_SubjectRulesReviewStatus, 'descr': 'Status is filled in by the server and indicates the set of actions a user can perform.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_authorization_v1_SelfSubjectRulesReviewSpec
        R.status = lambda: Defs.definitions_io_k8s_api_authorization_v1_SubjectRulesReviewStatus
    class definitions_io_k8s_api_authorization_v1_SelfSubjectRulesReviewSpec:
        """#/definitions/io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec"""
        class R:
            description = 'SelfSubjectRulesReviewSpec defines the specification for SelfSubjectRulesReview.'
            type = 'object'
            _attrs = ['namespace']
            namespace = {'type': 'string', 'descr': 'Namespace to evaluate rules for. Required.'}
        R.namespace = namespace
    class definitions_io_k8s_api_authorization_v1_SubjectAccessReview:
        """#/definitions/io.k8s.api.authorization.v1.SubjectAccessReview"""
        class R:
            description = 'SubjectAccessReview checks whether or not a user or group can perform an action.'
            type = 'object'
            required = ['spec']
            x_kubernetes_group_version_kind = [{'group': 'authorization.k8s.io', 'kind': 'SubjectAccessReview', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_authorization_v1_SubjectAccessReviewSpec, 'descr': 'Spec holds information about the request being evaluated'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_authorization_v1_SubjectAccessReviewStatus, 'descr': 'Status is filled in by the server and indicates whether the request is allowed or not'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_authorization_v1_SubjectAccessReviewSpec
        R.status = lambda: Defs.definitions_io_k8s_api_authorization_v1_SubjectAccessReviewStatus
    class definitions_io_k8s_api_authorization_v1_SubjectAccessReviewSpec:
        """#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewSpec"""
        class R:
            description = 'SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set'
            type = 'object'
            _attrs = ['extra', 'groups', 'nonResourceAttributes', 'resourceAttributes', 'uid', 'user']
            extra = {'type': 'object', 'additionalProperties': {'type': 'array', 'items': {'type': 'string'}}, 'descr': 'Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here.'}
            groups = {'type': 'array', 'items': {'type': 'string'}, 'descr': "Groups is the groups you're testing for."}
            nonResourceAttributes = {'$ref': lambda: Defs.definitions_io_k8s_api_authorization_v1_NonResourceAttributes, 'descr': 'NonResourceAttributes describes information for a non-resource access request'}
            resourceAttributes = {'$ref': lambda: Defs.definitions_io_k8s_api_authorization_v1_ResourceAttributes, 'descr': 'ResourceAuthorizationAttributes describes information for a resource access request'}
            uid = {'type': 'string', 'descr': 'UID information about the requesting user.'}
            user = {'type': 'string', 'descr': 'User is the user you\'re testing for. If you specify "User" but not "Groups", then is it interpreted as "What if User were not a member of any groups'}
        R.extra = {}
        R.groups = [str_dflt]
        R.nonResourceAttributes = lambda: Defs.definitions_io_k8s_api_authorization_v1_NonResourceAttributes
        R.resourceAttributes = lambda: Defs.definitions_io_k8s_api_authorization_v1_ResourceAttributes
        R.uid = str_dflt
        R.user = str_dflt
    class definitions_io_k8s_api_authorization_v1_SubjectAccessReviewStatus:
        """#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewStatus"""
        class R:
            description = 'SubjectAccessReviewStatus'
            type = 'object'
            required = ['allowed']
            _attrs = ['allowed', 'denied', 'evaluationError', 'reason']
            allowed = {'type': 'boolean', 'descr': 'Allowed is required. True if the action would be allowed, false otherwise.'}
            denied = {'type': 'boolean', 'descr': 'Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true.'}
            evaluationError = {'type': 'string', 'descr': 'EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request.'}
            reason = {'type': 'string', 'descr': 'Reason is optional.  It indicates why a request was allowed or denied.'}
        R.allowed = True
        R.denied = True
        R.evaluationError = str_dflt
        R.reason = str_dflt
    class definitions_io_k8s_api_authorization_v1_SubjectRulesReviewStatus:
        """#/definitions/io.k8s.api.authorization.v1.SubjectRulesReviewStatus"""
        class R:
            description = 'SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it"s safe to assume the subject has that permission, even if that list is incomplete.'
            type = 'object'
            required = ['resourceRules', 'nonResourceRules', 'incomplete']
            _attrs = ['evaluationError', 'incomplete', 'nonResourceRules', 'resourceRules']
            evaluationError = {'type': 'string', 'descr': "EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete."}
            incomplete = {'type': 'boolean', 'descr': "Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation."}
            nonResourceRules = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_authorization_v1_NonResourceRule, 'descr': "NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."}
            resourceRules = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_authorization_v1_ResourceRule, 'descr': "ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete."}
        R.evaluationError = str_dflt
        R.incomplete = True
        R.nonResourceRules = [lambda: Defs.definitions_io_k8s_api_authorization_v1_NonResourceRule]
        R.resourceRules = [lambda: Defs.definitions_io_k8s_api_authorization_v1_ResourceRule]
    class definitions_io_k8s_api_autoscaling_v1_CrossVersionObjectReference:
        """#/definitions/io.k8s.api.autoscaling.v1.CrossVersionObjectReference"""
        class R:
            description = 'CrossVersionObjectReference contains enough information to let you identify the referred resource.'
            type = 'object'
            required = ['kind', 'name']
            x_kubernetes_map_type = 'atomic'
            _attrs = ['apiVersion', 'kind', 'name']
            apiVersion = {'type': 'string', 'descr': 'API version of the referent'}
            kind = {'type': 'string', 'descr': 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'}
            name = {'type': 'string', 'descr': 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.name = name
    class definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler:
        """#/definitions/io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler"""
        class R:
            description = 'configuration of a horizontal pod autoscaler.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'Standard object metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerSpec, 'descr': 'behaviour of autoscaler. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerStatus, 'descr': 'current information about the autoscaler.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerSpec
        R.status = lambda: Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerStatus
    class definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerList:
        """#/definitions/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList"""
        class R:
            description = 'list of horizontal pod autoscaler objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'autoscaling', 'kind': 'HorizontalPodAutoscalerList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler, 'descr': 'list of horizontal pod autoscaler objects.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata.'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerSpec:
        """#/definitions/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec"""
        class R:
            description = 'specification of a horizontal pod autoscaler.'
            type = 'object'
            required = ['scaleTargetRef', 'maxReplicas']
            _attrs = ['maxReplicas', 'minReplicas', 'scaleTargetRef', 'targetCPUUtilizationPercentage']
            maxReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.'}
            minReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.'}
            scaleTargetRef = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v1_CrossVersionObjectReference, 'descr': 'reference to scaled resource; horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource.'}
            targetCPUUtilizationPercentage = {'type': 'integer', 'format': 'int32', 'descr': 'target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.'}
        R.maxReplicas = 0
        R.minReplicas = 0
        R.scaleTargetRef = lambda: Defs.definitions_io_k8s_api_autoscaling_v1_CrossVersionObjectReference
        R.targetCPUUtilizationPercentage = 0
    class definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerStatus:
        """#/definitions/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus"""
        class R:
            description = 'current status of a horizontal pod autoscaler'
            type = 'object'
            required = ['currentReplicas', 'desiredReplicas']
            _attrs = ['currentCPUUtilizationPercentage', 'currentReplicas', 'desiredReplicas', 'lastScaleTime', 'observedGeneration']
            currentCPUUtilizationPercentage = {'type': 'integer', 'format': 'int32', 'descr': 'current average CPU utilization over all pods, represented as a percentage of requested CPU, e.g. 70 means that an average pod is using now 70% of its requested CPU.'}
            currentReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'current number of replicas of pods managed by this autoscaler.'}
            desiredReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'desired number of replicas of pods managed by this autoscaler.'}
            lastScaleTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'last time the HorizontalPodAutoscaler scaled the number of pods; used by the autoscaler to control how often the number of pods is changed.'}
            observedGeneration = {'type': 'integer', 'format': 'int64', 'descr': 'most recent generation observed by this autoscaler.'}
        R.currentCPUUtilizationPercentage = 0
        R.currentReplicas = 0
        R.desiredReplicas = 0
        R.lastScaleTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.observedGeneration = 0
    class definitions_io_k8s_api_autoscaling_v1_Scale:
        """#/definitions/io.k8s.api.autoscaling.v1.Scale"""
        class R:
            description = 'Scale represents a scaling request for a resource.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'autoscaling', 'kind': 'Scale', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.'}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v1_ScaleSpec, 'descr': 'defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v1_ScaleStatus, 'descr': 'current status of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status. Read-only.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_autoscaling_v1_ScaleSpec
        R.status = lambda: Defs.definitions_io_k8s_api_autoscaling_v1_ScaleStatus
    class definitions_io_k8s_api_autoscaling_v1_ScaleSpec:
        """#/definitions/io.k8s.api.autoscaling.v1.ScaleSpec"""
        class R:
            description = 'ScaleSpec describes the attributes of a scale subresource.'
            type = 'object'
            _attrs = ['replicas']
            replicas = {'type': 'integer', 'format': 'int32', 'descr': 'desired number of instances for the scaled object.'}
        R.replicas = 0
    class definitions_io_k8s_api_autoscaling_v1_ScaleStatus:
        """#/definitions/io.k8s.api.autoscaling.v1.ScaleStatus"""
        class R:
            description = 'ScaleStatus represents the current status of a scale subresource.'
            type = 'object'
            required = ['replicas']
            _attrs = ['replicas', 'selector']
            replicas = {'type': 'integer', 'format': 'int32', 'descr': 'actual number of observed instances of the scaled object.'}
            selector = {'type': 'string', 'descr': 'label query over pods that should match the replicas count. This is same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors'}
        R.replicas = 0
        R.selector = str_dflt
    class definitions_io_k8s_api_autoscaling_v2_ContainerResourceMetricSource:
        """#/definitions/io.k8s.api.autoscaling.v2.ContainerResourceMetricSource"""
        class R:
            description = 'ContainerResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.  Only one "target" type should be set.'
            type = 'object'
            required = ['name', 'target', 'container']
            _attrs = ['container', 'name', 'target']
            container = {'type': 'string', 'descr': 'container is the name of the container in the pods of the scaling target'}
            name = {'type': 'string', 'descr': 'name is the name of the resource in question.'}
            target = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricTarget, 'descr': 'target specifies the target value for the given metric'}
        R.container = str_dflt
        R.name = name
        R.target = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricTarget
    class definitions_io_k8s_api_autoscaling_v2_ContainerResourceMetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2.ContainerResourceMetricStatus"""
        class R:
            description = 'ContainerResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing a single container in each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.'
            type = 'object'
            required = ['name', 'current', 'container']
            _attrs = ['container', 'current', 'name']
            container = {'type': 'string', 'descr': 'Container is the name of the container in the pods of the scaling target'}
            current = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricValueStatus, 'descr': 'current contains the current value for the given metric'}
            name = {'type': 'string', 'descr': 'Name is the name of the resource in question.'}
        R.container = str_dflt
        R.current = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricValueStatus
        R.name = name
    class definitions_io_k8s_api_autoscaling_v2_CrossVersionObjectReference:
        """#/definitions/io.k8s.api.autoscaling.v2.CrossVersionObjectReference"""
        class R:
            description = 'CrossVersionObjectReference contains enough information to let you identify the referred resource.'
            type = 'object'
            required = ['kind', 'name']
            _attrs = ['apiVersion', 'kind', 'name']
            apiVersion = {'type': 'string', 'descr': 'API version of the referent'}
            kind = {'type': 'string', 'descr': 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'}
            name = {'type': 'string', 'descr': 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.name = name
    class definitions_io_k8s_api_autoscaling_v2_ExternalMetricSource:
        """#/definitions/io.k8s.api.autoscaling.v2.ExternalMetricSource"""
        class R:
            description = 'ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).'
            type = 'object'
            required = ['metric', 'target']
            _attrs = ['metric', 'target']
            metric = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricIdentifier, 'descr': 'metric identifies the target metric by name and selector'}
            target = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricTarget, 'descr': 'target specifies the target value for the given metric'}
        R.metric = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricIdentifier
        R.target = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricTarget
    class definitions_io_k8s_api_autoscaling_v2_ExternalMetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2.ExternalMetricStatus"""
        class R:
            description = 'ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object.'
            type = 'object'
            required = ['metric', 'current']
            _attrs = ['current', 'metric']
            current = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricValueStatus, 'descr': 'current contains the current value for the given metric'}
            metric = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricIdentifier, 'descr': 'metric identifies the target metric by name and selector'}
        R.current = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricValueStatus
        R.metric = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricIdentifier
    class definitions_io_k8s_api_autoscaling_v2_HPAScalingPolicy:
        """#/definitions/io.k8s.api.autoscaling.v2.HPAScalingPolicy"""
        class R:
            description = 'HPAScalingPolicy is a single policy which must hold true for a specified past interval.'
            type = 'object'
            required = ['type', 'value', 'periodSeconds']
            _attrs = ['periodSeconds', 'type', 'value']
            periodSeconds = {'type': 'integer', 'format': 'int32', 'descr': 'PeriodSeconds specifies the window of time for which the policy should hold true. PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).'}
            type = {'type': 'string', 'descr': 'Type is used to specify the scaling policy.'}
            value = {'type': 'integer', 'format': 'int32', 'descr': 'Value contains the amount of change which is permitted by the policy. It must be greater than zero'}
        R.periodSeconds = 0
        R.type = str_dflt
        R.value = 0
    class definitions_io_k8s_api_autoscaling_v2_HPAScalingRules:
        """#/definitions/io.k8s.api.autoscaling.v2.HPAScalingRules"""
        class R:
            description = 'HPAScalingRules configures the scaling behavior for one direction. These Rules are applied after calculating DesiredReplicas from metrics for the HPA. They can limit the scaling velocity by specifying scaling policies. They can prevent flapping by specifying the stabilization window, so that the number of replicas is not set instantly, instead, the safest value from the stabilization window is chosen.'
            type = 'object'
            _attrs = ['policies', 'selectPolicy', 'stabilizationWindowSeconds']
            policies = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_HPAScalingPolicy, 'x-kubernetes-list-type': 'atomic', 'descr': 'policies is a list of potential scaling polices which can be used during scaling. At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid'}
            selectPolicy = {'type': 'string', 'descr': 'selectPolicy is used to specify which policy should be used. If not set, the default value Max is used.'}
            stabilizationWindowSeconds = {'type': 'integer', 'format': 'int32', 'descr': 'StabilizationWindowSeconds is the number of seconds for which past recommendations should be considered while scaling up or scaling down. StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour). If not set, use the default values: - For scale up: 0 (i.e. no stabilization is done). - For scale down: 300 (i.e. the stabilization window is 300 seconds long).'}
        R.policies = [lambda: Defs.definitions_io_k8s_api_autoscaling_v2_HPAScalingPolicy]
        R.selectPolicy = str_dflt
        R.stabilizationWindowSeconds = 0
    class definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler:
        """#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler"""
        class R:
            description = 'HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'metadata is the standard object metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerSpec, 'descr': 'spec is the specification for the behaviour of the autoscaler. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerStatus, 'descr': 'status is the current information about the autoscaler.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerSpec
        R.status = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerStatus
    class definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerBehavior:
        """#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior"""
        class R:
            description = 'HorizontalPodAutoscalerBehavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively).'
            type = 'object'
            _attrs = ['scaleDown', 'scaleUp']
            scaleDown = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_HPAScalingRules, 'descr': 'scaleDown is scaling policy for scaling Down. If not set, the default value is to allow to scale down to minReplicas pods, with a 300 second stabilization window (i.e., the highest recommendation for the last 300sec is used).'}
            scaleUp = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_HPAScalingRules, 'descr': 'scaleUp is scaling policy for scaling Up. If not set, the default value is the higher of:\n  * increase no more than 4 pods per 60 seconds\n  * double the number of pods per 60 seconds\nNo stabilization is used.'}
        R.scaleDown = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_HPAScalingRules
        R.scaleUp = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_HPAScalingRules
    class definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerCondition:
        """#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerCondition"""
        class R:
            description = 'HorizontalPodAutoscalerCondition describes the state of a HorizontalPodAutoscaler at a certain point.'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'lastTransitionTime is the last time the condition transitioned from one status to another'}
            message = {'type': 'string', 'descr': 'message is a human-readable explanation containing details about the transition'}
            reason = {'type': 'string', 'descr': "reason is the reason for the condition's last transition."}
            status = {'type': 'string', 'descr': 'status is the status of the condition (True, False, Unknown)'}
            type = {'type': 'string', 'descr': 'type describes the current condition'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerList:
        """#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList"""
        class R:
            description = 'HorizontalPodAutoscalerList is a list of horizontal pod autoscaler objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'autoscaling', 'kind': 'HorizontalPodAutoscalerList', 'version': 'v2'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler, 'descr': 'items is the list of horizontal pod autoscaler objects.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'metadata is the standard list metadata.'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerSpec:
        """#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec"""
        class R:
            description = 'HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.'
            type = 'object'
            required = ['scaleTargetRef', 'maxReplicas']
            _attrs = ['behavior', 'maxReplicas', 'metrics', 'minReplicas', 'scaleTargetRef']
            behavior = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerBehavior, 'descr': 'behavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively). If not set, the default HPAScalingRules for scale up and scale down are used.'}
            maxReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.'}
            metrics = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricSpec, 'x-kubernetes-list-type': 'atomic', 'descr': 'metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond. If not set, the default metric will be set to 80% average CPU utilization.'}
            minReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.'}
            scaleTargetRef = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_CrossVersionObjectReference, 'descr': 'scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count.'}
        R.behavior = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerBehavior
        R.maxReplicas = 0
        R.metrics = [lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricSpec]
        R.minReplicas = 0
        R.scaleTargetRef = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_CrossVersionObjectReference
    class definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerStatus:
        """#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus"""
        class R:
            description = 'HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.'
            type = 'object'
            required = ['desiredReplicas']
            _attrs = ['conditions', 'currentMetrics', 'currentReplicas', 'desiredReplicas', 'lastScaleTime', 'observedGeneration']
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerCondition, 'x-kubernetes-list-map-keys': ['type'], 'x-kubernetes-list-type': 'map', 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met.'}
            currentMetrics = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricStatus, 'x-kubernetes-list-type': 'atomic', 'descr': 'currentMetrics is the last read state of the metrics used by this autoscaler.'}
            currentReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler.'}
            desiredReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler.'}
            lastScaleTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'lastScaleTime is the last time the HorizontalPodAutoscaler scaled the number of pods, used by the autoscaler to control how often the number of pods is changed.'}
            observedGeneration = {'type': 'integer', 'format': 'int64', 'descr': 'observedGeneration is the most recent generation observed by this autoscaler.'}
        R.conditions = [lambda: Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerCondition]
        R.currentMetrics = [lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricStatus]
        R.currentReplicas = 0
        R.desiredReplicas = 0
        R.lastScaleTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.observedGeneration = 0
    class definitions_io_k8s_api_autoscaling_v2_MetricIdentifier:
        """#/definitions/io.k8s.api.autoscaling.v2.MetricIdentifier"""
        class R:
            description = 'MetricIdentifier defines the name and optionally selector for a metric'
            type = 'object'
            required = ['name']
            _attrs = ['name', 'selector']
            name = {'type': 'string', 'descr': 'name is the name of the given metric'}
            selector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.'}
        R.name = name
        R.selector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
    class definitions_io_k8s_api_autoscaling_v2_MetricSpec:
        """#/definitions/io.k8s.api.autoscaling.v2.MetricSpec"""
        class R:
            description = 'MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).'
            type = 'object'
            required = ['type']
            _attrs = ['containerResource', 'external', 'object', 'pods', 'resource', 'type']
            containerResource = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_ContainerResourceMetricSource, 'descr': 'containerResource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod of the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source. This is an alpha feature and can be enabled by the HPAContainerMetrics feature flag.'}
            external = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_ExternalMetricSource, 'descr': 'external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).'}
            object = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_ObjectMetricSource, 'descr': 'object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).'}
            pods = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_PodsMetricSource, 'descr': 'pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.'}
            resource = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_ResourceMetricSource, 'descr': 'resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.'}
            type = {'type': 'string', 'descr': 'type is the type of metric source.  It should be one of "ContainerResource", "External", "Object", "Pods" or "Resource", each mapping to a matching field in the object. Note: "ContainerResource" type is available on when the feature-gate HPAContainerMetrics is enabled'}
        R.containerResource = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_ContainerResourceMetricSource
        R.external = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_ExternalMetricSource
        R.object = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_ObjectMetricSource
        R.pods = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_PodsMetricSource
        R.resource = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_ResourceMetricSource
        R.type = str_dflt
    class definitions_io_k8s_api_autoscaling_v2_MetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2.MetricStatus"""
        class R:
            description = 'MetricStatus describes the last-read state of a single metric.'
            type = 'object'
            required = ['type']
            _attrs = ['containerResource', 'external', 'object', 'pods', 'resource', 'type']
            containerResource = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_ContainerResourceMetricStatus, 'descr': 'container resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.'}
            external = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_ExternalMetricStatus, 'descr': 'external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).'}
            object = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_ObjectMetricStatus, 'descr': 'object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).'}
            pods = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_PodsMetricStatus, 'descr': 'pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.'}
            resource = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_ResourceMetricStatus, 'descr': 'resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.'}
            type = {'type': 'string', 'descr': 'type is the type of metric source.  It will be one of "ContainerResource", "External", "Object", "Pods" or "Resource", each corresponds to a matching field in the object. Note: "ContainerResource" type is available on when the feature-gate HPAContainerMetrics is enabled'}
        R.containerResource = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_ContainerResourceMetricStatus
        R.external = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_ExternalMetricStatus
        R.object = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_ObjectMetricStatus
        R.pods = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_PodsMetricStatus
        R.resource = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_ResourceMetricStatus
        R.type = str_dflt
    class definitions_io_k8s_api_autoscaling_v2_MetricTarget:
        """#/definitions/io.k8s.api.autoscaling.v2.MetricTarget"""
        class R:
            description = 'MetricTarget defines the target value, average value, or average utilization of a specific metric'
            type = 'object'
            required = ['type']
            _attrs = ['averageUtilization', 'averageValue', 'type', 'value']
            averageUtilization = {'type': 'integer', 'format': 'int32', 'descr': 'averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type'}
            averageValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'averageValue is the target value of the average of the metric across all relevant pods (as a quantity)'}
            type = {'type': 'string', 'descr': 'type represents whether the metric type is Utilization, Value, or AverageValue'}
            value = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'value is the target value of the metric (as a quantity).'}
        R.averageUtilization = 0
        R.averageValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
        R.type = str_dflt
        R.value = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
    class definitions_io_k8s_api_autoscaling_v2_MetricValueStatus:
        """#/definitions/io.k8s.api.autoscaling.v2.MetricValueStatus"""
        class R:
            description = 'MetricValueStatus holds the current value for a metric'
            type = 'object'
            _attrs = ['averageUtilization', 'averageValue', 'value']
            averageUtilization = {'type': 'integer', 'format': 'int32', 'descr': 'currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.'}
            averageValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'averageValue is the current value of the average of the metric across all relevant pods (as a quantity)'}
            value = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'value is the current value of the metric (as a quantity).'}
        R.averageUtilization = 0
        R.averageValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
        R.value = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
    class definitions_io_k8s_api_autoscaling_v2_ObjectMetricSource:
        """#/definitions/io.k8s.api.autoscaling.v2.ObjectMetricSource"""
        class R:
            description = 'ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).'
            type = 'object'
            required = ['describedObject', 'target', 'metric']
            _attrs = ['describedObject', 'metric', 'target']
            describedObject = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_CrossVersionObjectReference, 'descr': 'describedObject specifies the descriptions of a object,such as kind,name apiVersion'}
            metric = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricIdentifier, 'descr': 'metric identifies the target metric by name and selector'}
            target = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricTarget, 'descr': 'target specifies the target value for the given metric'}
        R.describedObject = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_CrossVersionObjectReference
        R.metric = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricIdentifier
        R.target = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricTarget
    class definitions_io_k8s_api_autoscaling_v2_ObjectMetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2.ObjectMetricStatus"""
        class R:
            description = 'ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).'
            type = 'object'
            required = ['metric', 'current', 'describedObject']
            _attrs = ['current', 'describedObject', 'metric']
            current = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricValueStatus, 'descr': 'current contains the current value for the given metric'}
            describedObject = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_CrossVersionObjectReference, 'descr': 'DescribedObject specifies the descriptions of a object,such as kind,name apiVersion'}
            metric = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricIdentifier, 'descr': 'metric identifies the target metric by name and selector'}
        R.current = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricValueStatus
        R.describedObject = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_CrossVersionObjectReference
        R.metric = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricIdentifier
    class definitions_io_k8s_api_autoscaling_v2_PodsMetricSource:
        """#/definitions/io.k8s.api.autoscaling.v2.PodsMetricSource"""
        class R:
            description = 'PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.'
            type = 'object'
            required = ['metric', 'target']
            _attrs = ['metric', 'target']
            metric = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricIdentifier, 'descr': 'metric identifies the target metric by name and selector'}
            target = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricTarget, 'descr': 'target specifies the target value for the given metric'}
        R.metric = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricIdentifier
        R.target = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricTarget
    class definitions_io_k8s_api_autoscaling_v2_PodsMetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2.PodsMetricStatus"""
        class R:
            description = 'PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).'
            type = 'object'
            required = ['metric', 'current']
            _attrs = ['current', 'metric']
            current = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricValueStatus, 'descr': 'current contains the current value for the given metric'}
            metric = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricIdentifier, 'descr': 'metric identifies the target metric by name and selector'}
        R.current = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricValueStatus
        R.metric = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricIdentifier
    class definitions_io_k8s_api_autoscaling_v2_ResourceMetricSource:
        """#/definitions/io.k8s.api.autoscaling.v2.ResourceMetricSource"""
        class R:
            description = 'ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.  Only one "target" type should be set.'
            type = 'object'
            required = ['name', 'target']
            _attrs = ['name', 'target']
            name = {'type': 'string', 'descr': 'name is the name of the resource in question.'}
            target = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricTarget, 'descr': 'target specifies the target value for the given metric'}
        R.name = name
        R.target = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricTarget
    class definitions_io_k8s_api_autoscaling_v2_ResourceMetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2.ResourceMetricStatus"""
        class R:
            description = 'ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.'
            type = 'object'
            required = ['name', 'current']
            _attrs = ['current', 'name']
            current = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricValueStatus, 'descr': 'current contains the current value for the given metric'}
            name = {'type': 'string', 'descr': 'Name is the name of the resource in question.'}
        R.current = lambda: Defs.definitions_io_k8s_api_autoscaling_v2_MetricValueStatus
        R.name = name
    class definitions_io_k8s_api_autoscaling_v2beta1_ContainerResourceMetricSource:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.ContainerResourceMetricSource"""
        class R:
            description = 'ContainerResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.  Only one "target" type should be set.'
            type = 'object'
            required = ['name', 'container']
            _attrs = ['container', 'name', 'targetAverageUtilization', 'targetAverageValue']
            container = {'type': 'string', 'descr': 'container is the name of the container in the pods of the scaling target'}
            name = {'type': 'string', 'descr': 'name is the name of the resource in question.'}
            targetAverageUtilization = {'type': 'integer', 'format': 'int32', 'descr': 'targetAverageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.'}
            targetAverageValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'targetAverageValue is the target value of the average of the resource metric across all relevant pods, as a raw value (instead of as a percentage of the request), similar to the "pods" metric source type.'}
        R.container = str_dflt
        R.name = name
        R.targetAverageUtilization = 0
        R.targetAverageValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
    class definitions_io_k8s_api_autoscaling_v2beta1_ContainerResourceMetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.ContainerResourceMetricStatus"""
        class R:
            description = 'ContainerResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing a single container in each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.'
            type = 'object'
            required = ['name', 'currentAverageValue', 'container']
            _attrs = ['container', 'currentAverageUtilization', 'currentAverageValue', 'name']
            container = {'type': 'string', 'descr': 'container is the name of the container in the pods of the scaling target'}
            currentAverageUtilization = {'type': 'integer', 'format': 'int32', 'descr': 'currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.  It will only be present if `targetAverageValue` was set in the corresponding metric specification.'}
            currentAverageValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'currentAverageValue is the current value of the average of the resource metric across all relevant pods, as a raw value (instead of as a percentage of the request), similar to the "pods" metric source type. It will always be set, regardless of the corresponding metric specification.'}
            name = {'type': 'string', 'descr': 'name is the name of the resource in question.'}
        R.container = str_dflt
        R.currentAverageUtilization = 0
        R.currentAverageValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
        R.name = name
    class definitions_io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReference:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.CrossVersionObjectReference"""
        class R:
            description = 'CrossVersionObjectReference contains enough information to let you identify the referred resource.'
            type = 'object'
            required = ['kind', 'name']
            _attrs = ['apiVersion', 'kind', 'name']
            apiVersion = {'type': 'string', 'descr': 'API version of the referent'}
            kind = {'type': 'string', 'descr': 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'}
            name = {'type': 'string', 'descr': 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.name = name
    class definitions_io_k8s_api_autoscaling_v2beta1_ExternalMetricSource:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.ExternalMetricSource"""
        class R:
            description = 'ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster). Exactly one "target" type should be set.'
            type = 'object'
            required = ['metricName']
            _attrs = ['metricName', 'metricSelector', 'targetAverageValue', 'targetValue']
            metricName = {'type': 'string', 'descr': 'metricName is the name of the metric in question.'}
            metricSelector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'metricSelector is used to identify a specific time series within a given metric.'}
            targetAverageValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'targetAverageValue is the target per-pod value of global metric (as a quantity). Mutually exclusive with TargetValue.'}
            targetValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'targetValue is the target value of the metric (as a quantity). Mutually exclusive with TargetAverageValue.'}
        R.metricName = str_dflt
        R.metricSelector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.targetAverageValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
        R.targetValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
    class definitions_io_k8s_api_autoscaling_v2beta1_ExternalMetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.ExternalMetricStatus"""
        class R:
            description = 'ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object.'
            type = 'object'
            required = ['metricName', 'currentValue']
            _attrs = ['currentAverageValue', 'currentValue', 'metricName', 'metricSelector']
            currentAverageValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'currentAverageValue is the current value of metric averaged over autoscaled pods.'}
            currentValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'currentValue is the current value of the metric (as a quantity)'}
            metricName = {'type': 'string', 'descr': 'metricName is the name of a metric used for autoscaling in metric system.'}
            metricSelector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'metricSelector is used to identify a specific time series within a given metric.'}
        R.currentAverageValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
        R.currentValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
        R.metricName = str_dflt
        R.metricSelector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
    class definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscaler"""
        class R:
            description = 'HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'metadata is the standard object metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerSpec, 'descr': 'spec is the specification for the behaviour of the autoscaler. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerStatus, 'descr': 'status is the current information about the autoscaler.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerSpec
        R.status = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerStatus
    class definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerCondition:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerCondition"""
        class R:
            description = 'HorizontalPodAutoscalerCondition describes the state of a HorizontalPodAutoscaler at a certain point.'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'lastTransitionTime is the last time the condition transitioned from one status to another'}
            message = {'type': 'string', 'descr': 'message is a human-readable explanation containing details about the transition'}
            reason = {'type': 'string', 'descr': "reason is the reason for the condition's last transition."}
            status = {'type': 'string', 'descr': 'status is the status of the condition (True, False, Unknown)'}
            type = {'type': 'string', 'descr': 'type describes the current condition'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerList:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerList"""
        class R:
            description = 'HorizontalPodAutoscaler is a list of horizontal pod autoscaler objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'autoscaling', 'kind': 'HorizontalPodAutoscalerList', 'version': 'v2beta1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler, 'descr': 'items is the list of horizontal pod autoscaler objects.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'metadata is the standard list metadata.'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerSpec:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerSpec"""
        class R:
            description = 'HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.'
            type = 'object'
            required = ['scaleTargetRef', 'maxReplicas']
            _attrs = ['maxReplicas', 'metrics', 'minReplicas', 'scaleTargetRef']
            maxReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.'}
            metrics = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_MetricSpec, 'descr': 'metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond.'}
            minReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.'}
            scaleTargetRef = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReference, 'descr': 'scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count.'}
        R.maxReplicas = 0
        R.metrics = [lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_MetricSpec]
        R.minReplicas = 0
        R.scaleTargetRef = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReference
    class definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerStatus:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerStatus"""
        class R:
            description = 'HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.'
            type = 'object'
            required = ['currentReplicas', 'desiredReplicas']
            _attrs = ['conditions', 'currentMetrics', 'currentReplicas', 'desiredReplicas', 'lastScaleTime', 'observedGeneration']
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerCondition, 'descr': 'conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met.'}
            currentMetrics = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_MetricStatus, 'descr': 'currentMetrics is the last read state of the metrics used by this autoscaler.'}
            currentReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler.'}
            desiredReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler.'}
            lastScaleTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'lastScaleTime is the last time the HorizontalPodAutoscaler scaled the number of pods, used by the autoscaler to control how often the number of pods is changed.'}
            observedGeneration = {'type': 'integer', 'format': 'int64', 'descr': 'observedGeneration is the most recent generation observed by this autoscaler.'}
        R.conditions = [lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerCondition]
        R.currentMetrics = [lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_MetricStatus]
        R.currentReplicas = 0
        R.desiredReplicas = 0
        R.lastScaleTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.observedGeneration = 0
    class definitions_io_k8s_api_autoscaling_v2beta1_MetricSpec:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.MetricSpec"""
        class R:
            description = 'MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).'
            type = 'object'
            required = ['type']
            _attrs = ['containerResource', 'external', 'object', 'pods', 'resource', 'type']
            containerResource = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_ContainerResourceMetricSource, 'descr': 'container resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod of the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source. This is an alpha feature and can be enabled by the HPAContainerMetrics feature flag.'}
            external = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_ExternalMetricSource, 'descr': 'external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).'}
            object = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_ObjectMetricSource, 'descr': 'object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).'}
            pods = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_PodsMetricSource, 'descr': 'pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.'}
            resource = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_ResourceMetricSource, 'descr': 'resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.'}
            type = {'type': 'string', 'descr': 'type is the type of metric source.  It should be one of "ContainerResource", "External", "Object", "Pods" or "Resource", each mapping to a matching field in the object. Note: "ContainerResource" type is available on when the feature-gate HPAContainerMetrics is enabled'}
        R.containerResource = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_ContainerResourceMetricSource
        R.external = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_ExternalMetricSource
        R.object = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_ObjectMetricSource
        R.pods = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_PodsMetricSource
        R.resource = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_ResourceMetricSource
        R.type = str_dflt
    class definitions_io_k8s_api_autoscaling_v2beta1_MetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.MetricStatus"""
        class R:
            description = 'MetricStatus describes the last-read state of a single metric.'
            type = 'object'
            required = ['type']
            _attrs = ['containerResource', 'external', 'object', 'pods', 'resource', 'type']
            containerResource = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_ContainerResourceMetricStatus, 'descr': 'container resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.'}
            external = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_ExternalMetricStatus, 'descr': 'external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).'}
            object = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_ObjectMetricStatus, 'descr': 'object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).'}
            pods = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_PodsMetricStatus, 'descr': 'pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.'}
            resource = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_ResourceMetricStatus, 'descr': 'resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.'}
            type = {'type': 'string', 'descr': 'type is the type of metric source.  It will be one of "ContainerResource", "External", "Object", "Pods" or "Resource", each corresponds to a matching field in the object. Note: "ContainerResource" type is available on when the feature-gate HPAContainerMetrics is enabled'}
        R.containerResource = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_ContainerResourceMetricStatus
        R.external = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_ExternalMetricStatus
        R.object = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_ObjectMetricStatus
        R.pods = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_PodsMetricStatus
        R.resource = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_ResourceMetricStatus
        R.type = str_dflt
    class definitions_io_k8s_api_autoscaling_v2beta1_ObjectMetricSource:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.ObjectMetricSource"""
        class R:
            description = 'ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).'
            type = 'object'
            required = ['target', 'metricName', 'targetValue']
            _attrs = ['averageValue', 'metricName', 'selector', 'target', 'targetValue']
            averageValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'averageValue is the target value of the average of the metric across all relevant pods (as a quantity)'}
            metricName = {'type': 'string', 'descr': 'metricName is the name of the metric in question.'}
            selector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping When unset, just the metricName will be used to gather metrics.'}
            target = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReference, 'descr': 'target is the described Kubernetes object.'}
            targetValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'targetValue is the target value of the metric (as a quantity).'}
        R.averageValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
        R.metricName = str_dflt
        R.selector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.target = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReference
        R.targetValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
    class definitions_io_k8s_api_autoscaling_v2beta1_ObjectMetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.ObjectMetricStatus"""
        class R:
            description = 'ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).'
            type = 'object'
            required = ['target', 'metricName', 'currentValue']
            _attrs = ['averageValue', 'currentValue', 'metricName', 'selector', 'target']
            averageValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'averageValue is the current value of the average of the metric across all relevant pods (as a quantity)'}
            currentValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'currentValue is the current value of the metric (as a quantity).'}
            metricName = {'type': 'string', 'descr': 'metricName is the name of the metric in question.'}
            selector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'selector is the string-encoded form of a standard kubernetes label selector for the given metric When set in the ObjectMetricSource, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.'}
            target = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReference, 'descr': 'target is the described Kubernetes object.'}
        R.averageValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
        R.currentValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
        R.metricName = str_dflt
        R.selector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.target = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReference
    class definitions_io_k8s_api_autoscaling_v2beta1_PodsMetricSource:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.PodsMetricSource"""
        class R:
            description = 'PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.'
            type = 'object'
            required = ['metricName', 'targetAverageValue']
            _attrs = ['metricName', 'selector', 'targetAverageValue']
            metricName = {'type': 'string', 'descr': 'metricName is the name of the metric in question'}
            selector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping When unset, just the metricName will be used to gather metrics.'}
            targetAverageValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'targetAverageValue is the target value of the average of the metric across all relevant pods (as a quantity)'}
        R.metricName = str_dflt
        R.selector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.targetAverageValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
    class definitions_io_k8s_api_autoscaling_v2beta1_PodsMetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.PodsMetricStatus"""
        class R:
            description = 'PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).'
            type = 'object'
            required = ['metricName', 'currentAverageValue']
            _attrs = ['currentAverageValue', 'metricName', 'selector']
            currentAverageValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'currentAverageValue is the current value of the average of the metric across all relevant pods (as a quantity)'}
            metricName = {'type': 'string', 'descr': 'metricName is the name of the metric in question'}
            selector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'selector is the string-encoded form of a standard kubernetes label selector for the given metric When set in the PodsMetricSource, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.'}
        R.currentAverageValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
        R.metricName = str_dflt
        R.selector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
    class definitions_io_k8s_api_autoscaling_v2beta1_ResourceMetricSource:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.ResourceMetricSource"""
        class R:
            description = 'ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.  Only one "target" type should be set.'
            type = 'object'
            required = ['name']
            _attrs = ['name', 'targetAverageUtilization', 'targetAverageValue']
            name = {'type': 'string', 'descr': 'name is the name of the resource in question.'}
            targetAverageUtilization = {'type': 'integer', 'format': 'int32', 'descr': 'targetAverageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.'}
            targetAverageValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'targetAverageValue is the target value of the average of the resource metric across all relevant pods, as a raw value (instead of as a percentage of the request), similar to the "pods" metric source type.'}
        R.name = name
        R.targetAverageUtilization = 0
        R.targetAverageValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
    class definitions_io_k8s_api_autoscaling_v2beta1_ResourceMetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2beta1.ResourceMetricStatus"""
        class R:
            description = 'ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.'
            type = 'object'
            required = ['name', 'currentAverageValue']
            _attrs = ['currentAverageUtilization', 'currentAverageValue', 'name']
            currentAverageUtilization = {'type': 'integer', 'format': 'int32', 'descr': 'currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.  It will only be present if `targetAverageValue` was set in the corresponding metric specification.'}
            currentAverageValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'currentAverageValue is the current value of the average of the resource metric across all relevant pods, as a raw value (instead of as a percentage of the request), similar to the "pods" metric source type. It will always be set, regardless of the corresponding metric specification.'}
            name = {'type': 'string', 'descr': 'name is the name of the resource in question.'}
        R.currentAverageUtilization = 0
        R.currentAverageValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
        R.name = name
    class definitions_io_k8s_api_autoscaling_v2beta2_ContainerResourceMetricSource:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.ContainerResourceMetricSource"""
        class R:
            description = 'ContainerResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.  Only one "target" type should be set.'
            type = 'object'
            required = ['name', 'target', 'container']
            _attrs = ['container', 'name', 'target']
            container = {'type': 'string', 'descr': 'container is the name of the container in the pods of the scaling target'}
            name = {'type': 'string', 'descr': 'name is the name of the resource in question.'}
            target = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricTarget, 'descr': 'target specifies the target value for the given metric'}
        R.container = str_dflt
        R.name = name
        R.target = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricTarget
    class definitions_io_k8s_api_autoscaling_v2beta2_ContainerResourceMetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.ContainerResourceMetricStatus"""
        class R:
            description = 'ContainerResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing a single container in each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.'
            type = 'object'
            required = ['name', 'current', 'container']
            _attrs = ['container', 'current', 'name']
            container = {'type': 'string', 'descr': 'Container is the name of the container in the pods of the scaling target'}
            current = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricValueStatus, 'descr': 'current contains the current value for the given metric'}
            name = {'type': 'string', 'descr': 'Name is the name of the resource in question.'}
        R.container = str_dflt
        R.current = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricValueStatus
        R.name = name
    class definitions_io_k8s_api_autoscaling_v2beta2_CrossVersionObjectReference:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.CrossVersionObjectReference"""
        class R:
            description = 'CrossVersionObjectReference contains enough information to let you identify the referred resource.'
            type = 'object'
            required = ['kind', 'name']
            _attrs = ['apiVersion', 'kind', 'name']
            apiVersion = {'type': 'string', 'descr': 'API version of the referent'}
            kind = {'type': 'string', 'descr': 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'}
            name = {'type': 'string', 'descr': 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.name = name
    class definitions_io_k8s_api_autoscaling_v2beta2_ExternalMetricSource:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.ExternalMetricSource"""
        class R:
            description = 'ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).'
            type = 'object'
            required = ['metric', 'target']
            _attrs = ['metric', 'target']
            metric = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricIdentifier, 'descr': 'metric identifies the target metric by name and selector'}
            target = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricTarget, 'descr': 'target specifies the target value for the given metric'}
        R.metric = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricIdentifier
        R.target = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricTarget
    class definitions_io_k8s_api_autoscaling_v2beta2_ExternalMetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.ExternalMetricStatus"""
        class R:
            description = 'ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object.'
            type = 'object'
            required = ['metric', 'current']
            _attrs = ['current', 'metric']
            current = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricValueStatus, 'descr': 'current contains the current value for the given metric'}
            metric = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricIdentifier, 'descr': 'metric identifies the target metric by name and selector'}
        R.current = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricValueStatus
        R.metric = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricIdentifier
    class definitions_io_k8s_api_autoscaling_v2beta2_HPAScalingPolicy:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.HPAScalingPolicy"""
        class R:
            description = 'HPAScalingPolicy is a single policy which must hold true for a specified past interval.'
            type = 'object'
            required = ['type', 'value', 'periodSeconds']
            _attrs = ['periodSeconds', 'type', 'value']
            periodSeconds = {'type': 'integer', 'format': 'int32', 'descr': 'PeriodSeconds specifies the window of time for which the policy should hold true. PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).'}
            type = {'type': 'string', 'descr': 'Type is used to specify the scaling policy.'}
            value = {'type': 'integer', 'format': 'int32', 'descr': 'Value contains the amount of change which is permitted by the policy. It must be greater than zero'}
        R.periodSeconds = 0
        R.type = str_dflt
        R.value = 0
    class definitions_io_k8s_api_autoscaling_v2beta2_HPAScalingRules:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.HPAScalingRules"""
        class R:
            description = 'HPAScalingRules configures the scaling behavior for one direction. These Rules are applied after calculating DesiredReplicas from metrics for the HPA. They can limit the scaling velocity by specifying scaling policies. They can prevent flapping by specifying the stabilization window, so that the number of replicas is not set instantly, instead, the safest value from the stabilization window is chosen.'
            type = 'object'
            _attrs = ['policies', 'selectPolicy', 'stabilizationWindowSeconds']
            policies = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_HPAScalingPolicy, 'descr': 'policies is a list of potential scaling polices which can be used during scaling. At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid'}
            selectPolicy = {'type': 'string', 'descr': 'selectPolicy is used to specify which policy should be used. If not set, the default value MaxPolicySelect is used.'}
            stabilizationWindowSeconds = {'type': 'integer', 'format': 'int32', 'descr': 'StabilizationWindowSeconds is the number of seconds for which past recommendations should be considered while scaling up or scaling down. StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour). If not set, use the default values: - For scale up: 0 (i.e. no stabilization is done). - For scale down: 300 (i.e. the stabilization window is 300 seconds long).'}
        R.policies = [lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_HPAScalingPolicy]
        R.selectPolicy = str_dflt
        R.stabilizationWindowSeconds = 0
    class definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscaler"""
        class R:
            description = 'HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta2'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'metadata is the standard object metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerSpec, 'descr': 'spec is the specification for the behaviour of the autoscaler. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerStatus, 'descr': 'status is the current information about the autoscaler.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerSpec
        R.status = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerStatus
    class definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerBehavior:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerBehavior"""
        class R:
            description = 'HorizontalPodAutoscalerBehavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively).'
            type = 'object'
            _attrs = ['scaleDown', 'scaleUp']
            scaleDown = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_HPAScalingRules, 'descr': 'scaleDown is scaling policy for scaling Down. If not set, the default value is to allow to scale down to minReplicas pods, with a 300 second stabilization window (i.e., the highest recommendation for the last 300sec is used).'}
            scaleUp = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_HPAScalingRules, 'descr': 'scaleUp is scaling policy for scaling Up. If not set, the default value is the higher of:\n  * increase no more than 4 pods per 60 seconds\n  * double the number of pods per 60 seconds\nNo stabilization is used.'}
        R.scaleDown = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_HPAScalingRules
        R.scaleUp = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_HPAScalingRules
    class definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerCondition:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerCondition"""
        class R:
            description = 'HorizontalPodAutoscalerCondition describes the state of a HorizontalPodAutoscaler at a certain point.'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'lastTransitionTime is the last time the condition transitioned from one status to another'}
            message = {'type': 'string', 'descr': 'message is a human-readable explanation containing details about the transition'}
            reason = {'type': 'string', 'descr': "reason is the reason for the condition's last transition."}
            status = {'type': 'string', 'descr': 'status is the status of the condition (True, False, Unknown)'}
            type = {'type': 'string', 'descr': 'type describes the current condition'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerList:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerList"""
        class R:
            description = 'HorizontalPodAutoscalerList is a list of horizontal pod autoscaler objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'autoscaling', 'kind': 'HorizontalPodAutoscalerList', 'version': 'v2beta2'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler, 'descr': 'items is the list of horizontal pod autoscaler objects.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'metadata is the standard list metadata.'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerSpec:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerSpec"""
        class R:
            description = 'HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.'
            type = 'object'
            required = ['scaleTargetRef', 'maxReplicas']
            _attrs = ['behavior', 'maxReplicas', 'metrics', 'minReplicas', 'scaleTargetRef']
            behavior = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerBehavior, 'descr': 'behavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively). If not set, the default HPAScalingRules for scale up and scale down are used.'}
            maxReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.'}
            metrics = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricSpec, 'descr': 'metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond. If not set, the default metric will be set to 80% average CPU utilization.'}
            minReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.'}
            scaleTargetRef = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_CrossVersionObjectReference, 'descr': 'scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count.'}
        R.behavior = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerBehavior
        R.maxReplicas = 0
        R.metrics = [lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricSpec]
        R.minReplicas = 0
        R.scaleTargetRef = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_CrossVersionObjectReference
    class definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerStatus:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerStatus"""
        class R:
            description = 'HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.'
            type = 'object'
            required = ['currentReplicas', 'desiredReplicas']
            _attrs = ['conditions', 'currentMetrics', 'currentReplicas', 'desiredReplicas', 'lastScaleTime', 'observedGeneration']
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerCondition, 'descr': 'conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met.'}
            currentMetrics = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricStatus, 'descr': 'currentMetrics is the last read state of the metrics used by this autoscaler.'}
            currentReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler.'}
            desiredReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler.'}
            lastScaleTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'lastScaleTime is the last time the HorizontalPodAutoscaler scaled the number of pods, used by the autoscaler to control how often the number of pods is changed.'}
            observedGeneration = {'type': 'integer', 'format': 'int64', 'descr': 'observedGeneration is the most recent generation observed by this autoscaler.'}
        R.conditions = [lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerCondition]
        R.currentMetrics = [lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricStatus]
        R.currentReplicas = 0
        R.desiredReplicas = 0
        R.lastScaleTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.observedGeneration = 0
    class definitions_io_k8s_api_autoscaling_v2beta2_MetricIdentifier:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.MetricIdentifier"""
        class R:
            description = 'MetricIdentifier defines the name and optionally selector for a metric'
            type = 'object'
            required = ['name']
            _attrs = ['name', 'selector']
            name = {'type': 'string', 'descr': 'name is the name of the given metric'}
            selector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.'}
        R.name = name
        R.selector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
    class definitions_io_k8s_api_autoscaling_v2beta2_MetricSpec:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.MetricSpec"""
        class R:
            description = 'MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).'
            type = 'object'
            required = ['type']
            _attrs = ['containerResource', 'external', 'object', 'pods', 'resource', 'type']
            containerResource = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_ContainerResourceMetricSource, 'descr': 'container resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod of the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source. This is an alpha feature and can be enabled by the HPAContainerMetrics feature flag.'}
            external = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_ExternalMetricSource, 'descr': 'external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).'}
            object = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_ObjectMetricSource, 'descr': 'object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).'}
            pods = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_PodsMetricSource, 'descr': 'pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.'}
            resource = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_ResourceMetricSource, 'descr': 'resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.'}
            type = {'type': 'string', 'descr': 'type is the type of metric source.  It should be one of "ContainerResource", "External", "Object", "Pods" or "Resource", each mapping to a matching field in the object. Note: "ContainerResource" type is available on when the feature-gate HPAContainerMetrics is enabled'}
        R.containerResource = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_ContainerResourceMetricSource
        R.external = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_ExternalMetricSource
        R.object = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_ObjectMetricSource
        R.pods = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_PodsMetricSource
        R.resource = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_ResourceMetricSource
        R.type = str_dflt
    class definitions_io_k8s_api_autoscaling_v2beta2_MetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.MetricStatus"""
        class R:
            description = 'MetricStatus describes the last-read state of a single metric.'
            type = 'object'
            required = ['type']
            _attrs = ['containerResource', 'external', 'object', 'pods', 'resource', 'type']
            containerResource = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_ContainerResourceMetricStatus, 'descr': 'container resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.'}
            external = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_ExternalMetricStatus, 'descr': 'external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).'}
            object = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_ObjectMetricStatus, 'descr': 'object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).'}
            pods = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_PodsMetricStatus, 'descr': 'pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.'}
            resource = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_ResourceMetricStatus, 'descr': 'resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.'}
            type = {'type': 'string', 'descr': 'type is the type of metric source.  It will be one of "ContainerResource", "External", "Object", "Pods" or "Resource", each corresponds to a matching field in the object. Note: "ContainerResource" type is available on when the feature-gate HPAContainerMetrics is enabled'}
        R.containerResource = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_ContainerResourceMetricStatus
        R.external = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_ExternalMetricStatus
        R.object = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_ObjectMetricStatus
        R.pods = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_PodsMetricStatus
        R.resource = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_ResourceMetricStatus
        R.type = str_dflt
    class definitions_io_k8s_api_autoscaling_v2beta2_MetricTarget:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.MetricTarget"""
        class R:
            description = 'MetricTarget defines the target value, average value, or average utilization of a specific metric'
            type = 'object'
            required = ['type']
            _attrs = ['averageUtilization', 'averageValue', 'type', 'value']
            averageUtilization = {'type': 'integer', 'format': 'int32', 'descr': 'averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type'}
            averageValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'averageValue is the target value of the average of the metric across all relevant pods (as a quantity)'}
            type = {'type': 'string', 'descr': 'type represents whether the metric type is Utilization, Value, or AverageValue'}
            value = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'value is the target value of the metric (as a quantity).'}
        R.averageUtilization = 0
        R.averageValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
        R.type = str_dflt
        R.value = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
    class definitions_io_k8s_api_autoscaling_v2beta2_MetricValueStatus:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.MetricValueStatus"""
        class R:
            description = 'MetricValueStatus holds the current value for a metric'
            type = 'object'
            _attrs = ['averageUtilization', 'averageValue', 'value']
            averageUtilization = {'type': 'integer', 'format': 'int32', 'descr': 'currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.'}
            averageValue = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'averageValue is the current value of the average of the metric across all relevant pods (as a quantity)'}
            value = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'value is the current value of the metric (as a quantity).'}
        R.averageUtilization = 0
        R.averageValue = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
        R.value = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
    class definitions_io_k8s_api_autoscaling_v2beta2_ObjectMetricSource:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.ObjectMetricSource"""
        class R:
            description = 'ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).'
            type = 'object'
            required = ['describedObject', 'target', 'metric']
            _attrs = ['describedObject', 'metric', 'target']
            describedObject = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_CrossVersionObjectReference
            metric = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricIdentifier, 'descr': 'metric identifies the target metric by name and selector'}
            target = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricTarget, 'descr': 'target specifies the target value for the given metric'}
        R.describedObject = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_CrossVersionObjectReference
        R.metric = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricIdentifier
        R.target = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricTarget
    class definitions_io_k8s_api_autoscaling_v2beta2_ObjectMetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.ObjectMetricStatus"""
        class R:
            description = 'ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).'
            type = 'object'
            required = ['metric', 'current', 'describedObject']
            _attrs = ['current', 'describedObject', 'metric']
            current = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricValueStatus, 'descr': 'current contains the current value for the given metric'}
            describedObject = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_CrossVersionObjectReference
            metric = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricIdentifier, 'descr': 'metric identifies the target metric by name and selector'}
        R.current = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricValueStatus
        R.describedObject = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_CrossVersionObjectReference
        R.metric = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricIdentifier
    class definitions_io_k8s_api_autoscaling_v2beta2_PodsMetricSource:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.PodsMetricSource"""
        class R:
            description = 'PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.'
            type = 'object'
            required = ['metric', 'target']
            _attrs = ['metric', 'target']
            metric = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricIdentifier, 'descr': 'metric identifies the target metric by name and selector'}
            target = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricTarget, 'descr': 'target specifies the target value for the given metric'}
        R.metric = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricIdentifier
        R.target = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricTarget
    class definitions_io_k8s_api_autoscaling_v2beta2_PodsMetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.PodsMetricStatus"""
        class R:
            description = 'PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).'
            type = 'object'
            required = ['metric', 'current']
            _attrs = ['current', 'metric']
            current = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricValueStatus, 'descr': 'current contains the current value for the given metric'}
            metric = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricIdentifier, 'descr': 'metric identifies the target metric by name and selector'}
        R.current = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricValueStatus
        R.metric = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricIdentifier
    class definitions_io_k8s_api_autoscaling_v2beta2_ResourceMetricSource:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.ResourceMetricSource"""
        class R:
            description = 'ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.  Only one "target" type should be set.'
            type = 'object'
            required = ['name', 'target']
            _attrs = ['name', 'target']
            name = {'type': 'string', 'descr': 'name is the name of the resource in question.'}
            target = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricTarget, 'descr': 'target specifies the target value for the given metric'}
        R.name = name
        R.target = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricTarget
    class definitions_io_k8s_api_autoscaling_v2beta2_ResourceMetricStatus:
        """#/definitions/io.k8s.api.autoscaling.v2beta2.ResourceMetricStatus"""
        class R:
            description = 'ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.'
            type = 'object'
            required = ['name', 'current']
            _attrs = ['current', 'name']
            current = {'$ref': lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricValueStatus, 'descr': 'current contains the current value for the given metric'}
            name = {'type': 'string', 'descr': 'Name is the name of the resource in question.'}
        R.current = lambda: Defs.definitions_io_k8s_api_autoscaling_v2beta2_MetricValueStatus
        R.name = name
    class definitions_io_k8s_api_batch_v1_CronJob:
        """#/definitions/io.k8s.api.batch.v1.CronJob"""
        class R:
            description = 'CronJob represents the configuration of a single cron job.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'batch', 'kind': 'CronJob', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_batch_v1_CronJobSpec, 'descr': 'Specification of the desired behavior of a cron job, including the schedule. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_batch_v1_CronJobStatus, 'descr': 'Current status of a cron job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_batch_v1_CronJobSpec
        R.status = lambda: Defs.definitions_io_k8s_api_batch_v1_CronJobStatus
    class definitions_io_k8s_api_batch_v1_CronJobList:
        """#/definitions/io.k8s.api.batch.v1.CronJobList"""
        class R:
            description = 'CronJobList is a collection of cron jobs.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'batch', 'kind': 'CronJobList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_batch_v1_CronJob, 'descr': 'items is the list of CronJobs.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_batch_v1_CronJob]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_batch_v1_CronJobSpec:
        """#/definitions/io.k8s.api.batch.v1.CronJobSpec"""
        class R:
            description = 'CronJobSpec describes how the job execution will look like and when it will actually run.'
            type = 'object'
            required = ['schedule', 'jobTemplate']
            _attrs = ['concurrencyPolicy', 'failedJobsHistoryLimit', 'jobTemplate', 'schedule', 'startingDeadlineSeconds', 'successfulJobsHistoryLimit', 'suspend']
            concurrencyPolicy = {'type': 'string', 'descr': 'Specifies how to treat concurrent executions of a Job. Valid values are: - "Allow" (default): allows CronJobs to run concurrently; - "Forbid": forbids concurrent runs, skipping next run if previous run hasn\'t finished yet; - "Replace": cancels currently running job and replaces it with a new one\n\n'}
            failedJobsHistoryLimit = {'type': 'integer', 'format': 'int32', 'descr': 'The number of failed finished jobs to retain. Value must be non-negative integer. Defaults to 1.'}
            jobTemplate = {'$ref': lambda: Defs.definitions_io_k8s_api_batch_v1_JobTemplateSpec, 'descr': 'Specifies the job that will be created when executing a CronJob.'}
            schedule = {'type': 'string', 'descr': 'The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.'}
            startingDeadlineSeconds = {'type': 'integer', 'format': 'int64', 'descr': 'Optional deadline in seconds for starting the job if it misses scheduled time for any reason.  Missed jobs executions will be counted as failed ones.'}
            successfulJobsHistoryLimit = {'type': 'integer', 'format': 'int32', 'descr': 'The number of successful finished jobs to retain. Value must be non-negative integer. Defaults to 3.'}
            suspend = {'type': 'boolean', 'descr': 'This flag tells the controller to suspend subsequent executions, it does not apply to already started executions.  Defaults to false.'}
        R.concurrencyPolicy = str_dflt
        R.failedJobsHistoryLimit = 0
        R.jobTemplate = lambda: Defs.definitions_io_k8s_api_batch_v1_JobTemplateSpec
        R.schedule = str_dflt
        R.startingDeadlineSeconds = 0
        R.successfulJobsHistoryLimit = 0
        R.suspend = True
    class definitions_io_k8s_api_batch_v1_CronJobStatus:
        """#/definitions/io.k8s.api.batch.v1.CronJobStatus"""
        class R:
            description = 'CronJobStatus represents the current state of a cron job.'
            type = 'object'
            _attrs = ['active', 'lastScheduleTime', 'lastSuccessfulTime']
            active = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference, 'x-kubernetes-list-type': 'atomic', 'descr': 'A list of pointers to currently running jobs.'}
            lastScheduleTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Information when was the last time the job was successfully scheduled.'}
            lastSuccessfulTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Information when was the last time the job successfully completed.'}
        R.active = [lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference]
        R.lastScheduleTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.lastSuccessfulTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
    class definitions_io_k8s_api_batch_v1_Job:
        """#/definitions/io.k8s.api.batch.v1.Job"""
        class R:
            description = 'Job represents the configuration of a single job.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'batch', 'kind': 'Job', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_batch_v1_JobSpec, 'descr': 'Specification of the desired behavior of a job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_batch_v1_JobStatus, 'descr': 'Current status of a job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_batch_v1_JobSpec
        R.status = lambda: Defs.definitions_io_k8s_api_batch_v1_JobStatus
    class definitions_io_k8s_api_batch_v1_JobCondition:
        """#/definitions/io.k8s.api.batch.v1.JobCondition"""
        class R:
            description = 'JobCondition describes current state of a job.'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['lastProbeTime', 'lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastProbeTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Last time the condition was checked.'}
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Last time the condition transit from one status to another.'}
            message = {'type': 'string', 'descr': 'Human readable message indicating details about last transition.'}
            reason = {'type': 'string', 'descr': "(brief) reason for the condition's last transition."}
            status = {'type': 'string', 'descr': 'Status of the condition, one of True, False, Unknown.'}
            type = {'type': 'string', 'descr': 'Type of job condition, Complete or Failed.\n\n'}
        R.lastProbeTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_batch_v1_JobList:
        """#/definitions/io.k8s.api.batch.v1.JobList"""
        class R:
            description = 'JobList is a collection of jobs.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'batch', 'kind': 'JobList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_batch_v1_Job, 'descr': 'items is the list of Jobs.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_batch_v1_Job]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_batch_v1_JobSpec:
        """#/definitions/io.k8s.api.batch.v1.JobSpec"""
        class R:
            description = 'JobSpec describes how the job execution will look like.'
            type = 'object'
            required = ['template']
            _attrs = ['activeDeadlineSeconds', 'backoffLimit', 'completionMode', 'completions', 'manualSelector', 'parallelism', 'selector', 'suspend', 'template', 'ttlSecondsAfterFinished']
            activeDeadlineSeconds = {'type': 'integer', 'format': 'int64', 'descr': 'Specifies the duration in seconds relative to the startTime that the job may be continuously active before the system tries to terminate it; value must be positive integer. If a Job is suspended (at creation or through an update), this timer will effectively be stopped and reset when the Job is resumed again.'}
            backoffLimit = {'type': 'integer', 'format': 'int32', 'descr': 'Specifies the number of retries before marking this job failed. Defaults to 6'}
            completionMode = {'type': 'string', 'descr': "CompletionMode specifies how Pod completions are tracked. It can be `NonIndexed` (default) or `Indexed`.\n\n`NonIndexed` means that the Job is considered complete when there have been .spec.completions successfully completed Pods. Each Pod completion is homologous to each other.\n\n`Indexed` means that the Pods of a Job get an associated completion index from 0 to (.spec.completions - 1), available in the annotation batch.kubernetes.io/job-completion-index. The Job is considered complete when there is one successfully completed Pod for each index. When value is `Indexed`, .spec.completions must be specified and `.spec.parallelism` must be less than or equal to 10^5. In addition, The Pod name takes the form `$(job-name)-$(index)-$(random-string)`, the Pod hostname takes the form `$(job-name)-$(index)`.\n\nThis field is beta-level. More completion modes can be added in the future. If the Job controller observes a mode that it doesn't recognize, the controller skips updates for the Job."}
            completions = {'type': 'integer', 'format': 'int32', 'descr': 'Specifies the desired number of successfully finished pods the job should be run with.  Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/'}
            manualSelector = {'type': 'boolean', 'descr': 'manualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector'}
            parallelism = {'type': 'integer', 'format': 'int32', 'descr': 'Specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/'}
            selector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'A label query over pods that should match the pod count. Normally, the system sets this field for you. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'}
            suspend = {'type': 'boolean', 'descr': 'Suspend specifies whether the Job controller should create Pods or not. If a Job is created with suspend set to true, no Pods are created by the Job controller. If a Job is suspended after creation (i.e. the flag goes from false to true), the Job controller will delete all active Pods associated with this Job. Users must design their workload to gracefully handle this. Suspending a Job will reset the StartTime field of the Job, effectively resetting the ActiveDeadlineSeconds timer too. Defaults to false.\n\nThis field is beta-level, gated by SuspendJob feature flag (enabled by default).'}
            template = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PodTemplateSpec, 'descr': 'Describes the pod that will be created when executing a job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/'}
            ttlSecondsAfterFinished = {'type': 'integer', 'format': 'int32', 'descr': "ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes."}
        R.activeDeadlineSeconds = 0
        R.backoffLimit = 0
        R.completionMode = str_dflt
        R.completions = 0
        R.manualSelector = True
        R.parallelism = 0
        R.selector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.suspend = True
        R.template = lambda: Defs.definitions_io_k8s_api_core_v1_PodTemplateSpec
        R.ttlSecondsAfterFinished = 0
    class definitions_io_k8s_api_batch_v1_JobStatus:
        """#/definitions/io.k8s.api.batch.v1.JobStatus"""
        class R:
            description = 'JobStatus represents the current state of a Job.'
            type = 'object'
            _attrs = ['active', 'completedIndexes', 'completionTime', 'conditions', 'failed', 'ready', 'startTime', 'succeeded', 'uncountedTerminatedPods']
            active = {'type': 'integer', 'format': 'int32', 'descr': 'The number of pending and running pods.'}
            completedIndexes = {'type': 'string', 'descr': 'CompletedIndexes holds the completed indexes when .spec.completionMode = "Indexed" in a text format. The indexes are represented as decimal integers separated by commas. The numbers are listed in increasing order. Three or more consecutive numbers are compressed and represented by the first and last element of the series, separated by a hyphen. For example, if the completed indexes are 1, 3, 4, 5 and 7, they are represented as "1,3-5,7".'}
            completionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. The completion time is only set when the job finishes successfully.'}
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_batch_v1_JobCondition, 'x-kubernetes-list-type': 'atomic', 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'The latest available observations of an object\'s current state. When a Job fails, one of the conditions will have type "Failed" and status true. When a Job is suspended, one of the conditions will have type "Suspended" and status true; when the Job is resumed, the status of this condition will become false. When a Job is completed, one of the conditions will have type "Complete" and status true. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/'}
            failed = {'type': 'integer', 'format': 'int32', 'descr': 'The number of pods which reached phase Failed.'}
            ready = {'type': 'integer', 'format': 'int32', 'descr': 'The number of pods which have a Ready condition.\n\nThis field is alpha-level. The job controller populates the field when the feature gate JobReadyPods is enabled (disabled by default).'}
            startTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Represents time when the job controller started processing a job. When a Job is created in the suspended state, this field is not set until the first time it is resumed. This field is reset every time a Job is resumed from suspension. It is represented in RFC3339 form and is in UTC.'}
            succeeded = {'type': 'integer', 'format': 'int32', 'descr': 'The number of pods which reached phase Succeeded.'}
            uncountedTerminatedPods = {'$ref': lambda: Defs.definitions_io_k8s_api_batch_v1_UncountedTerminatedPods, 'descr': "UncountedTerminatedPods holds the UIDs of Pods that have terminated but the job controller hasn't yet accounted for in the status counters.\n\nThe job controller creates pods with a finalizer. When a pod terminates (succeeded or failed), the controller does three steps to account for it in the job status: (1) Add the pod UID to the arrays in this field. (2) Remove the pod finalizer. (3) Remove the pod UID from the arrays while increasing the corresponding\n    counter.\n\nThis field is beta-level. The job controller only makes use of this field when the feature gate JobTrackingWithFinalizers is enabled (enabled by default). Old jobs might not be tracked using this field, in which case the field remains null."}
        R.active = 0
        R.completedIndexes = str_dflt
        R.completionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.conditions = [lambda: Defs.definitions_io_k8s_api_batch_v1_JobCondition]
        R.failed = 0
        R.ready = 0
        R.startTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.succeeded = 0
        R.uncountedTerminatedPods = lambda: Defs.definitions_io_k8s_api_batch_v1_UncountedTerminatedPods
    class definitions_io_k8s_api_batch_v1_JobTemplateSpec:
        """#/definitions/io.k8s.api.batch.v1.JobTemplateSpec"""
        class R:
            description = 'JobTemplateSpec describes the data a Job should have when created from a template'
            type = 'object'
            _attrs = ['metadata', 'spec']
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata of the jobs created from this template. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_batch_v1_JobSpec, 'descr': 'Specification of the desired behavior of the job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_batch_v1_JobSpec
    class definitions_io_k8s_api_batch_v1_UncountedTerminatedPods:
        """#/definitions/io.k8s.api.batch.v1.UncountedTerminatedPods"""
        class R:
            description = 'UncountedTerminatedPods holds UIDs of Pods that have terminated but haven"t been accounted in Job status counters.'
            type = 'object'
            _attrs = ['failed', 'succeeded']
            failed = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': 'Failed holds UIDs of failed Pods.'}
            succeeded = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': 'Succeeded holds UIDs of succeeded Pods.'}
        R.failed = [str_dflt]
        R.succeeded = [str_dflt]
    class definitions_io_k8s_api_batch_v1beta1_CronJob:
        """#/definitions/io.k8s.api.batch.v1beta1.CronJob"""
        class R:
            description = 'CronJob represents the configuration of a single cron job.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'batch', 'kind': 'CronJob', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_batch_v1beta1_CronJobSpec, 'descr': 'Specification of the desired behavior of a cron job, including the schedule. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_batch_v1beta1_CronJobStatus, 'descr': 'Current status of a cron job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_batch_v1beta1_CronJobSpec
        R.status = lambda: Defs.definitions_io_k8s_api_batch_v1beta1_CronJobStatus
    class definitions_io_k8s_api_batch_v1beta1_CronJobList:
        """#/definitions/io.k8s.api.batch.v1beta1.CronJobList"""
        class R:
            description = 'CronJobList is a collection of cron jobs.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'batch', 'kind': 'CronJobList', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_batch_v1beta1_CronJob, 'descr': 'items is the list of CronJobs.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_batch_v1beta1_CronJob]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_batch_v1beta1_CronJobSpec:
        """#/definitions/io.k8s.api.batch.v1beta1.CronJobSpec"""
        class R:
            description = 'CronJobSpec describes how the job execution will look like and when it will actually run.'
            type = 'object'
            required = ['schedule', 'jobTemplate']
            _attrs = ['concurrencyPolicy', 'failedJobsHistoryLimit', 'jobTemplate', 'schedule', 'startingDeadlineSeconds', 'successfulJobsHistoryLimit', 'suspend']
            concurrencyPolicy = {'type': 'string', 'descr': 'Specifies how to treat concurrent executions of a Job. Valid values are: - "Allow" (default): allows CronJobs to run concurrently; - "Forbid": forbids concurrent runs, skipping next run if previous run hasn\'t finished yet; - "Replace": cancels currently running job and replaces it with a new one'}
            failedJobsHistoryLimit = {'type': 'integer', 'format': 'int32', 'descr': 'The number of failed finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.'}
            jobTemplate = {'$ref': lambda: Defs.definitions_io_k8s_api_batch_v1beta1_JobTemplateSpec, 'descr': 'Specifies the job that will be created when executing a CronJob.'}
            schedule = {'type': 'string', 'descr': 'The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.'}
            startingDeadlineSeconds = {'type': 'integer', 'format': 'int64', 'descr': 'Optional deadline in seconds for starting the job if it misses scheduled time for any reason.  Missed jobs executions will be counted as failed ones.'}
            successfulJobsHistoryLimit = {'type': 'integer', 'format': 'int32', 'descr': 'The number of successful finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 3.'}
            suspend = {'type': 'boolean', 'descr': 'This flag tells the controller to suspend subsequent executions, it does not apply to already started executions.  Defaults to false.'}
        R.concurrencyPolicy = str_dflt
        R.failedJobsHistoryLimit = 0
        R.jobTemplate = lambda: Defs.definitions_io_k8s_api_batch_v1beta1_JobTemplateSpec
        R.schedule = str_dflt
        R.startingDeadlineSeconds = 0
        R.successfulJobsHistoryLimit = 0
        R.suspend = True
    class definitions_io_k8s_api_batch_v1beta1_CronJobStatus:
        """#/definitions/io.k8s.api.batch.v1beta1.CronJobStatus"""
        class R:
            description = 'CronJobStatus represents the current state of a cron job.'
            type = 'object'
            _attrs = ['active', 'lastScheduleTime', 'lastSuccessfulTime']
            active = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference, 'x-kubernetes-list-type': 'atomic', 'descr': 'A list of pointers to currently running jobs.'}
            lastScheduleTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Information when was the last time the job was successfully scheduled.'}
            lastSuccessfulTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Information when was the last time the job successfully completed.'}
        R.active = [lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference]
        R.lastScheduleTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.lastSuccessfulTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
    class definitions_io_k8s_api_batch_v1beta1_JobTemplateSpec:
        """#/definitions/io.k8s.api.batch.v1beta1.JobTemplateSpec"""
        class R:
            description = 'JobTemplateSpec describes the data a Job should have when created from a template'
            type = 'object'
            _attrs = ['metadata', 'spec']
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata of the jobs created from this template. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_batch_v1_JobSpec, 'descr': 'Specification of the desired behavior of the job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_batch_v1_JobSpec
    class definitions_io_k8s_api_certificates_v1_CertificateSigningRequest:
        """#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequest"""
        class R:
            description = 'CertificateSigningRequest objects provide a mechanism to obtain x509 certificates by submitting a certificate signing request, and having it asynchronously approved and issued.\n\nKubelets use this API to obtain:\n 1. client certificates to authenticate to kube-apiserver (with the "kubernetes.io/kube-apiserver-client-kubelet" signerName).\n 2. serving certificates for TLS endpoints kube-apiserver can connect to securely (with the "kubernetes.io/kubelet-serving" signerName).\n\nThis API can be used to request client certificates to authenticate to kube-apiserver (with the "kubernetes.io/kube-apiserver-client" signerName), or to obtain certificates from custom non-Kubernetes signers.'
            type = 'object'
            required = ['spec']
            x_kubernetes_group_version_kind = [{'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequest', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequestSpec, 'descr': 'spec contains the certificate request, and is immutable after creation. Only the request, signerName, expirationSeconds, and usages fields can be set on creation. Other fields are derived by Kubernetes and cannot be modified by users.'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequestStatus, 'descr': 'status contains information about whether the request is approved or denied, and the certificate issued by the signer, or the failure condition indicating signer failure.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequestSpec
        R.status = lambda: Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequestStatus
    class definitions_io_k8s_api_certificates_v1_CertificateSigningRequestCondition:
        """#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequestCondition"""
        class R:
            description = 'CertificateSigningRequestCondition describes a condition of a CertificateSigningRequest object'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['lastTransitionTime', 'lastUpdateTime', 'message', 'reason', 'status', 'type']
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': "lastTransitionTime is the time the condition last transitioned from one status to another. If unset, when a new condition type is added or an existing condition's status is changed, the server defaults this to the current time."}
            lastUpdateTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'lastUpdateTime is the time of the last update to this condition'}
            message = {'type': 'string', 'descr': 'message contains a human readable message with details about the request state'}
            reason = {'type': 'string', 'descr': 'reason indicates a brief reason for the request state'}
            status = {'type': 'string', 'descr': 'status of the condition, one of True, False, Unknown. Approved, Denied, and Failed conditions may not be "False" or "Unknown".'}
            type = {'type': 'string', 'descr': 'type of the condition. Known conditions are "Approved", "Denied", and "Failed".\n\nAn "Approved" condition is added via the /approval subresource, indicating the request was approved and should be issued by the signer.\n\nA "Denied" condition is added via the /approval subresource, indicating the request was denied and should not be issued by the signer.\n\nA "Failed" condition is added via the /status subresource, indicating the signer failed to issue the certificate.\n\nApproved and Denied conditions are mutually exclusive. Approved, Denied, and Failed conditions cannot be removed once added.\n\nOnly one condition of a given type is allowed.\n\n'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.lastUpdateTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_certificates_v1_CertificateSigningRequestList:
        """#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequestList"""
        class R:
            description = 'CertificateSigningRequestList is a collection of CertificateSigningRequest objects'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequestList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest, 'descr': 'items is a collection of CertificateSigningRequest objects'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_certificates_v1_CertificateSigningRequestSpec:
        """#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequestSpec"""
        class R:
            description = 'CertificateSigningRequestSpec contains the certificate request.'
            type = 'object'
            required = ['request', 'signerName']
            _attrs = ['expirationSeconds', 'extra', 'groups', 'request', 'signerName', 'uid', 'usages', 'username']
            expirationSeconds = {'type': 'integer', 'format': 'int32', 'descr': 'expirationSeconds is the requested duration of validity of the issued certificate. The certificate signer may issue a certificate with a different validity duration so a client must check the delta between the notBefore and and notAfter fields in the issued certificate to determine the actual duration.\n\nThe v1.22+ in-tree implementations of the well-known Kubernetes signers will honor this field as long as the requested duration is not greater than the maximum duration they will honor per the --cluster-signing-duration CLI flag to the Kubernetes controller manager.\n\nCertificate signers may not honor this field for various reasons:\n\n  1. Old signer that is unaware of the field (such as the in-tree\n     implementations prior to v1.22)\n  2. Signer whose configured maximum is shorter than the requested duration\n  3. Signer whose configured minimum is longer than the requested duration\n\nThe minimum valid value for expirationSeconds is 600, i.e. 10 minutes.\n\nAs of v1.22, this field is beta a...'}
            extra = {'type': 'object', 'additionalProperties': {'type': 'array', 'items': {'type': 'string'}}, 'descr': 'extra contains extra attributes of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.'}
            groups = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'atomic', 'descr': 'groups contains group membership of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.'}
            request = {'type': 'string', 'format': 'byte', 'x-kubernetes-list-type': 'atomic', 'descr': 'request contains an x509 certificate signing request encoded in a "CERTIFICATE REQUEST" PEM block. When serialized as JSON or YAML, the data is additionally base64-encoded.'}
            signerName = {'type': 'string', 'descr': 'signerName indicates the requested signer, and is a qualified name.\n\nList/watch requests for CertificateSigningRequests can filter on this field using a "spec.signerName=NAME" fieldSelector.\n\nWell-known Kubernetes signers are:\n 1. "kubernetes.io/kube-apiserver-client": issues client certificates that can be used to authenticate to kube-apiserver.\n  Requests for this signer are never auto-approved by kube-controller-manager, can be issued by the "csrsigning" controller in kube-controller-manager.\n 2. "kubernetes.io/kube-apiserver-client-kubelet": issues client certificates that kubelets use to authenticate to kube-apiserver.\n  Requests for this signer can be auto-approved by the "csrapproving" controller in kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.\n 3. "kubernetes.io/kubelet-serving" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.\n  Requests for this signer are...'}
            uid = {'type': 'string', 'descr': 'uid contains the uid of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.'}
            usages = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'atomic', 'descr': 'usages specifies a set of key usages requested in the issued certificate.\n\nRequests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".\n\nRequests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".\n\nValid values are:\n "signing", "digital signature", "content commitment",\n "key encipherment", "key agreement", "data encipherment",\n "cert sign", "crl sign", "encipher only", "decipher only", "any",\n "server auth", "client auth",\n "code signing", "email protection", "s/mime",\n "ipsec end system", "ipsec tunnel", "ipsec user",\n "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"'}
            username = {'type': 'string', 'descr': 'username contains the name of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.'}
        R.expirationSeconds = 0
        R.extra = {}
        R.groups = [str_dflt]
        R.request = str_dflt
        R.signerName = str_dflt
        R.uid = str_dflt
        R.usages = [str_dflt]
        R.username = str_dflt
    class definitions_io_k8s_api_certificates_v1_CertificateSigningRequestStatus:
        """#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequestStatus"""
        class R:
            description = 'CertificateSigningRequestStatus contains conditions used to indicate approved/denied/failed status of the request, and the issued certificate.'
            type = 'object'
            _attrs = ['certificate', 'conditions']
            certificate = {'type': 'string', 'format': 'byte', 'x-kubernetes-list-type': 'atomic', 'descr': 'certificate is populated with an issued certificate by the signer after an Approved condition is present. This field is set via the /status subresource. Once populated, this field is immutable.\n\nIf the certificate signing request is denied, a condition of type "Denied" is added and this field remains empty. If the signer cannot issue the certificate, a condition of type "Failed" is added and this field remains empty.\n\nValidation requirements:\n 1. certificate must contain one or more PEM blocks.\n 2. All PEM blocks must have the "CERTIFICATE" label, contain no headers, and the encoded data\n  must be a BER-encoded ASN.1 Certificate structure as described in section 4 of RFC5280.\n 3. Non-PEM content may appear before or after the "CERTIFICATE" PEM blocks and is unvalidated,\n  to allow for explanatory text as described in section 5.2 of RFC7468.\n\nIf more than one PEM block is present, and the definition of the requested spec.signerName does not indicate otherwise, the first block is the iss...'}
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequestCondition, 'x-kubernetes-list-map-keys': ['type'], 'x-kubernetes-list-type': 'map', 'descr': 'conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".'}
        R.certificate = str_dflt
        R.conditions = [lambda: Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequestCondition]
    class definitions_io_k8s_api_coordination_v1_Lease:
        """#/definitions/io.k8s.api.coordination.v1.Lease"""
        class R:
            description = 'Lease defines a lease concept.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'coordination.k8s.io', 'kind': 'Lease', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_coordination_v1_LeaseSpec, 'descr': 'Specification of the Lease. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_coordination_v1_LeaseSpec
    class definitions_io_k8s_api_coordination_v1_LeaseList:
        """#/definitions/io.k8s.api.coordination.v1.LeaseList"""
        class R:
            description = 'LeaseList is a list of Lease objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'coordination.k8s.io', 'kind': 'LeaseList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_coordination_v1_Lease, 'descr': 'Items is a list of schema objects.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_coordination_v1_Lease]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_coordination_v1_LeaseSpec:
        """#/definitions/io.k8s.api.coordination.v1.LeaseSpec"""
        class R:
            description = 'LeaseSpec is a specification of a Lease.'
            type = 'object'
            _attrs = ['acquireTime', 'holderIdentity', 'leaseDurationSeconds', 'leaseTransitions', 'renewTime']
            acquireTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime, 'descr': 'acquireTime is a time when the current lease was acquired.'}
            holderIdentity = {'type': 'string', 'descr': 'holderIdentity contains the identity of the holder of a current lease.'}
            leaseDurationSeconds = {'type': 'integer', 'format': 'int32', 'descr': 'leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measure against time of last observed RenewTime.'}
            leaseTransitions = {'type': 'integer', 'format': 'int32', 'descr': 'leaseTransitions is the number of transitions of a lease between holders.'}
            renewTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime, 'descr': 'renewTime is a time when the current holder of a lease has last updated the lease.'}
        R.acquireTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime
        R.holderIdentity = str_dflt
        R.leaseDurationSeconds = 0
        R.leaseTransitions = 0
        R.renewTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime
    class definitions_io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSource:
        """#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"""
        class R:
            description = 'Represents a Persistent Disk resource in AWS.\n\nAn AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.'
            type = 'object'
            required = ['volumeID']
            _attrs = ['fsType', 'partition', 'readOnly', 'volumeID']
            fsType = {'type': 'string', 'descr': 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'}
            partition = {'type': 'integer', 'format': 'int32', 'descr': 'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).'}
            readOnly = {'type': 'boolean', 'descr': 'Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'}
            volumeID = {'type': 'string', 'descr': 'Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'}
        R.fsType = str_dflt
        R.partition = 0
        R.readOnly = True
        R.volumeID = str_dflt
    class definitions_io_k8s_api_core_v1_Affinity:
        """#/definitions/io.k8s.api.core.v1.Affinity"""
        class R:
            description = 'Affinity is a group of affinity scheduling rules.'
            type = 'object'
            _attrs = ['nodeAffinity', 'podAffinity', 'podAntiAffinity']
            nodeAffinity = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NodeAffinity, 'descr': 'Describes node affinity scheduling rules for the pod.'}
            podAffinity = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PodAffinity, 'descr': 'Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).'}
            podAntiAffinity = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PodAntiAffinity, 'descr': 'Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).'}
        R.nodeAffinity = lambda: Defs.definitions_io_k8s_api_core_v1_NodeAffinity
        R.podAffinity = lambda: Defs.definitions_io_k8s_api_core_v1_PodAffinity
        R.podAntiAffinity = lambda: Defs.definitions_io_k8s_api_core_v1_PodAntiAffinity
    class definitions_io_k8s_api_core_v1_AttachedVolume:
        """#/definitions/io.k8s.api.core.v1.AttachedVolume"""
        class R:
            description = 'AttachedVolume describes a volume attached to a node'
            type = 'object'
            required = ['name', 'devicePath']
            _attrs = ['devicePath', 'name']
            devicePath = {'type': 'string', 'descr': 'DevicePath represents the device path where the volume should be available'}
            name = {'type': 'string', 'descr': 'Name of the attached volume'}
        R.devicePath = str_dflt
        R.name = name
    class definitions_io_k8s_api_core_v1_AzureDiskVolumeSource:
        """#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource"""
        class R:
            description = 'AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.'
            type = 'object'
            required = ['diskName', 'diskURI']
            _attrs = ['cachingMode', 'diskName', 'diskURI', 'fsType', 'kind', 'readOnly']
            cachingMode = {'type': 'string', 'descr': 'Host Caching mode: None, Read Only, Read Write.'}
            diskName = {'type': 'string', 'descr': 'The Name of the data disk in the blob storage'}
            diskURI = {'type': 'string', 'descr': 'The URI the data disk in the blob storage'}
            fsType = {'type': 'string', 'descr': 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.'}
            kind = {'type': 'string', 'descr': 'Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared'}
            readOnly = {'type': 'boolean', 'descr': 'Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'}
        R.cachingMode = str_dflt
        R.diskName = str_dflt
        R.diskURI = str_dflt
        R.fsType = str_dflt
        R.kind = str_dflt
        R.readOnly = True
    class definitions_io_k8s_api_core_v1_AzureFilePersistentVolumeSource:
        """#/definitions/io.k8s.api.core.v1.AzureFilePersistentVolumeSource"""
        class R:
            description = 'AzureFile represents an Azure File Service mount on the host and bind mount to the pod.'
            type = 'object'
            required = ['secretName', 'shareName']
            _attrs = ['readOnly', 'secretName', 'secretNamespace', 'shareName']
            readOnly = {'type': 'boolean', 'descr': 'Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'}
            secretName = {'type': 'string', 'descr': 'the name of secret that contains Azure Storage Account Name and Key'}
            secretNamespace = {'type': 'string', 'descr': 'the namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod'}
            shareName = {'type': 'string', 'descr': 'Share Name'}
        R.readOnly = True
        R.secretName = str_dflt
        R.secretNamespace = str_dflt
        R.shareName = str_dflt
    class definitions_io_k8s_api_core_v1_AzureFileVolumeSource:
        """#/definitions/io.k8s.api.core.v1.AzureFileVolumeSource"""
        class R:
            description = 'AzureFile represents an Azure File Service mount on the host and bind mount to the pod.'
            type = 'object'
            required = ['secretName', 'shareName']
            _attrs = ['readOnly', 'secretName', 'shareName']
            readOnly = {'type': 'boolean', 'descr': 'Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'}
            secretName = {'type': 'string', 'descr': 'the name of secret that contains Azure Storage Account Name and Key'}
            shareName = {'type': 'string', 'descr': 'Share Name'}
        R.readOnly = True
        R.secretName = str_dflt
        R.shareName = str_dflt
    class definitions_io_k8s_api_core_v1_Binding:
        """#/definitions/io.k8s.api.core.v1.Binding"""
        class R:
            description = 'Binding ties one object to another; for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead.'
            type = 'object'
            required = ['target']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'Binding', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'target']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            target = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference, 'descr': 'The target object that you want to bind to the standard object.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.target = lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference
    class definitions_io_k8s_api_core_v1_CSIPersistentVolumeSource:
        """#/definitions/io.k8s.api.core.v1.CSIPersistentVolumeSource"""
        class R:
            description = 'Represents storage that is managed by an external CSI volume driver (Beta feature)'
            type = 'object'
            required = ['driver', 'volumeHandle']
            _attrs = ['controllerExpandSecretRef', 'controllerPublishSecretRef', 'driver', 'fsType', 'nodePublishSecretRef', 'nodeStageSecretRef', 'readOnly', 'volumeAttributes', 'volumeHandle']
            controllerExpandSecretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference, 'descr': 'ControllerExpandSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI ControllerExpandVolume call. This is an alpha field and requires enabling ExpandCSIVolumes feature gate. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.'}
            controllerPublishSecretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference, 'descr': 'ControllerPublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI ControllerPublishVolume and ControllerUnpublishVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.'}
            driver = {'type': 'string', 'descr': 'Driver is the name of the driver to use for this volume. Required.'}
            fsType = {'type': 'string', 'descr': 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs".'}
            nodePublishSecretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference, 'descr': 'NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.'}
            nodeStageSecretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference, 'descr': 'NodeStageSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodeStageVolume and NodeStageVolume and NodeUnstageVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.'}
            readOnly = {'type': 'boolean', 'descr': 'Optional: The value to pass to ControllerPublishVolumeRequest. Defaults to false (read/write).'}
            volumeAttributes = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'descr': 'Attributes of the volume to publish.'}
            volumeHandle = {'type': 'string', 'descr': 'VolumeHandle is the unique volume name returned by the CSI volume plugin’s CreateVolume to refer to the volume on all subsequent calls. Required.'}
        R.controllerExpandSecretRef = lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference
        R.controllerPublishSecretRef = lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference
        R.driver = str_dflt
        R.fsType = str_dflt
        R.nodePublishSecretRef = lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference
        R.nodeStageSecretRef = lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference
        R.readOnly = True
        R.volumeAttributes = {}
        R.volumeHandle = str_dflt
    class definitions_io_k8s_api_core_v1_CSIVolumeSource:
        """#/definitions/io.k8s.api.core.v1.CSIVolumeSource"""
        class R:
            description = 'Represents a source location of a volume to mount, managed by an external CSI driver'
            type = 'object'
            required = ['driver']
            _attrs = ['driver', 'fsType', 'nodePublishSecretRef', 'readOnly', 'volumeAttributes']
            driver = {'type': 'string', 'descr': 'Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.'}
            fsType = {'type': 'string', 'descr': 'Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.'}
            nodePublishSecretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference, 'descr': 'NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.'}
            readOnly = {'type': 'boolean', 'descr': 'Specifies a read-only configuration for the volume. Defaults to false (read/write).'}
            volumeAttributes = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'descr': "VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values."}
        R.driver = str_dflt
        R.fsType = str_dflt
        R.nodePublishSecretRef = lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference
        R.readOnly = True
        R.volumeAttributes = {}
    class definitions_io_k8s_api_core_v1_Capabilities:
        """#/definitions/io.k8s.api.core.v1.Capabilities"""
        class R:
            description = 'Adds and removes POSIX capabilities from running containers.'
            type = 'object'
            _attrs = ['add', 'drop']
            add = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Added capabilities'}
            drop = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Removed capabilities'}
        R.add = [str_dflt]
        R.drop = [str_dflt]
    class definitions_io_k8s_api_core_v1_CephFSPersistentVolumeSource:
        """#/definitions/io.k8s.api.core.v1.CephFSPersistentVolumeSource"""
        class R:
            description = 'Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.'
            type = 'object'
            required = ['monitors']
            _attrs = ['monitors', 'path', 'readOnly', 'secretFile', 'secretRef', 'user']
            monitors = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'}
            path = {'type': 'string', 'descr': 'Optional: Used as the mounted root, rather than the full Ceph tree, default is /'}
            readOnly = {'type': 'boolean', 'descr': 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'}
            secretFile = {'type': 'string', 'descr': 'Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'}
            secretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference, 'descr': 'Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'}
            user = {'type': 'string', 'descr': 'Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'}
        R.monitors = [str_dflt]
        R.path = path
        R.readOnly = True
        R.secretFile = str_dflt
        R.secretRef = lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference
        R.user = str_dflt
    class definitions_io_k8s_api_core_v1_CephFSVolumeSource:
        """#/definitions/io.k8s.api.core.v1.CephFSVolumeSource"""
        class R:
            description = 'Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.'
            type = 'object'
            required = ['monitors']
            _attrs = ['monitors', 'path', 'readOnly', 'secretFile', 'secretRef', 'user']
            monitors = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'}
            path = {'type': 'string', 'descr': 'Optional: Used as the mounted root, rather than the full Ceph tree, default is /'}
            readOnly = {'type': 'boolean', 'descr': 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'}
            secretFile = {'type': 'string', 'descr': 'Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'}
            secretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference, 'descr': 'Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'}
            user = {'type': 'string', 'descr': 'Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'}
        R.monitors = [str_dflt]
        R.path = path
        R.readOnly = True
        R.secretFile = str_dflt
        R.secretRef = lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference
        R.user = str_dflt
    class definitions_io_k8s_api_core_v1_CinderPersistentVolumeSource:
        """#/definitions/io.k8s.api.core.v1.CinderPersistentVolumeSource"""
        class R:
            description = 'Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.'
            type = 'object'
            required = ['volumeID']
            _attrs = ['fsType', 'readOnly', 'secretRef', 'volumeID']
            fsType = {'type': 'string', 'descr': 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'}
            readOnly = {'type': 'boolean', 'descr': 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'}
            secretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference, 'descr': 'Optional: points to a secret object containing parameters used to connect to OpenStack.'}
            volumeID = {'type': 'string', 'descr': 'volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'}
        R.fsType = str_dflt
        R.readOnly = True
        R.secretRef = lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference
        R.volumeID = str_dflt
    class definitions_io_k8s_api_core_v1_CinderVolumeSource:
        """#/definitions/io.k8s.api.core.v1.CinderVolumeSource"""
        class R:
            description = 'Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.'
            type = 'object'
            required = ['volumeID']
            _attrs = ['fsType', 'readOnly', 'secretRef', 'volumeID']
            fsType = {'type': 'string', 'descr': 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'}
            readOnly = {'type': 'boolean', 'descr': 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'}
            secretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference, 'descr': 'Optional: points to a secret object containing parameters used to connect to OpenStack.'}
            volumeID = {'type': 'string', 'descr': 'volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'}
        R.fsType = str_dflt
        R.readOnly = True
        R.secretRef = lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference
        R.volumeID = str_dflt
    class definitions_io_k8s_api_core_v1_ClientIPConfig:
        """#/definitions/io.k8s.api.core.v1.ClientIPConfig"""
        class R:
            description = 'ClientIPConfig represents the configurations of Client IP based session affinity.'
            type = 'object'
            _attrs = ['timeoutSeconds']
            timeoutSeconds = {'type': 'integer', 'format': 'int32', 'descr': 'timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).'}
        R.timeoutSeconds = 0
    class definitions_io_k8s_api_core_v1_ComponentCondition:
        """#/definitions/io.k8s.api.core.v1.ComponentCondition"""
        class R:
            description = 'Information about the condition of a component.'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['error', 'message', 'status', 'type']
            error = {'type': 'string', 'descr': 'Condition error code for a component. For example, a health check error code.'}
            message = {'type': 'string', 'descr': 'Message about the condition for a component. For example, information about a health check.'}
            status = {'type': 'string', 'descr': 'Status of the condition for a component. Valid values for "Healthy": "True", "False", or "Unknown".'}
            type = {'type': 'string', 'descr': 'Type of condition for a component. Valid value: "Healthy"'}
        R.error = str_dflt
        R.message = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_core_v1_ComponentStatus:
        """#/definitions/io.k8s.api.core.v1.ComponentStatus"""
        class R:
            description = 'ComponentStatus (and ComponentStatusList) holds the cluster validation info. Deprecated: This API is deprecated in v1.19+'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'ComponentStatus', 'version': 'v1'}]
            _attrs = ['apiVersion', 'conditions', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ComponentCondition, 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'List of component conditions observed'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
        R.apiVersion = str_dflt
        R.conditions = [lambda: Defs.definitions_io_k8s_api_core_v1_ComponentCondition]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
    class definitions_io_k8s_api_core_v1_ComponentStatusList:
        """#/definitions/io.k8s.api.core.v1.ComponentStatusList"""
        class R:
            description = 'Status of all the conditions for the component as a list of ComponentStatus objects. Deprecated: This API is deprecated in v1.19+'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'ComponentStatusList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ComponentStatus, 'descr': 'List of ComponentStatus objects.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_ComponentStatus]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_core_v1_ConfigMap:
        """#/definitions/io.k8s.api.core.v1.ConfigMap"""
        class R:
            description = 'ConfigMap holds configuration data for pods to consume.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'ConfigMap', 'version': 'v1'}]
            _attrs = ['apiVersion', 'binaryData', 'data', 'immutable', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            binaryData = {'type': 'object', 'additionalProperties': {'type': 'string', 'format': 'byte'}, 'descr': "BinaryData contains the binary data. Each key must consist of alphanumeric characters, '-', '_' or '.'. BinaryData can contain byte sequences that are not in the UTF-8 range. The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process. Using this field will require 1.10+ apiserver and kubelet."}
            data = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'descr': "Data contains the configuration data. Each key must consist of alphanumeric characters, '-', '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData field. The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process."}
            immutable = {'type': 'boolean', 'descr': 'Immutable, if set to true, ensures that data stored in the ConfigMap cannot be updated (only object metadata can be modified). If not set to true, the field can be modified at any time. Defaulted to nil.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
        R.apiVersion = str_dflt
        R.binaryData = {}
        R.data = {}
        R.immutable = True
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
    class definitions_io_k8s_api_core_v1_ConfigMapEnvSource:
        """#/definitions/io.k8s.api.core.v1.ConfigMapEnvSource"""
        class R:
            description = 'ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.\n\nThe contents of the target ConfigMap"s Data field will represent the key-value pairs as environment variables.'
            type = 'object'
            _attrs = ['name', 'optional']
            name = {'type': 'string', 'descr': 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'}
            optional = {'type': 'boolean', 'descr': 'Specify whether the ConfigMap must be defined'}
        R.name = name
        R.optional = True
    class definitions_io_k8s_api_core_v1_ConfigMapKeySelector:
        """#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"""
        class R:
            description = 'Selects a key from a ConfigMap.'
            type = 'object'
            required = ['key']
            x_kubernetes_map_type = 'atomic'
            _attrs = ['key', 'name', 'optional']
            key = {'type': 'string', 'descr': 'The key to select.'}
            name = {'type': 'string', 'descr': 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'}
            optional = {'type': 'boolean', 'descr': 'Specify whether the ConfigMap or its key must be defined'}
        R.key = str_dflt
        R.name = name
        R.optional = True
    class definitions_io_k8s_api_core_v1_ConfigMapList:
        """#/definitions/io.k8s.api.core.v1.ConfigMapList"""
        class R:
            description = 'ConfigMapList is a resource containing a list of ConfigMap objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'ConfigMapList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ConfigMap, 'descr': 'Items is the list of ConfigMaps.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_ConfigMap]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_core_v1_ConfigMapNodeConfigSource:
        """#/definitions/io.k8s.api.core.v1.ConfigMapNodeConfigSource"""
        class R:
            description = 'ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node. This API is deprecated since 1.22: https://git.k8s.io/enhancements/keps/sig-node/281-dynamic-kubelet-configuration'
            type = 'object'
            required = ['namespace', 'name', 'kubeletConfigKey']
            _attrs = ['kubeletConfigKey', 'name', 'namespace', 'resourceVersion', 'uid']
            kubeletConfigKey = {'type': 'string', 'descr': 'KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.'}
            name = {'type': 'string', 'descr': 'Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.'}
            namespace = {'type': 'string', 'descr': 'Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.'}
            resourceVersion = {'type': 'string', 'descr': 'ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.'}
            uid = {'type': 'string', 'descr': 'UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.'}
        R.kubeletConfigKey = str_dflt
        R.name = name
        R.namespace = namespace
        R.resourceVersion = str_dflt
        R.uid = str_dflt
    class definitions_io_k8s_api_core_v1_ConfigMapProjection:
        """#/definitions/io.k8s.api.core.v1.ConfigMapProjection"""
        class R:
            description = 'Adapts a ConfigMap into a projected volume.\n\nThe contents of the target ConfigMap"s Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.'
            type = 'object'
            _attrs = ['items', 'name', 'optional']
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_KeyToPath, 'descr': "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."}
            name = {'type': 'string', 'descr': 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'}
            optional = {'type': 'boolean', 'descr': 'Specify whether the ConfigMap or its keys must be defined'}
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_KeyToPath]
        R.name = name
        R.optional = True
    class definitions_io_k8s_api_core_v1_ConfigMapVolumeSource:
        """#/definitions/io.k8s.api.core.v1.ConfigMapVolumeSource"""
        class R:
            description = 'Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap"s Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.'
            type = 'object'
            _attrs = ['defaultMode', 'items', 'name', 'optional']
            defaultMode = {'type': 'integer', 'format': 'int32', 'descr': 'Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_KeyToPath, 'descr': "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."}
            name = {'type': 'string', 'descr': 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'}
            optional = {'type': 'boolean', 'descr': 'Specify whether the ConfigMap or its keys must be defined'}
        R.defaultMode = 0
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_KeyToPath]
        R.name = name
        R.optional = True
    class definitions_io_k8s_api_core_v1_Container:
        """#/definitions/io.k8s.api.core.v1.Container"""
        class R:
            description = 'A single application container that you want to run within a pod.'
            type = 'object'
            required = ['name']
            _attrs = ['args', 'command', 'env', 'envFrom', 'image', 'imagePullPolicy', 'lifecycle', 'livenessProbe', 'name', 'ports', 'readinessProbe', 'resources', 'securityContext', 'startupProbe', 'stdin', 'stdinOnce', 'terminationMessagePath', 'terminationMessagePolicy', 'tty', 'volumeDevices', 'volumeMounts', 'workingDir']
            args = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Arguments to the entrypoint. The docker image\'s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container\'s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'}
            command = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Entrypoint array. Not executed within a shell. The docker image\'s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container\'s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'}
            env = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_EnvVar, 'x-kubernetes-patch-merge-key': 'name', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'List of environment variables to set in the container. Cannot be updated.'}
            envFrom = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_EnvFromSource, 'descr': 'List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.'}
            image = {'type': 'string', 'descr': 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.'}
            imagePullPolicy = {'type': 'string', 'descr': 'Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n\n'}
            lifecycle = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_Lifecycle, 'descr': 'Actions that the management system should take in response to container lifecycle events. Cannot be updated.'}
            livenessProbe = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_Probe, 'descr': 'Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
            name = {'type': 'string', 'descr': 'Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.'}
            ports = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ContainerPort, 'x-kubernetes-list-map-keys': ['containerPort', 'protocol'], 'x-kubernetes-list-type': 'map', 'x-kubernetes-patch-merge-key': 'containerPort', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.'}
            readinessProbe = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_Probe, 'descr': 'Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
            resources = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ResourceRequirements, 'descr': 'Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'}
            securityContext = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SecurityContext, 'descr': 'SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'}
            startupProbe = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_Probe, 'descr': "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"}
            stdin = {'type': 'boolean', 'descr': 'Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.'}
            stdinOnce = {'type': 'boolean', 'descr': 'Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false'}
            terminationMessagePath = {'type': 'string', 'descr': "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated."}
            terminationMessagePolicy = {'type': 'string', 'descr': 'Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.\n\n'}
            tty = {'type': 'boolean', 'descr': "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false."}
            volumeDevices = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_VolumeDevice, 'x-kubernetes-patch-merge-key': 'devicePath', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'volumeDevices is the list of block devices to be used by the container.'}
            volumeMounts = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_VolumeMount, 'x-kubernetes-patch-merge-key': 'mountPath', 'x-kubernetes-patch-strategy': 'merge', 'descr': "Pod volumes to mount into the container's filesystem. Cannot be updated."}
            workingDir = {'type': 'string', 'descr': "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."}
        R.args = [str_dflt]
        R.command = [str_dflt]
        R.env = [lambda: Defs.definitions_io_k8s_api_core_v1_EnvVar]
        R.envFrom = [lambda: Defs.definitions_io_k8s_api_core_v1_EnvFromSource]
        R.image = str_dflt
        R.imagePullPolicy = str_dflt
        R.lifecycle = lambda: Defs.definitions_io_k8s_api_core_v1_Lifecycle
        R.livenessProbe = lambda: Defs.definitions_io_k8s_api_core_v1_Probe
        R.name = name
        R.ports = [lambda: Defs.definitions_io_k8s_api_core_v1_ContainerPort]
        R.readinessProbe = lambda: Defs.definitions_io_k8s_api_core_v1_Probe
        R.resources = lambda: Defs.definitions_io_k8s_api_core_v1_ResourceRequirements
        R.securityContext = lambda: Defs.definitions_io_k8s_api_core_v1_SecurityContext
        R.startupProbe = lambda: Defs.definitions_io_k8s_api_core_v1_Probe
        R.stdin = True
        R.stdinOnce = True
        R.terminationMessagePath = str_dflt
        R.terminationMessagePolicy = str_dflt
        R.tty = True
        R.volumeDevices = [lambda: Defs.definitions_io_k8s_api_core_v1_VolumeDevice]
        R.volumeMounts = [lambda: Defs.definitions_io_k8s_api_core_v1_VolumeMount]
        R.workingDir = str_dflt
    class definitions_io_k8s_api_core_v1_ContainerImage:
        """#/definitions/io.k8s.api.core.v1.ContainerImage"""
        class R:
            description = 'Describe a container image'
            type = 'object'
            _attrs = ['names', 'sizeBytes']
            names = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Names by which this image is known. e.g. ["k8s.gcr.io/hyperkube:v1.0.7", "dockerhub.io/google_containers/hyperkube:v1.0.7"]'}
            sizeBytes = {'type': 'integer', 'format': 'int64', 'descr': 'The size of the image in bytes.'}
        R.names = [str_dflt]
        R.sizeBytes = 0
    class definitions_io_k8s_api_core_v1_ContainerPort:
        """#/definitions/io.k8s.api.core.v1.ContainerPort"""
        class R:
            description = 'ContainerPort represents a network port in a single container.'
            type = 'object'
            required = ['containerPort']
            _attrs = ['containerPort', 'hostIP', 'hostPort', 'name', 'protocol']
            containerPort = {'type': 'integer', 'format': 'int32', 'descr': "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536."}
            hostIP = {'type': 'string', 'descr': 'What host IP to bind the external port to.'}
            hostPort = {'type': 'integer', 'format': 'int32', 'descr': 'Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.'}
            name = {'type': 'string', 'descr': 'If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.'}
            protocol = {'type': 'string', 'descr': 'Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".\n\n'}
        R.containerPort = 0
        R.hostIP = str_dflt
        R.hostPort = 0
        R.name = name
        R.protocol = str_dflt
    class definitions_io_k8s_api_core_v1_ContainerState:
        """#/definitions/io.k8s.api.core.v1.ContainerState"""
        class R:
            description = 'ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.'
            type = 'object'
            _attrs = ['running', 'terminated', 'waiting']
            running = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ContainerStateRunning, 'descr': 'Details about a running container'}
            terminated = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ContainerStateTerminated, 'descr': 'Details about a terminated container'}
            waiting = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ContainerStateWaiting, 'descr': 'Details about a waiting container'}
        R.running = lambda: Defs.definitions_io_k8s_api_core_v1_ContainerStateRunning
        R.terminated = lambda: Defs.definitions_io_k8s_api_core_v1_ContainerStateTerminated
        R.waiting = lambda: Defs.definitions_io_k8s_api_core_v1_ContainerStateWaiting
    class definitions_io_k8s_api_core_v1_ContainerStateRunning:
        """#/definitions/io.k8s.api.core.v1.ContainerStateRunning"""
        class R:
            description = 'ContainerStateRunning is a running state of a container.'
            type = 'object'
            _attrs = ['startedAt']
            startedAt = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Time at which the container was last (re-)started'}
        R.startedAt = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
    class definitions_io_k8s_api_core_v1_ContainerStateTerminated:
        """#/definitions/io.k8s.api.core.v1.ContainerStateTerminated"""
        class R:
            description = 'ContainerStateTerminated is a terminated state of a container.'
            type = 'object'
            required = ['exitCode']
            _attrs = ['containerID', 'exitCode', 'finishedAt', 'message', 'reason', 'signal', 'startedAt']
            containerID = {'type': 'string', 'descr': "Container's ID in the format 'docker://<container_id>'"}
            exitCode = {'type': 'integer', 'format': 'int32', 'descr': 'Exit status from the last termination of the container'}
            finishedAt = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Time at which the container last terminated'}
            message = {'type': 'string', 'descr': 'Message regarding the last termination of the container'}
            reason = {'type': 'string', 'descr': '(brief) reason from the last termination of the container'}
            signal = {'type': 'integer', 'format': 'int32', 'descr': 'Signal from the last termination of the container'}
            startedAt = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Time at which previous execution of the container started'}
        R.containerID = str_dflt
        R.exitCode = 0
        R.finishedAt = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.signal = 0
        R.startedAt = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
    class definitions_io_k8s_api_core_v1_ContainerStateWaiting:
        """#/definitions/io.k8s.api.core.v1.ContainerStateWaiting"""
        class R:
            description = 'ContainerStateWaiting is a waiting state of a container.'
            type = 'object'
            _attrs = ['message', 'reason']
            message = {'type': 'string', 'descr': 'Message regarding why the container is not yet running.'}
            reason = {'type': 'string', 'descr': '(brief) reason the container is not yet running.'}
        R.message = str_dflt
        R.reason = str_dflt
    class definitions_io_k8s_api_core_v1_ContainerStatus:
        """#/definitions/io.k8s.api.core.v1.ContainerStatus"""
        class R:
            description = 'ContainerStatus contains details for the current status of this container.'
            type = 'object'
            required = ['name', 'ready', 'restartCount', 'image', 'imageID']
            _attrs = ['containerID', 'image', 'imageID', 'lastState', 'name', 'ready', 'restartCount', 'started', 'state']
            containerID = {'type': 'string', 'descr': "Container's ID in the format 'docker://<container_id>'."}
            image = {'type': 'string', 'descr': 'The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images.'}
            imageID = {'type': 'string', 'descr': "ImageID of the container's image."}
            lastState = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ContainerState, 'descr': "Details about the container's last termination condition."}
            name = {'type': 'string', 'descr': 'This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.'}
            ready = {'type': 'boolean', 'descr': 'Specifies whether the container has passed its readiness probe.'}
            restartCount = {'type': 'integer', 'format': 'int32', 'descr': 'The number of times the container has been restarted.'}
            started = {'type': 'boolean', 'descr': 'Specifies whether the container has passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. Is always true when no startupProbe is defined.'}
            state = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ContainerState, 'descr': "Details about the container's current condition."}
        R.containerID = str_dflt
        R.image = str_dflt
        R.imageID = str_dflt
        R.lastState = lambda: Defs.definitions_io_k8s_api_core_v1_ContainerState
        R.name = name
        R.ready = True
        R.restartCount = 0
        R.started = True
        R.state = lambda: Defs.definitions_io_k8s_api_core_v1_ContainerState
    class definitions_io_k8s_api_core_v1_DaemonEndpoint:
        """#/definitions/io.k8s.api.core.v1.DaemonEndpoint"""
        class R:
            description = 'DaemonEndpoint contains information about a single Daemon endpoint.'
            type = 'object'
            required = ['Port']
            _attrs = ['Port']
            Port = {'type': 'integer', 'format': 'int32', 'descr': 'Port number of the given endpoint.'}
        R.Port = 0
    class definitions_io_k8s_api_core_v1_DownwardAPIProjection:
        """#/definitions/io.k8s.api.core.v1.DownwardAPIProjection"""
        class R:
            description = 'Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.'
            type = 'object'
            _attrs = ['items']
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_DownwardAPIVolumeFile, 'descr': 'Items is a list of DownwardAPIVolume file'}
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_DownwardAPIVolumeFile]
    class definitions_io_k8s_api_core_v1_DownwardAPIVolumeFile:
        """#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile"""
        class R:
            description = 'DownwardAPIVolumeFile represents information to create the file containing the pod field'
            type = 'object'
            required = ['path']
            _attrs = ['fieldRef', 'mode', 'path', 'resourceFieldRef']
            fieldRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectFieldSelector, 'descr': 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'}
            mode = {'type': 'integer', 'format': 'int32', 'descr': 'Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'}
            path = {'type': 'string', 'descr': "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"}
            resourceFieldRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ResourceFieldSelector, 'descr': 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'}
        R.fieldRef = lambda: Defs.definitions_io_k8s_api_core_v1_ObjectFieldSelector
        R.mode = 0
        R.path = path
        R.resourceFieldRef = lambda: Defs.definitions_io_k8s_api_core_v1_ResourceFieldSelector
    class definitions_io_k8s_api_core_v1_DownwardAPIVolumeSource:
        """#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeSource"""
        class R:
            description = 'DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.'
            type = 'object'
            _attrs = ['defaultMode', 'items']
            defaultMode = {'type': 'integer', 'format': 'int32', 'descr': 'Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_DownwardAPIVolumeFile, 'descr': 'Items is a list of downward API volume file'}
        R.defaultMode = 0
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_DownwardAPIVolumeFile]
    class definitions_io_k8s_api_core_v1_EmptyDirVolumeSource:
        """#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"""
        class R:
            description = 'Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.'
            type = 'object'
            _attrs = ['medium', 'sizeLimit']
            medium = {'type': 'string', 'descr': 'What type of storage medium should back this directory. The default is "" which means to use the node\'s default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'}
            sizeLimit = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'}
        R.medium = str_dflt
        R.sizeLimit = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
    class definitions_io_k8s_api_core_v1_EndpointAddress:
        """#/definitions/io.k8s.api.core.v1.EndpointAddress"""
        class R:
            description = 'EndpointAddress is a tuple that describes single IP address.'
            type = 'object'
            required = ['ip']
            x_kubernetes_map_type = 'atomic'
            _attrs = ['hostname', 'ip', 'nodeName', 'targetRef']
            hostname = {'type': 'string', 'descr': 'The Hostname of this endpoint'}
            ip = {'type': 'string', 'descr': 'The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready.'}
            nodeName = {'type': 'string', 'descr': 'Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node.'}
            targetRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference, 'descr': 'Reference to object providing the endpoint.'}
        R.hostname = str_dflt
        R.ip = str_dflt
        R.nodeName = str_dflt
        R.targetRef = lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference
    class definitions_io_k8s_api_core_v1_EndpointPort:
        """#/definitions/io.k8s.api.core.v1.EndpointPort"""
        class R:
            description = 'EndpointPort is a tuple that describes a single port.'
            type = 'object'
            required = ['port']
            x_kubernetes_map_type = 'atomic'
            _attrs = ['appProtocol', 'name', 'port', 'protocol']
            appProtocol = {'type': 'string', 'descr': 'The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.'}
            name = {'type': 'string', 'descr': "The name of this port.  This must match the 'name' field in the corresponding ServicePort. Must be a DNS_LABEL. Optional only if one port is defined."}
            port = {'type': 'integer', 'format': 'int32', 'descr': 'The port number of the endpoint.'}
            protocol = {'type': 'string', 'descr': 'The IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.\n\n'}
        R.appProtocol = str_dflt
        R.name = name
        R.port = 0
        R.protocol = str_dflt
    class definitions_io_k8s_api_core_v1_EndpointSubset:
        """#/definitions/io.k8s.api.core.v1.EndpointSubset"""
        class R:
            description = 'EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:\n  {\n    Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],\n    Ports:     [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]\n  }\nThe resulting set of endpoints can be viewed as:\n    a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],\n    b: [ 10.10.1.1:309, 10.10.2.2:309 ]'
            type = 'object'
            _attrs = ['addresses', 'notReadyAddresses', 'ports']
            addresses = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_EndpointAddress, 'descr': 'IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize.'}
            notReadyAddresses = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_EndpointAddress, 'descr': 'IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.'}
            ports = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_EndpointPort, 'descr': 'Port numbers available on the related IP addresses.'}
        R.addresses = [lambda: Defs.definitions_io_k8s_api_core_v1_EndpointAddress]
        R.notReadyAddresses = [lambda: Defs.definitions_io_k8s_api_core_v1_EndpointAddress]
        R.ports = [lambda: Defs.definitions_io_k8s_api_core_v1_EndpointPort]
    class definitions_io_k8s_api_core_v1_Endpoints:
        """#/definitions/io.k8s.api.core.v1.Endpoints"""
        class R:
            description = 'Endpoints is a collection of endpoints that implement the actual service. Example:\n  Name: "mysvc",\n  Subsets: [\n    {\n      Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],\n      Ports: [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]\n    },\n    {\n      Addresses: [{"ip": "10.10.3.3"}],\n      Ports: [{"name": "a", "port": 93}, {"name": "b", "port": 76}]\n    },\n ]'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'Endpoints', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'subsets']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            subsets = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_EndpointSubset, 'descr': 'The set of all endpoints is the union of all subsets. Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses and ports that comprise a service.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.subsets = [lambda: Defs.definitions_io_k8s_api_core_v1_EndpointSubset]
    class definitions_io_k8s_api_core_v1_EndpointsList:
        """#/definitions/io.k8s.api.core.v1.EndpointsList"""
        class R:
            description = 'EndpointsList is a list of endpoints.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'EndpointsList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_Endpoints, 'descr': 'List of endpoints.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_Endpoints]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_core_v1_EnvFromSource:
        """#/definitions/io.k8s.api.core.v1.EnvFromSource"""
        class R:
            description = 'EnvFromSource represents the source of a set of ConfigMaps'
            type = 'object'
            _attrs = ['configMapRef', 'prefix', 'secretRef']
            configMapRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ConfigMapEnvSource, 'descr': 'The ConfigMap to select from'}
            prefix = {'type': 'string', 'descr': 'An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.'}
            secretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SecretEnvSource, 'descr': 'The Secret to select from'}
        R.configMapRef = lambda: Defs.definitions_io_k8s_api_core_v1_ConfigMapEnvSource
        R.prefix = str_dflt
        R.secretRef = lambda: Defs.definitions_io_k8s_api_core_v1_SecretEnvSource
    class definitions_io_k8s_api_core_v1_EnvVar:
        """#/definitions/io.k8s.api.core.v1.EnvVar"""
        class R:
            description = 'EnvVar represents an environment variable present in a Container.'
            type = 'object'
            required = ['name']
            _attrs = ['name', 'value', 'valueFrom']
            name = {'type': 'string', 'descr': 'Name of the environment variable. Must be a C_IDENTIFIER.'}
            value = {'type': 'string', 'descr': 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'}
            valueFrom = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_EnvVarSource, 'descr': "Source for the environment variable's value. Cannot be used if value is not empty."}
        R.name = name
        R.value = str_dflt
        R.valueFrom = lambda: Defs.definitions_io_k8s_api_core_v1_EnvVarSource
    class definitions_io_k8s_api_core_v1_EnvVarSource:
        """#/definitions/io.k8s.api.core.v1.EnvVarSource"""
        class R:
            description = 'EnvVarSource represents a source for the value of an EnvVar.'
            type = 'object'
            _attrs = ['configMapKeyRef', 'fieldRef', 'resourceFieldRef', 'secretKeyRef']
            configMapKeyRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ConfigMapKeySelector, 'descr': 'Selects a key of a ConfigMap.'}
            fieldRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectFieldSelector, 'descr': "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."}
            resourceFieldRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ResourceFieldSelector, 'descr': 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'}
            secretKeyRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SecretKeySelector, 'descr': "Selects a key of a secret in the pod's namespace"}
        R.configMapKeyRef = lambda: Defs.definitions_io_k8s_api_core_v1_ConfigMapKeySelector
        R.fieldRef = lambda: Defs.definitions_io_k8s_api_core_v1_ObjectFieldSelector
        R.resourceFieldRef = lambda: Defs.definitions_io_k8s_api_core_v1_ResourceFieldSelector
        R.secretKeyRef = lambda: Defs.definitions_io_k8s_api_core_v1_SecretKeySelector
    class definitions_io_k8s_api_core_v1_EphemeralContainer:
        """#/definitions/io.k8s.api.core.v1.EphemeralContainer"""
        class R:
            description = 'An EphemeralContainer is a temporary container that you may add to an existing Pod for user-initiated activities such as debugging. Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a Pod is removed or restarted. The kubelet may evict a Pod if an ephemeral container causes the Pod to exceed its resource allocation.\n\nTo add an ephemeral container, use the ephemeralcontainers subresource of an existing Pod. Ephemeral containers may not be removed or restarted.\n\nThis is a beta feature available on clusters that haven"t disabled the EphemeralContainers feature gate.'
            type = 'object'
            required = ['name']
            _attrs = ['args', 'command', 'env', 'envFrom', 'image', 'imagePullPolicy', 'lifecycle', 'livenessProbe', 'name', 'ports', 'readinessProbe', 'resources', 'securityContext', 'startupProbe', 'stdin', 'stdinOnce', 'targetContainerName', 'terminationMessagePath', 'terminationMessagePolicy', 'tty', 'volumeDevices', 'volumeMounts', 'workingDir']
            args = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Arguments to the entrypoint. The docker image\'s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container\'s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'}
            command = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Entrypoint array. Not executed within a shell. The docker image\'s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container\'s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'}
            env = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_EnvVar, 'x-kubernetes-patch-merge-key': 'name', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'List of environment variables to set in the container. Cannot be updated.'}
            envFrom = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_EnvFromSource, 'descr': 'List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.'}
            image = {'type': 'string', 'descr': 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images'}
            imagePullPolicy = {'type': 'string', 'descr': 'Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n\n'}
            lifecycle = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_Lifecycle, 'descr': 'Lifecycle is not allowed for ephemeral containers.'}
            livenessProbe = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_Probe, 'descr': 'Probes are not allowed for ephemeral containers.'}
            name = {'type': 'string', 'descr': 'Name of the ephemeral container specified as a DNS_LABEL. This name must be unique among all containers, init containers and ephemeral containers.'}
            ports = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ContainerPort, 'x-kubernetes-list-map-keys': ['containerPort', 'protocol'], 'x-kubernetes-list-type': 'map', 'x-kubernetes-patch-merge-key': 'containerPort', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'Ports are not allowed for ephemeral containers.'}
            readinessProbe = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_Probe, 'descr': 'Probes are not allowed for ephemeral containers.'}
            resources = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ResourceRequirements, 'descr': 'Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources already allocated to the pod.'}
            securityContext = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SecurityContext, 'descr': 'Optional: SecurityContext defines the security options the ephemeral container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.'}
            startupProbe = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_Probe, 'descr': 'Probes are not allowed for ephemeral containers.'}
            stdin = {'type': 'boolean', 'descr': 'Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.'}
            stdinOnce = {'type': 'boolean', 'descr': 'Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false'}
            targetContainerName = {'type': 'string', 'descr': 'If set, the name of the container from PodSpec that this ephemeral container targets. The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container. If not set then the ephemeral container uses the namespaces configured in the Pod spec.\n\nThe container runtime must implement support for this feature. If the runtime does not support namespace targeting then the result of setting this field is undefined.'}
            terminationMessagePath = {'type': 'string', 'descr': "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated."}
            terminationMessagePolicy = {'type': 'string', 'descr': 'Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.\n\n'}
            tty = {'type': 'boolean', 'descr': "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false."}
            volumeDevices = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_VolumeDevice, 'x-kubernetes-patch-merge-key': 'devicePath', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'volumeDevices is the list of block devices to be used by the container.'}
            volumeMounts = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_VolumeMount, 'x-kubernetes-patch-merge-key': 'mountPath', 'x-kubernetes-patch-strategy': 'merge', 'descr': "Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers. Cannot be updated."}
            workingDir = {'type': 'string', 'descr': "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."}
        R.args = [str_dflt]
        R.command = [str_dflt]
        R.env = [lambda: Defs.definitions_io_k8s_api_core_v1_EnvVar]
        R.envFrom = [lambda: Defs.definitions_io_k8s_api_core_v1_EnvFromSource]
        R.image = str_dflt
        R.imagePullPolicy = str_dflt
        R.lifecycle = lambda: Defs.definitions_io_k8s_api_core_v1_Lifecycle
        R.livenessProbe = lambda: Defs.definitions_io_k8s_api_core_v1_Probe
        R.name = name
        R.ports = [lambda: Defs.definitions_io_k8s_api_core_v1_ContainerPort]
        R.readinessProbe = lambda: Defs.definitions_io_k8s_api_core_v1_Probe
        R.resources = lambda: Defs.definitions_io_k8s_api_core_v1_ResourceRequirements
        R.securityContext = lambda: Defs.definitions_io_k8s_api_core_v1_SecurityContext
        R.startupProbe = lambda: Defs.definitions_io_k8s_api_core_v1_Probe
        R.stdin = True
        R.stdinOnce = True
        R.targetContainerName = str_dflt
        R.terminationMessagePath = str_dflt
        R.terminationMessagePolicy = str_dflt
        R.tty = True
        R.volumeDevices = [lambda: Defs.definitions_io_k8s_api_core_v1_VolumeDevice]
        R.volumeMounts = [lambda: Defs.definitions_io_k8s_api_core_v1_VolumeMount]
        R.workingDir = str_dflt
    class definitions_io_k8s_api_core_v1_EphemeralVolumeSource:
        """#/definitions/io.k8s.api.core.v1.EphemeralVolumeSource"""
        class R:
            description = 'Represents an ephemeral volume that is handled by a normal storage driver.'
            type = 'object'
            _attrs = ['volumeClaimTemplate']
            volumeClaimTemplate = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaimTemplate, 'descr': 'Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.\n\n...'}
        R.volumeClaimTemplate = lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaimTemplate
    class definitions_io_k8s_api_core_v1_Event:
        """#/definitions/io.k8s.api.core.v1.Event"""
        class R:
            description = 'Event is a report of an event somewhere in the cluster.  Events have a limited retention time and triggers and messages may evolve with time.  Event consumers should not rely on the timing of an event with a given Reason reflecting a consistent underlying trigger, or the continued existence of events with that Reason.  Events should be treated as informative, best-effort, supplemental data.'
            type = 'object'
            required = ['metadata', 'involvedObject']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'Event', 'version': 'v1'}]
            _attrs = ['action', 'apiVersion', 'count', 'eventTime', 'firstTimestamp', 'involvedObject', 'kind', 'lastTimestamp', 'message', 'metadata', 'reason', 'related', 'reportingComponent', 'reportingInstance', 'series', 'source', 'type']
            action = {'type': 'string', 'descr': 'What action was taken/failed regarding to the Regarding object.'}
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            count = {'type': 'integer', 'format': 'int32', 'descr': 'The number of times this event has occurred.'}
            eventTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime, 'descr': 'Time when this Event was first observed.'}
            firstTimestamp = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)'}
            involvedObject = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference, 'descr': 'The object that this event is about.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            lastTimestamp = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'The time at which the most recent occurrence of this event was recorded.'}
            message = {'type': 'string', 'descr': 'A human-readable description of the status of this operation.'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            reason = {'type': 'string', 'descr': "This should be a short, machine understandable string that gives the reason for the transition into the object's current status."}
            related = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference, 'descr': 'Optional secondary object for more complex actions.'}
            reportingComponent = {'type': 'string', 'descr': 'Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.'}
            reportingInstance = {'type': 'string', 'descr': 'ID of the controller instance, e.g. `kubelet-xyzf`.'}
            series = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_EventSeries, 'descr': "Data about the Event series this event represents or nil if it's a singleton Event."}
            source = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_EventSource, 'descr': 'The component reporting this event. Should be a short machine understandable string.'}
            type = {'type': 'string', 'descr': 'Type of this event (Normal, Warning), new types could be added in the future'}
        R.action = str_dflt
        R.apiVersion = str_dflt
        R.count = 0
        R.eventTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime
        R.firstTimestamp = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.involvedObject = lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference
        R.kind = str_dflt
        R.lastTimestamp = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.reason = str_dflt
        R.related = lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference
        R.reportingComponent = str_dflt
        R.reportingInstance = str_dflt
        R.series = lambda: Defs.definitions_io_k8s_api_core_v1_EventSeries
        R.source = lambda: Defs.definitions_io_k8s_api_core_v1_EventSource
        R.type = str_dflt
    class definitions_io_k8s_api_core_v1_EventList:
        """#/definitions/io.k8s.api.core.v1.EventList"""
        class R:
            description = 'EventList is a list of events.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'EventList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_Event, 'descr': 'List of events'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_Event]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_core_v1_EventSeries:
        """#/definitions/io.k8s.api.core.v1.EventSeries"""
        class R:
            description = 'EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.'
            type = 'object'
            _attrs = ['count', 'lastObservedTime']
            count = {'type': 'integer', 'format': 'int32', 'descr': 'Number of occurrences in this series up to the last heartbeat time'}
            lastObservedTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime, 'descr': 'Time of the last occurrence observed'}
        R.count = 0
        R.lastObservedTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime
    class definitions_io_k8s_api_core_v1_EventSource:
        """#/definitions/io.k8s.api.core.v1.EventSource"""
        class R:
            description = 'EventSource contains information for an event.'
            type = 'object'
            _attrs = ['component', 'host']
            component = {'type': 'string', 'descr': 'Component from which the event is generated.'}
            host = {'type': 'string', 'descr': 'Node name on which the event is generated.'}
        R.component = str_dflt
        R.host = str_dflt
    class definitions_io_k8s_api_core_v1_ExecAction:
        """#/definitions/io.k8s.api.core.v1.ExecAction"""
        class R:
            description = 'ExecAction describes a "run in container" action.'
            type = 'object'
            _attrs = ['command']
            command = {'type': 'array', 'items': {'type': 'string'}, 'descr': "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."}
        R.command = [str_dflt]
    class definitions_io_k8s_api_core_v1_FCVolumeSource:
        """#/definitions/io.k8s.api.core.v1.FCVolumeSource"""
        class R:
            description = 'Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.'
            type = 'object'
            _attrs = ['fsType', 'lun', 'readOnly', 'targetWWNs', 'wwids']
            fsType = {'type': 'string', 'descr': 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.'}
            lun = {'type': 'integer', 'format': 'int32', 'descr': 'Optional: FC target lun number'}
            readOnly = {'type': 'boolean', 'descr': 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'}
            targetWWNs = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Optional: FC target worldwide names (WWNs)'}
            wwids = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.'}
        R.fsType = str_dflt
        R.lun = 0
        R.readOnly = True
        R.targetWWNs = [str_dflt]
        R.wwids = [str_dflt]
    class definitions_io_k8s_api_core_v1_FlexPersistentVolumeSource:
        """#/definitions/io.k8s.api.core.v1.FlexPersistentVolumeSource"""
        class R:
            description = 'FlexPersistentVolumeSource represents a generic persistent volume resource that is provisioned/attached using an exec based plugin.'
            type = 'object'
            required = ['driver']
            _attrs = ['driver', 'fsType', 'options', 'readOnly', 'secretRef']
            driver = {'type': 'string', 'descr': 'Driver is the name of the driver to use for this volume.'}
            fsType = {'type': 'string', 'descr': 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.'}
            options = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'descr': 'Optional: Extra command options if any.'}
            readOnly = {'type': 'boolean', 'descr': 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'}
            secretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference, 'descr': 'Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.'}
        R.driver = str_dflt
        R.fsType = str_dflt
        R.options = {}
        R.readOnly = True
        R.secretRef = lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference
    class definitions_io_k8s_api_core_v1_FlexVolumeSource:
        """#/definitions/io.k8s.api.core.v1.FlexVolumeSource"""
        class R:
            description = 'FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.'
            type = 'object'
            required = ['driver']
            _attrs = ['driver', 'fsType', 'options', 'readOnly', 'secretRef']
            driver = {'type': 'string', 'descr': 'Driver is the name of the driver to use for this volume.'}
            fsType = {'type': 'string', 'descr': 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.'}
            options = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'descr': 'Optional: Extra command options if any.'}
            readOnly = {'type': 'boolean', 'descr': 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'}
            secretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference, 'descr': 'Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.'}
        R.driver = str_dflt
        R.fsType = str_dflt
        R.options = {}
        R.readOnly = True
        R.secretRef = lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference
    class definitions_io_k8s_api_core_v1_FlockerVolumeSource:
        """#/definitions/io.k8s.api.core.v1.FlockerVolumeSource"""
        class R:
            description = 'Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.'
            type = 'object'
            _attrs = ['datasetName', 'datasetUUID']
            datasetName = {'type': 'string', 'descr': 'Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated'}
            datasetUUID = {'type': 'string', 'descr': 'UUID of the dataset. This is unique identifier of a Flocker dataset'}
        R.datasetName = str_dflt
        R.datasetUUID = str_dflt
    class definitions_io_k8s_api_core_v1_GCEPersistentDiskVolumeSource:
        """#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"""
        class R:
            description = 'Represents a Persistent Disk resource in Google Compute Engine.\n\nA GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.'
            type = 'object'
            required = ['pdName']
            _attrs = ['fsType', 'partition', 'pdName', 'readOnly']
            fsType = {'type': 'string', 'descr': 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'}
            partition = {'type': 'integer', 'format': 'int32', 'descr': 'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'}
            pdName = {'type': 'string', 'descr': 'Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'}
            readOnly = {'type': 'boolean', 'descr': 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'}
        R.fsType = str_dflt
        R.partition = 0
        R.pdName = str_dflt
        R.readOnly = True
    class definitions_io_k8s_api_core_v1_GRPCAction:
        """#/definitions/io.k8s.api.core.v1.GRPCAction"""
        class R:
            type = 'object'
            required = ['port']
            _attrs = ['port', 'service']
            port = {'type': 'integer', 'format': 'int32', 'descr': 'Port number of the gRPC service. Number must be in the range 1 to 65535.'}
            service = {'type': 'string', 'descr': 'Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.'}
        R.port = 0
        R.service = str_dflt
    class definitions_io_k8s_api_core_v1_GitRepoVolumeSource:
        """#/definitions/io.k8s.api.core.v1.GitRepoVolumeSource"""
        class R:
            description = 'Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.\n\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod"s container.'
            type = 'object'
            required = ['repository']
            _attrs = ['directory', 'repository', 'revision']
            directory = {'type': 'string', 'descr': "Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name."}
            repository = {'type': 'string', 'descr': 'Repository URL'}
            revision = {'type': 'string', 'descr': 'Commit hash for the specified revision.'}
        R.directory = str_dflt
        R.repository = str_dflt
        R.revision = str_dflt
    class definitions_io_k8s_api_core_v1_GlusterfsPersistentVolumeSource:
        """#/definitions/io.k8s.api.core.v1.GlusterfsPersistentVolumeSource"""
        class R:
            description = 'Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.'
            type = 'object'
            required = ['endpoints', 'path']
            _attrs = ['endpoints', 'endpointsNamespace', 'path', 'readOnly']
            endpoints = {'type': 'string', 'descr': 'EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'}
            endpointsNamespace = {'type': 'string', 'descr': 'EndpointsNamespace is the namespace that contains Glusterfs endpoint. If this field is empty, the EndpointNamespace defaults to the same namespace as the bound PVC. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'}
            path = {'type': 'string', 'descr': 'Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'}
            readOnly = {'type': 'boolean', 'descr': 'ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'}
        R.endpoints = str_dflt
        R.endpointsNamespace = str_dflt
        R.path = path
        R.readOnly = True
    class definitions_io_k8s_api_core_v1_GlusterfsVolumeSource:
        """#/definitions/io.k8s.api.core.v1.GlusterfsVolumeSource"""
        class R:
            description = 'Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.'
            type = 'object'
            required = ['endpoints', 'path']
            _attrs = ['endpoints', 'path', 'readOnly']
            endpoints = {'type': 'string', 'descr': 'EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'}
            path = {'type': 'string', 'descr': 'Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'}
            readOnly = {'type': 'boolean', 'descr': 'ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'}
        R.endpoints = str_dflt
        R.path = path
        R.readOnly = True
    class definitions_io_k8s_api_core_v1_HTTPGetAction:
        """#/definitions/io.k8s.api.core.v1.HTTPGetAction"""
        class R:
            description = 'HTTPGetAction describes an action based on HTTP Get requests.'
            type = 'object'
            required = ['port']
            _attrs = ['host', 'httpHeaders', 'path', 'port', 'scheme']
            host = {'type': 'string', 'descr': 'Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.'}
            httpHeaders = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_HTTPHeader, 'descr': 'Custom headers to set in the request. HTTP allows repeated headers.'}
            path = {'type': 'string', 'descr': 'Path to access on the HTTP server.'}
            port = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString, 'descr': 'Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.'}
            scheme = {'type': 'string', 'descr': 'Scheme to use for connecting to the host. Defaults to HTTP.\n\n'}
        R.host = str_dflt
        R.httpHeaders = [lambda: Defs.definitions_io_k8s_api_core_v1_HTTPHeader]
        R.path = path
        R.port = lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString
        R.scheme = str_dflt
    class definitions_io_k8s_api_core_v1_HTTPHeader:
        """#/definitions/io.k8s.api.core.v1.HTTPHeader"""
        class R:
            description = 'HTTPHeader describes a custom header to be used in HTTP probes'
            type = 'object'
            required = ['name', 'value']
            _attrs = ['name', 'value']
            name = {'type': 'string', 'descr': 'The header field name'}
            value = {'type': 'string', 'descr': 'The header field value'}
        R.name = name
        R.value = str_dflt
    class definitions_io_k8s_api_core_v1_HostAlias:
        """#/definitions/io.k8s.api.core.v1.HostAlias"""
        class R:
            description = 'HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod"s hosts file.'
            type = 'object'
            _attrs = ['hostnames', 'ip']
            hostnames = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Hostnames for the above IP address.'}
            ip = {'type': 'string', 'descr': 'IP address of the host file entry.'}
        R.hostnames = [str_dflt]
        R.ip = str_dflt
    class definitions_io_k8s_api_core_v1_HostPathVolumeSource:
        """#/definitions/io.k8s.api.core.v1.HostPathVolumeSource"""
        class R:
            description = 'Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.'
            type = 'object'
            required = ['path']
            _attrs = ['path', 'type']
            path = {'type': 'string', 'descr': 'Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'}
            type = {'type': 'string', 'descr': 'Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'}
        R.path = path
        R.type = str_dflt
    class definitions_io_k8s_api_core_v1_ISCSIPersistentVolumeSource:
        """#/definitions/io.k8s.api.core.v1.ISCSIPersistentVolumeSource"""
        class R:
            description = 'ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.'
            type = 'object'
            required = ['targetPortal', 'iqn', 'lun']
            _attrs = ['chapAuthDiscovery', 'chapAuthSession', 'fsType', 'initiatorName', 'iqn', 'iscsiInterface', 'lun', 'portals', 'readOnly', 'secretRef', 'targetPortal']
            chapAuthDiscovery = {'type': 'boolean', 'descr': 'whether support iSCSI Discovery CHAP authentication'}
            chapAuthSession = {'type': 'boolean', 'descr': 'whether support iSCSI Session CHAP authentication'}
            fsType = {'type': 'string', 'descr': 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi'}
            initiatorName = {'type': 'string', 'descr': 'Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.'}
            iqn = {'type': 'string', 'descr': 'Target iSCSI Qualified Name.'}
            iscsiInterface = {'type': 'string', 'descr': "iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp)."}
            lun = {'type': 'integer', 'format': 'int32', 'descr': 'iSCSI Target Lun number.'}
            portals = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'iSCSI Target Portal List. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).'}
            readOnly = {'type': 'boolean', 'descr': 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.'}
            secretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference, 'descr': 'CHAP Secret for iSCSI target and initiator authentication'}
            targetPortal = {'type': 'string', 'descr': 'iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).'}
        R.chapAuthDiscovery = True
        R.chapAuthSession = True
        R.fsType = str_dflt
        R.initiatorName = str_dflt
        R.iqn = str_dflt
        R.iscsiInterface = str_dflt
        R.lun = 0
        R.portals = [str_dflt]
        R.readOnly = True
        R.secretRef = lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference
        R.targetPortal = str_dflt
    class definitions_io_k8s_api_core_v1_ISCSIVolumeSource:
        """#/definitions/io.k8s.api.core.v1.ISCSIVolumeSource"""
        class R:
            description = 'Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.'
            type = 'object'
            required = ['targetPortal', 'iqn', 'lun']
            _attrs = ['chapAuthDiscovery', 'chapAuthSession', 'fsType', 'initiatorName', 'iqn', 'iscsiInterface', 'lun', 'portals', 'readOnly', 'secretRef', 'targetPortal']
            chapAuthDiscovery = {'type': 'boolean', 'descr': 'whether support iSCSI Discovery CHAP authentication'}
            chapAuthSession = {'type': 'boolean', 'descr': 'whether support iSCSI Session CHAP authentication'}
            fsType = {'type': 'string', 'descr': 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi'}
            initiatorName = {'type': 'string', 'descr': 'Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.'}
            iqn = {'type': 'string', 'descr': 'Target iSCSI Qualified Name.'}
            iscsiInterface = {'type': 'string', 'descr': "iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp)."}
            lun = {'type': 'integer', 'format': 'int32', 'descr': 'iSCSI Target Lun number.'}
            portals = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).'}
            readOnly = {'type': 'boolean', 'descr': 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.'}
            secretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference, 'descr': 'CHAP Secret for iSCSI target and initiator authentication'}
            targetPortal = {'type': 'string', 'descr': 'iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).'}
        R.chapAuthDiscovery = True
        R.chapAuthSession = True
        R.fsType = str_dflt
        R.initiatorName = str_dflt
        R.iqn = str_dflt
        R.iscsiInterface = str_dflt
        R.lun = 0
        R.portals = [str_dflt]
        R.readOnly = True
        R.secretRef = lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference
        R.targetPortal = str_dflt
    class definitions_io_k8s_api_core_v1_KeyToPath:
        """#/definitions/io.k8s.api.core.v1.KeyToPath"""
        class R:
            description = 'Maps a string key to a path within a volume.'
            type = 'object'
            required = ['key', 'path']
            _attrs = ['key', 'mode', 'path']
            key = {'type': 'string', 'descr': 'The key to project.'}
            mode = {'type': 'integer', 'format': 'int32', 'descr': 'Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'}
            path = {'type': 'string', 'descr': "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."}
        R.key = str_dflt
        R.mode = 0
        R.path = path
    class definitions_io_k8s_api_core_v1_Lifecycle:
        """#/definitions/io.k8s.api.core.v1.Lifecycle"""
        class R:
            description = 'Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.'
            type = 'object'
            _attrs = ['postStart', 'preStop']
            postStart = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_LifecycleHandler, 'descr': 'PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'}
            preStop = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_LifecycleHandler, 'descr': "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"}
        R.postStart = lambda: Defs.definitions_io_k8s_api_core_v1_LifecycleHandler
        R.preStop = lambda: Defs.definitions_io_k8s_api_core_v1_LifecycleHandler
    class definitions_io_k8s_api_core_v1_LifecycleHandler:
        """#/definitions/io.k8s.api.core.v1.LifecycleHandler"""
        class R:
            description = 'LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.'
            type = 'object'
            _attrs = ['exec', 'httpGet', 'tcpSocket']
            exec = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ExecAction, 'descr': 'Exec specifies the action to take.'}
            httpGet = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_HTTPGetAction, 'descr': 'HTTPGet specifies the http request to perform.'}
            tcpSocket = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_TCPSocketAction, 'descr': 'Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.'}
        R.exec = lambda: Defs.definitions_io_k8s_api_core_v1_ExecAction
        R.httpGet = lambda: Defs.definitions_io_k8s_api_core_v1_HTTPGetAction
        R.tcpSocket = lambda: Defs.definitions_io_k8s_api_core_v1_TCPSocketAction
    class definitions_io_k8s_api_core_v1_LimitRange:
        """#/definitions/io.k8s.api.core.v1.LimitRange"""
        class R:
            description = 'LimitRange sets resource usage limits for each kind of resource in a Namespace.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'LimitRange', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_LimitRangeSpec, 'descr': 'Spec defines the limits enforced. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_core_v1_LimitRangeSpec
    class definitions_io_k8s_api_core_v1_LimitRangeItem:
        """#/definitions/io.k8s.api.core.v1.LimitRangeItem"""
        class R:
            description = 'LimitRangeItem defines a min/max usage limit for any resource that matches on kind.'
            type = 'object'
            required = ['type']
            _attrs = ['default', 'defaultRequest', 'max', 'maxLimitRequestRatio', 'min', 'type']
            default = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'Default resource requirement limit value by resource name if resource limit is omitted.'}
            defaultRequest = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.'}
            max = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'Max usage constraints on this kind by resource name.'}
            maxLimitRequestRatio = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.'}
            min = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'Min usage constraints on this kind by resource name.'}
            type = {'type': 'string', 'descr': 'Type of resource that this limit applies to.\n\n'}
        R.default = {}
        R.defaultRequest = {}
        R.max = {}
        R.maxLimitRequestRatio = {}
        R.min = {}
        R.type = str_dflt
    class definitions_io_k8s_api_core_v1_LimitRangeList:
        """#/definitions/io.k8s.api.core.v1.LimitRangeList"""
        class R:
            description = 'LimitRangeList is a list of LimitRange items.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'LimitRangeList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_LimitRange, 'descr': 'Items is a list of LimitRange objects. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_LimitRange]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_core_v1_LimitRangeSpec:
        """#/definitions/io.k8s.api.core.v1.LimitRangeSpec"""
        class R:
            description = 'LimitRangeSpec defines a min/max usage limit for resources that match on kind.'
            type = 'object'
            required = ['limits']
            _attrs = ['limits']
            limits = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_LimitRangeItem, 'descr': 'Limits is the list of LimitRangeItem objects that are enforced.'}
        R.limits = [lambda: Defs.definitions_io_k8s_api_core_v1_LimitRangeItem]
    class definitions_io_k8s_api_core_v1_LoadBalancerIngress:
        """#/definitions/io.k8s.api.core.v1.LoadBalancerIngress"""
        class R:
            description = 'LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.'
            type = 'object'
            _attrs = ['hostname', 'ip', 'ports']
            hostname = {'type': 'string', 'descr': 'Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)'}
            ip = {'type': 'string', 'descr': 'IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)'}
            ports = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_PortStatus, 'x-kubernetes-list-type': 'atomic', 'descr': 'Ports is a list of records of service ports If used, every port defined in the service should have an entry in it'}
        R.hostname = str_dflt
        R.ip = str_dflt
        R.ports = [lambda: Defs.definitions_io_k8s_api_core_v1_PortStatus]
    class definitions_io_k8s_api_core_v1_LoadBalancerStatus:
        """#/definitions/io.k8s.api.core.v1.LoadBalancerStatus"""
        class R:
            description = 'LoadBalancerStatus represents the status of a load-balancer.'
            type = 'object'
            _attrs = ['ingress']
            ingress = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_LoadBalancerIngress, 'descr': 'Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.'}
        R.ingress = [lambda: Defs.definitions_io_k8s_api_core_v1_LoadBalancerIngress]
    class definitions_io_k8s_api_core_v1_LocalObjectReference:
        """#/definitions/io.k8s.api.core.v1.LocalObjectReference"""
        class R:
            description = 'LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.'
            type = 'object'
            x_kubernetes_map_type = 'atomic'
            _attrs = ['name']
            name = {'type': 'string', 'descr': 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'}
        R.name = name
    class definitions_io_k8s_api_core_v1_LocalVolumeSource:
        """#/definitions/io.k8s.api.core.v1.LocalVolumeSource"""
        class R:
            description = 'Local represents directly-attached storage with node affinity (Beta feature)'
            type = 'object'
            required = ['path']
            _attrs = ['fsType', 'path']
            fsType = {'type': 'string', 'descr': 'Filesystem type to mount. It applies only when the Path is a block device. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default value is to auto-select a filesystem if unspecified.'}
            path = {'type': 'string', 'descr': 'The full path to the volume on the node. It can be either a directory or block device (disk, partition, ...).'}
        R.fsType = str_dflt
        R.path = path
    class definitions_io_k8s_api_core_v1_NFSVolumeSource:
        """#/definitions/io.k8s.api.core.v1.NFSVolumeSource"""
        class R:
            description = 'Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.'
            type = 'object'
            required = ['server', 'path']
            _attrs = ['path', 'readOnly', 'server']
            path = {'type': 'string', 'descr': 'Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'}
            readOnly = {'type': 'boolean', 'descr': 'ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'}
            server = {'type': 'string', 'descr': 'Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'}
        R.path = path
        R.readOnly = True
        R.server = str_dflt
    class definitions_io_k8s_api_core_v1_Namespace:
        """#/definitions/io.k8s.api.core.v1.Namespace"""
        class R:
            description = 'Namespace provides a scope for Names. Use of multiple namespaces is optional.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'Namespace', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NamespaceSpec, 'descr': 'Spec defines the behavior of the Namespace. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NamespaceStatus, 'descr': 'Status describes the current status of a Namespace. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_core_v1_NamespaceSpec
        R.status = lambda: Defs.definitions_io_k8s_api_core_v1_NamespaceStatus
    class definitions_io_k8s_api_core_v1_NamespaceCondition:
        """#/definitions/io.k8s.api.core.v1.NamespaceCondition"""
        class R:
            description = 'NamespaceCondition contains details about state of namespace.'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
            message = {'type': 'string'}
            reason = {'type': 'string'}
            status = {'type': 'string', 'descr': 'Status of the condition, one of True, False, Unknown.'}
            type = {'type': 'string', 'descr': 'Type of namespace controller condition.\n\n'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_core_v1_NamespaceList:
        """#/definitions/io.k8s.api.core.v1.NamespaceList"""
        class R:
            description = 'NamespaceList is a list of Namespaces.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'NamespaceList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_Namespace, 'descr': 'Items is the list of Namespace objects in the list. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_Namespace]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_core_v1_NamespaceSpec:
        """#/definitions/io.k8s.api.core.v1.NamespaceSpec"""
        class R:
            description = 'NamespaceSpec describes the attributes on a Namespace.'
            type = 'object'
            _attrs = ['finalizers']
            finalizers = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/'}
        R.finalizers = [str_dflt]
    class definitions_io_k8s_api_core_v1_NamespaceStatus:
        """#/definitions/io.k8s.api.core.v1.NamespaceStatus"""
        class R:
            description = 'NamespaceStatus is information about the current status of a Namespace.'
            type = 'object'
            _attrs = ['conditions', 'phase']
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_NamespaceCondition, 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': "Represents the latest available observations of a namespace's current state."}
            phase = {'type': 'string', 'descr': 'Phase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/\n\n'}
        R.conditions = [lambda: Defs.definitions_io_k8s_api_core_v1_NamespaceCondition]
        R.phase = str_dflt
    class definitions_io_k8s_api_core_v1_Node:
        """#/definitions/io.k8s.api.core.v1.Node"""
        class R:
            description = 'Node is a worker node in Kubernetes. Each node will have a unique identifier in the cache (i.e. in etcd).'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'Node', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NodeSpec, 'descr': 'Spec defines the behavior of a node. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NodeStatus, 'descr': 'Most recently observed status of the node. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_core_v1_NodeSpec
        R.status = lambda: Defs.definitions_io_k8s_api_core_v1_NodeStatus
    class definitions_io_k8s_api_core_v1_NodeAddress:
        """#/definitions/io.k8s.api.core.v1.NodeAddress"""
        class R:
            description = 'NodeAddress contains information for the node"s address.'
            type = 'object'
            required = ['type', 'address']
            _attrs = ['address', 'type']
            address = {'type': 'string', 'descr': 'The node address.'}
            type = {'type': 'string', 'descr': 'Node address type, one of Hostname, ExternalIP or InternalIP.\n\n'}
        R.address = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_core_v1_NodeAffinity:
        """#/definitions/io.k8s.api.core.v1.NodeAffinity"""
        class R:
            description = 'Node affinity is a group of node affinity scheduling rules.'
            type = 'object'
            _attrs = ['preferredDuringSchedulingIgnoredDuringExecution', 'requiredDuringSchedulingIgnoredDuringExecution']
            preferredDuringSchedulingIgnoredDuringExecution = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_PreferredSchedulingTerm, 'descr': 'The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.'}
            requiredDuringSchedulingIgnoredDuringExecution = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NodeSelector, 'descr': 'If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.'}
        R.preferredDuringSchedulingIgnoredDuringExecution = [lambda: Defs.definitions_io_k8s_api_core_v1_PreferredSchedulingTerm]
        R.requiredDuringSchedulingIgnoredDuringExecution = lambda: Defs.definitions_io_k8s_api_core_v1_NodeSelector
    class definitions_io_k8s_api_core_v1_NodeCondition:
        """#/definitions/io.k8s.api.core.v1.NodeCondition"""
        class R:
            description = 'NodeCondition contains condition information for a node.'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['lastHeartbeatTime', 'lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastHeartbeatTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Last time we got an update on a given condition.'}
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Last time the condition transit from one status to another.'}
            message = {'type': 'string', 'descr': 'Human readable message indicating details about last transition.'}
            reason = {'type': 'string', 'descr': "(brief) reason for the condition's last transition."}
            status = {'type': 'string', 'descr': 'Status of the condition, one of True, False, Unknown.'}
            type = {'type': 'string', 'descr': 'Type of node condition.\n\n'}
        R.lastHeartbeatTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_core_v1_NodeConfigSource:
        """#/definitions/io.k8s.api.core.v1.NodeConfigSource"""
        class R:
            description = 'NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil. This API is deprecated since 1.22'
            type = 'object'
            _attrs = ['configMap']
            configMap = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ConfigMapNodeConfigSource, 'descr': "ConfigMap is a reference to a Node's ConfigMap"}
        R.configMap = lambda: Defs.definitions_io_k8s_api_core_v1_ConfigMapNodeConfigSource
    class definitions_io_k8s_api_core_v1_NodeConfigStatus:
        """#/definitions/io.k8s.api.core.v1.NodeConfigStatus"""
        class R:
            description = 'NodeConfigStatus describes the status of the config assigned by Node.Spec.ConfigSource.'
            type = 'object'
            _attrs = ['active', 'assigned', 'error', 'lastKnownGood']
            active = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NodeConfigSource, 'descr': 'Active reports the checkpointed config the node is actively using. Active will represent either the current version of the Assigned config, or the current LastKnownGood config, depending on whether attempting to use the Assigned config results in an error.'}
            assigned = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NodeConfigSource, 'descr': 'Assigned reports the checkpointed config the node will try to use. When Node.Spec.ConfigSource is updated, the node checkpoints the associated config payload to local disk, along with a record indicating intended config. The node refers to this record to choose its config checkpoint, and reports this record in Assigned. Assigned only updates in the status after the record has been checkpointed to disk. When the Kubelet is restarted, it tries to make the Assigned config the Active config by loading and validating the checkpointed payload identified by Assigned.'}
            error = {'type': 'string', 'descr': 'Error describes any problems reconciling the Spec.ConfigSource to the Active config. Errors may occur, for example, attempting to checkpoint Spec.ConfigSource to the local Assigned record, attempting to checkpoint the payload associated with Spec.ConfigSource, attempting to load or validate the Assigned config, etc. Errors may occur at different points while syncing config. Earlier errors (e.g. download or checkpointing errors) will not result in a rollback to LastKnownGood, and may resolve across Kubelet retries. Later errors (e.g. loading or validating a checkpointed config) will result in a rollback to LastKnownGood. In the latter case, it is usually possible to resolve the error by fixing the config assigned in Spec.ConfigSource. You can find additional information for debugging by searching the error message in the Kubelet log. Error is a human-readable description of the error state; machines can check whether or not Error is empty, but should not rely on the stability of the Err...'}
            lastKnownGood = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NodeConfigSource, 'descr': "LastKnownGood reports the checkpointed config the node will fall back to when it encounters an error attempting to use the Assigned config. The Assigned config becomes the LastKnownGood config when the node determines that the Assigned config is stable and correct. This is currently implemented as a 10-minute soak period starting when the local record of Assigned config is updated. If the Assigned config is Active at the end of this period, it becomes the LastKnownGood. Note that if Spec.ConfigSource is reset to nil (use local defaults), the LastKnownGood is also immediately reset to nil, because the local default config is always assumed good. You should not make assumptions about the node's method of determining config stability and correctness, as this may change or become configurable in the future."}
        R.active = lambda: Defs.definitions_io_k8s_api_core_v1_NodeConfigSource
        R.assigned = lambda: Defs.definitions_io_k8s_api_core_v1_NodeConfigSource
        R.error = str_dflt
        R.lastKnownGood = lambda: Defs.definitions_io_k8s_api_core_v1_NodeConfigSource
    class definitions_io_k8s_api_core_v1_NodeDaemonEndpoints:
        """#/definitions/io.k8s.api.core.v1.NodeDaemonEndpoints"""
        class R:
            description = 'NodeDaemonEndpoints lists ports opened by daemons running on the Node.'
            type = 'object'
            _attrs = ['kubeletEndpoint']
            kubeletEndpoint = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_DaemonEndpoint, 'descr': 'Endpoint on which Kubelet is listening.'}
        R.kubeletEndpoint = lambda: Defs.definitions_io_k8s_api_core_v1_DaemonEndpoint
    class definitions_io_k8s_api_core_v1_NodeList:
        """#/definitions/io.k8s.api.core.v1.NodeList"""
        class R:
            description = 'NodeList is the whole list of all Nodes which have been registered with master.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'NodeList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_Node, 'descr': 'List of nodes'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_Node]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_core_v1_NodeSelector:
        """#/definitions/io.k8s.api.core.v1.NodeSelector"""
        class R:
            description = 'A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.'
            type = 'object'
            required = ['nodeSelectorTerms']
            x_kubernetes_map_type = 'atomic'
            _attrs = ['nodeSelectorTerms']
            nodeSelectorTerms = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_NodeSelectorTerm, 'descr': 'Required. A list of node selector terms. The terms are ORed.'}
        R.nodeSelectorTerms = [lambda: Defs.definitions_io_k8s_api_core_v1_NodeSelectorTerm]
    class definitions_io_k8s_api_core_v1_NodeSelectorRequirement:
        """#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"""
        class R:
            description = 'A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
            type = 'object'
            required = ['key', 'operator']
            _attrs = ['key', 'operator', 'values']
            key = {'type': 'string', 'descr': 'The label key that the selector applies to.'}
            operator = {'type': 'string', 'descr': "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n"}
            values = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.'}
        R.key = str_dflt
        R.operator = str_dflt
        R.values = [str_dflt]
    class definitions_io_k8s_api_core_v1_NodeSelectorTerm:
        """#/definitions/io.k8s.api.core.v1.NodeSelectorTerm"""
        class R:
            description = 'A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.'
            type = 'object'
            x_kubernetes_map_type = 'atomic'
            _attrs = ['matchExpressions', 'matchFields']
            matchExpressions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_NodeSelectorRequirement, 'descr': "A list of node selector requirements by node's labels."}
            matchFields = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_NodeSelectorRequirement, 'descr': "A list of node selector requirements by node's fields."}
        R.matchExpressions = [lambda: Defs.definitions_io_k8s_api_core_v1_NodeSelectorRequirement]
        R.matchFields = [lambda: Defs.definitions_io_k8s_api_core_v1_NodeSelectorRequirement]
    class definitions_io_k8s_api_core_v1_NodeSpec:
        """#/definitions/io.k8s.api.core.v1.NodeSpec"""
        class R:
            description = 'NodeSpec describes the attributes that a node is created with.'
            type = 'object'
            _attrs = ['configSource', 'externalID', 'podCIDR', 'podCIDRs', 'providerID', 'taints', 'unschedulable']
            configSource = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NodeConfigSource, 'descr': "Deprecated. If specified, the source of the node's configuration. The DynamicKubeletConfig feature gate must be enabled for the Kubelet to use this field. This field is deprecated as of 1.22: https://git.k8s.io/enhancements/keps/sig-node/281-dynamic-kubelet-configuration"}
            externalID = {'type': 'string', 'descr': 'Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966'}
            podCIDR = {'type': 'string', 'descr': 'PodCIDR represents the pod IP range assigned to the node.'}
            podCIDRs = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-patch-strategy': 'merge', 'descr': 'podCIDRs represents the IP ranges assigned to the node for usage by Pods on that node. If this field is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for each of IPv4 and IPv6.'}
            providerID = {'type': 'string', 'descr': 'ID of the node assigned by the cloud provider in the format: <ProviderName>://<ProviderSpecificNodeID>'}
            taints = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_Taint, 'descr': "If specified, the node's taints."}
            unschedulable = {'type': 'boolean', 'descr': 'Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration'}
        R.configSource = lambda: Defs.definitions_io_k8s_api_core_v1_NodeConfigSource
        R.externalID = str_dflt
        R.podCIDR = str_dflt
        R.podCIDRs = [str_dflt]
        R.providerID = str_dflt
        R.taints = [lambda: Defs.definitions_io_k8s_api_core_v1_Taint]
        R.unschedulable = True
    class definitions_io_k8s_api_core_v1_NodeStatus:
        """#/definitions/io.k8s.api.core.v1.NodeStatus"""
        class R:
            description = 'NodeStatus is information about the current status of a node.'
            type = 'object'
            _attrs = ['addresses', 'allocatable', 'capacity', 'conditions', 'config', 'daemonEndpoints', 'images', 'nodeInfo', 'phase', 'volumesAttached', 'volumesInUse']
            addresses = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_NodeAddress, 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'List of addresses reachable to the node. Queried from cloud provider, if available. More info: https://kubernetes.io/docs/concepts/nodes/node/#addresses Note: This field is declared as mergeable, but the merge key is not sufficiently unique, which can cause data corruption when it is merged. Callers should instead use a full-replacement patch. See http://pr.k8s.io/79391 for an example.'}
            allocatable = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'Allocatable represents the resources of a node that are available for scheduling. Defaults to Capacity.'}
            capacity = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'Capacity represents the total resources of a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity'}
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_NodeCondition, 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'Conditions is an array of current observed node conditions. More info: https://kubernetes.io/docs/concepts/nodes/node/#condition'}
            config = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NodeConfigStatus, 'descr': 'Status of the config assigned to the node via the dynamic Kubelet config feature.'}
            daemonEndpoints = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NodeDaemonEndpoints, 'descr': 'Endpoints of daemons running on the Node.'}
            images = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ContainerImage, 'descr': 'List of container images on this node'}
            nodeInfo = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NodeSystemInfo, 'descr': 'Set of ids/uuids to uniquely identify the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info'}
            phase = {'type': 'string', 'descr': 'NodePhase is the recently observed lifecycle phase of the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#phase The field is never populated, and now is deprecated.\n\n'}
            volumesAttached = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_AttachedVolume, 'descr': 'List of volumes that are attached to the node.'}
            volumesInUse = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'List of attachable volumes in use (mounted) by the node.'}
        R.addresses = [lambda: Defs.definitions_io_k8s_api_core_v1_NodeAddress]
        R.allocatable = {}
        R.capacity = {}
        R.conditions = [lambda: Defs.definitions_io_k8s_api_core_v1_NodeCondition]
        R.config = lambda: Defs.definitions_io_k8s_api_core_v1_NodeConfigStatus
        R.daemonEndpoints = lambda: Defs.definitions_io_k8s_api_core_v1_NodeDaemonEndpoints
        R.images = [lambda: Defs.definitions_io_k8s_api_core_v1_ContainerImage]
        R.nodeInfo = lambda: Defs.definitions_io_k8s_api_core_v1_NodeSystemInfo
        R.phase = str_dflt
        R.volumesAttached = [lambda: Defs.definitions_io_k8s_api_core_v1_AttachedVolume]
        R.volumesInUse = [str_dflt]
    class definitions_io_k8s_api_core_v1_NodeSystemInfo:
        """#/definitions/io.k8s.api.core.v1.NodeSystemInfo"""
        class R:
            description = 'NodeSystemInfo is a set of ids/uuids to uniquely identify the node.'
            type = 'object'
            required = ['machineID', 'systemUUID', 'bootID', 'kernelVersion', 'osImage', 'containerRuntimeVersion', 'kubeletVersion', 'kubeProxyVersion', 'operatingSystem', 'architecture']
            _attrs = ['architecture', 'bootID', 'containerRuntimeVersion', 'kernelVersion', 'kubeProxyVersion', 'kubeletVersion', 'machineID', 'operatingSystem', 'osImage', 'systemUUID']
            architecture = {'type': 'string', 'descr': 'The Architecture reported by the node'}
            bootID = {'type': 'string', 'descr': 'Boot ID reported by the node.'}
            containerRuntimeVersion = {'type': 'string', 'descr': 'ContainerRuntime Version reported by the node through runtime remote API (e.g. docker://1.5.0).'}
            kernelVersion = {'type': 'string', 'descr': "Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64)."}
            kubeProxyVersion = {'type': 'string', 'descr': 'KubeProxy Version reported by the node.'}
            kubeletVersion = {'type': 'string', 'descr': 'Kubelet Version reported by the node.'}
            machineID = {'type': 'string', 'descr': 'MachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html'}
            operatingSystem = {'type': 'string', 'descr': 'The Operating System reported by the node'}
            osImage = {'type': 'string', 'descr': 'OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).'}
            systemUUID = {'type': 'string', 'descr': 'SystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid'}
        R.architecture = str_dflt
        R.bootID = str_dflt
        R.containerRuntimeVersion = str_dflt
        R.kernelVersion = str_dflt
        R.kubeProxyVersion = str_dflt
        R.kubeletVersion = str_dflt
        R.machineID = str_dflt
        R.operatingSystem = str_dflt
        R.osImage = str_dflt
        R.systemUUID = str_dflt
    class definitions_io_k8s_api_core_v1_ObjectFieldSelector:
        """#/definitions/io.k8s.api.core.v1.ObjectFieldSelector"""
        class R:
            description = 'ObjectFieldSelector selects an APIVersioned field of an object.'
            type = 'object'
            required = ['fieldPath']
            x_kubernetes_map_type = 'atomic'
            _attrs = ['apiVersion', 'fieldPath']
            apiVersion = {'type': 'string', 'descr': 'Version of the schema the FieldPath is written in terms of, defaults to "v1".'}
            fieldPath = {'type': 'string', 'descr': 'Path of the field to select in the specified API version.'}
        R.apiVersion = str_dflt
        R.fieldPath = str_dflt
    class definitions_io_k8s_api_core_v1_ObjectReference:
        """#/definitions/io.k8s.api.core.v1.ObjectReference"""
        class R:
            description = 'ObjectReference contains enough information to let you inspect or modify the referred object.'
            type = 'object'
            x_kubernetes_map_type = 'atomic'
            _attrs = ['apiVersion', 'fieldPath', 'kind', 'name', 'namespace', 'resourceVersion', 'uid']
            apiVersion = {'type': 'string', 'descr': 'API version of the referent.'}
            fieldPath = {'type': 'string', 'descr': 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.'}
            kind = {'type': 'string', 'descr': 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            name = {'type': 'string', 'descr': 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'}
            namespace = {'type': 'string', 'descr': 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'}
            resourceVersion = {'type': 'string', 'descr': 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'}
            uid = {'type': 'string', 'descr': 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'}
        R.apiVersion = str_dflt
        R.fieldPath = str_dflt
        R.kind = str_dflt
        R.name = name
        R.namespace = namespace
        R.resourceVersion = str_dflt
        R.uid = str_dflt
    class definitions_io_k8s_api_core_v1_PersistentVolume:
        """#/definitions/io.k8s.api.core.v1.PersistentVolume"""
        class R:
            description = 'PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'PersistentVolume', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeSpec, 'descr': 'Spec defines a specification of a persistent volume owned by the cluster. Provisioned by an administrator. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeStatus, 'descr': 'Status represents the current information/status for the persistent volume. Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeSpec
        R.status = lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeStatus
    class definitions_io_k8s_api_core_v1_PersistentVolumeClaim:
        """#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"""
        class R:
            description = 'PersistentVolumeClaim is a user"s request for and claim to a persistent volume'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'PersistentVolumeClaim', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaimSpec, 'descr': 'Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaimStatus, 'descr': 'Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaimSpec
        R.status = lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaimStatus
    class definitions_io_k8s_api_core_v1_PersistentVolumeClaimCondition:
        """#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimCondition"""
        class R:
            description = 'PersistentVolumeClaimCondition contails details about state of pvc'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['lastProbeTime', 'lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastProbeTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Last time we probed the condition.'}
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Last time the condition transitioned from one status to another.'}
            message = {'type': 'string', 'descr': 'Human-readable message indicating details about last transition.'}
            reason = {'type': 'string', 'descr': 'Unique, this should be a short, machine understandable string that gives the reason for condition\'s last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.'}
            status = {'type': 'string'}
            type = {'type': 'string', 'descr': '\n\n\n'}
        R.lastProbeTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_core_v1_PersistentVolumeClaimList:
        """#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimList"""
        class R:
            description = 'PersistentVolumeClaimList is a list of PersistentVolumeClaim items.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'PersistentVolumeClaimList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim, 'descr': 'A list of persistent volume claims. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_core_v1_PersistentVolumeClaimSpec:
        """#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"""
        class R:
            description = 'PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes'
            type = 'object'
            _attrs = ['accessModes', 'dataSource', 'dataSourceRef', 'resources', 'selector', 'storageClassName', 'volumeMode', 'volumeName']
            accessModes = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'}
            dataSource = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_TypedLocalObjectReference, 'descr': 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.'}
            dataSourceRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_TypedLocalObjectReference, 'descr': 'Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While DataSource ignores disallowed values (dropping them), DataSourceRef\n  preserves all values,...'}
            resources = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ResourceRequirements, 'descr': 'Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'}
            selector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'A label query over volumes to consider for binding.'}
            storageClassName = {'type': 'string', 'descr': 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'}
            volumeMode = {'type': 'string', 'descr': 'volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.'}
            volumeName = {'type': 'string', 'descr': 'VolumeName is the binding reference to the PersistentVolume backing this claim.'}
        R.accessModes = [str_dflt]
        R.dataSource = lambda: Defs.definitions_io_k8s_api_core_v1_TypedLocalObjectReference
        R.dataSourceRef = lambda: Defs.definitions_io_k8s_api_core_v1_TypedLocalObjectReference
        R.resources = lambda: Defs.definitions_io_k8s_api_core_v1_ResourceRequirements
        R.selector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.storageClassName = str_dflt
        R.volumeMode = str_dflt
        R.volumeName = str_dflt
    class definitions_io_k8s_api_core_v1_PersistentVolumeClaimStatus:
        """#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimStatus"""
        class R:
            description = 'PersistentVolumeClaimStatus is the current status of a persistent volume claim.'
            type = 'object'
            _attrs = ['accessModes', 'allocatedResources', 'capacity', 'conditions', 'phase', 'resizeStatus']
            accessModes = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'}
            allocatedResources = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'The storage resource within AllocatedResources tracks the capacity allocated to a PVC. It may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.'}
            capacity = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'Represents the actual resources of the underlying volume.'}
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaimCondition, 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': "Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'."}
            phase = {'type': 'string', 'descr': 'Phase represents the current phase of PersistentVolumeClaim.\n\n'}
            resizeStatus = {'type': 'string', 'descr': 'ResizeStatus stores status of resize operation. ResizeStatus is not set by default but when expansion is complete resizeStatus is set to empty string by resize controller or kubelet. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.'}
        R.accessModes = [str_dflt]
        R.allocatedResources = {}
        R.capacity = {}
        R.conditions = [lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaimCondition]
        R.phase = str_dflt
        R.resizeStatus = str_dflt
    class definitions_io_k8s_api_core_v1_PersistentVolumeClaimTemplate:
        """#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimTemplate"""
        class R:
            description = 'PersistentVolumeClaimTemplate is used to produce PersistentVolumeClaim objects as part of an EphemeralVolumeSource.'
            type = 'object'
            required = ['spec']
            _attrs = ['metadata', 'spec']
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.'}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaimSpec, 'descr': 'The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.'}
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaimSpec
    class definitions_io_k8s_api_core_v1_PersistentVolumeClaimVolumeSource:
        """#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource"""
        class R:
            description = 'PersistentVolumeClaimVolumeSource references the user"s PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).'
            type = 'object'
            required = ['claimName']
            _attrs = ['claimName', 'readOnly']
            claimName = {'type': 'string', 'descr': 'ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'}
            readOnly = {'type': 'boolean', 'descr': 'Will force the ReadOnly setting in VolumeMounts. Default false.'}
        R.claimName = str_dflt
        R.readOnly = True
    class definitions_io_k8s_api_core_v1_PersistentVolumeList:
        """#/definitions/io.k8s.api.core.v1.PersistentVolumeList"""
        class R:
            description = 'PersistentVolumeList is a list of PersistentVolume items.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'PersistentVolumeList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolume, 'descr': 'List of persistent volumes. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolume]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_core_v1_PersistentVolumeSpec:
        """#/definitions/io.k8s.api.core.v1.PersistentVolumeSpec"""
        class R:
            description = 'PersistentVolumeSpec is the specification of a persistent volume.'
            type = 'object'
            _attrs = ['accessModes', 'awsElasticBlockStore', 'azureDisk', 'azureFile', 'capacity', 'cephfs', 'cinder', 'claimRef', 'csi', 'fc', 'flexVolume', 'flocker', 'gcePersistentDisk', 'glusterfs', 'hostPath', 'iscsi', 'local', 'mountOptions', 'nfs', 'nodeAffinity', 'persistentVolumeReclaimPolicy', 'photonPersistentDisk', 'portworxVolume', 'quobyte', 'rbd', 'scaleIO', 'storageClassName', 'storageos', 'volumeMode', 'vsphereVolume']
            accessModes = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'AccessModes contains all ways the volume can be mounted. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes'}
            awsElasticBlockStore = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSource, 'descr': "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"}
            azureDisk = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_AzureDiskVolumeSource, 'descr': 'AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.'}
            azureFile = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_AzureFilePersistentVolumeSource, 'descr': 'AzureFile represents an Azure File Service mount on the host and bind mount to the pod.'}
            capacity = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': "A description of the persistent volume's resources and capacity. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity"}
            cephfs = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_CephFSPersistentVolumeSource, 'descr': "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime"}
            cinder = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_CinderPersistentVolumeSource, 'descr': 'Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'}
            claimRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference, 'descr': 'ClaimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim. Expected to be non-nil when bound. claim.VolumeName is the authoritative bind between PV and PVC. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#binding'}
            csi = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_CSIPersistentVolumeSource, 'descr': 'CSI represents storage that is handled by an external CSI driver (Beta feature).'}
            fc = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_FCVolumeSource, 'descr': "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod."}
            flexVolume = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_FlexPersistentVolumeSource, 'descr': 'FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.'}
            flocker = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_FlockerVolumeSource, 'descr': "Flocker represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running"}
            gcePersistentDisk = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_GCEPersistentDiskVolumeSource, 'descr': "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"}
            glusterfs = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_GlusterfsPersistentVolumeSource, 'descr': 'Glusterfs represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: https://examples.k8s.io/volumes/glusterfs/README.md'}
            hostPath = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_HostPathVolumeSource, 'descr': 'HostPath represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'}
            iscsi = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ISCSIPersistentVolumeSource, 'descr': "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin."}
            local = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_LocalVolumeSource, 'descr': 'Local represents directly-attached storage with node affinity'}
            mountOptions = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'A list of mount options, e.g. ["ro", "soft"]. Not validated - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options'}
            nfs = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NFSVolumeSource, 'descr': 'NFS represents an NFS mount on the host. Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'}
            nodeAffinity = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_VolumeNodeAffinity, 'descr': 'NodeAffinity defines constraints that limit what nodes this volume can be accessed from. This field influences the scheduling of pods that use this volume.'}
            persistentVolumeReclaimPolicy = {'type': 'string', 'descr': 'What happens to a persistent volume when released from its claim. Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the volume plugin underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming\n\n'}
            photonPersistentDisk = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PhotonPersistentDiskVolumeSource, 'descr': 'PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine'}
            portworxVolume = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PortworxVolumeSource, 'descr': 'PortworxVolume represents a portworx volume attached and mounted on kubelets host machine'}
            quobyte = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_QuobyteVolumeSource, 'descr': "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime"}
            rbd = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_RBDPersistentVolumeSource, 'descr': "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md"}
            scaleIO = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ScaleIOPersistentVolumeSource, 'descr': 'ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.'}
            storageClassName = {'type': 'string', 'descr': 'Name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass.'}
            storageos = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_StorageOSPersistentVolumeSource, 'descr': "StorageOS represents a StorageOS volume that is attached to the kubelet's host machine and mounted into the pod More info: https://examples.k8s.io/volumes/storageos/README.md"}
            volumeMode = {'type': 'string', 'descr': 'volumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state. Value of Filesystem is implied when not included in spec.'}
            vsphereVolume = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_VsphereVirtualDiskVolumeSource, 'descr': 'VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine'}
        R.accessModes = [str_dflt]
        R.awsElasticBlockStore = lambda: Defs.definitions_io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSource
        R.azureDisk = lambda: Defs.definitions_io_k8s_api_core_v1_AzureDiskVolumeSource
        R.azureFile = lambda: Defs.definitions_io_k8s_api_core_v1_AzureFilePersistentVolumeSource
        R.capacity = {}
        R.cephfs = lambda: Defs.definitions_io_k8s_api_core_v1_CephFSPersistentVolumeSource
        R.cinder = lambda: Defs.definitions_io_k8s_api_core_v1_CinderPersistentVolumeSource
        R.claimRef = lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference
        R.csi = lambda: Defs.definitions_io_k8s_api_core_v1_CSIPersistentVolumeSource
        R.fc = lambda: Defs.definitions_io_k8s_api_core_v1_FCVolumeSource
        R.flexVolume = lambda: Defs.definitions_io_k8s_api_core_v1_FlexPersistentVolumeSource
        R.flocker = lambda: Defs.definitions_io_k8s_api_core_v1_FlockerVolumeSource
        R.gcePersistentDisk = lambda: Defs.definitions_io_k8s_api_core_v1_GCEPersistentDiskVolumeSource
        R.glusterfs = lambda: Defs.definitions_io_k8s_api_core_v1_GlusterfsPersistentVolumeSource
        R.hostPath = lambda: Defs.definitions_io_k8s_api_core_v1_HostPathVolumeSource
        R.iscsi = lambda: Defs.definitions_io_k8s_api_core_v1_ISCSIPersistentVolumeSource
        R.local = lambda: Defs.definitions_io_k8s_api_core_v1_LocalVolumeSource
        R.mountOptions = [str_dflt]
        R.nfs = lambda: Defs.definitions_io_k8s_api_core_v1_NFSVolumeSource
        R.nodeAffinity = lambda: Defs.definitions_io_k8s_api_core_v1_VolumeNodeAffinity
        R.persistentVolumeReclaimPolicy = str_dflt
        R.photonPersistentDisk = lambda: Defs.definitions_io_k8s_api_core_v1_PhotonPersistentDiskVolumeSource
        R.portworxVolume = lambda: Defs.definitions_io_k8s_api_core_v1_PortworxVolumeSource
        R.quobyte = lambda: Defs.definitions_io_k8s_api_core_v1_QuobyteVolumeSource
        R.rbd = lambda: Defs.definitions_io_k8s_api_core_v1_RBDPersistentVolumeSource
        R.scaleIO = lambda: Defs.definitions_io_k8s_api_core_v1_ScaleIOPersistentVolumeSource
        R.storageClassName = str_dflt
        R.storageos = lambda: Defs.definitions_io_k8s_api_core_v1_StorageOSPersistentVolumeSource
        R.volumeMode = str_dflt
        R.vsphereVolume = lambda: Defs.definitions_io_k8s_api_core_v1_VsphereVirtualDiskVolumeSource
    class definitions_io_k8s_api_core_v1_PersistentVolumeStatus:
        """#/definitions/io.k8s.api.core.v1.PersistentVolumeStatus"""
        class R:
            description = 'PersistentVolumeStatus is the current status of a persistent volume.'
            type = 'object'
            _attrs = ['message', 'phase', 'reason']
            message = {'type': 'string', 'descr': 'A human-readable message indicating details about why the volume is in this state.'}
            phase = {'type': 'string', 'descr': 'Phase indicates if a volume is available, bound to a claim, or released by a claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase\n\n'}
            reason = {'type': 'string', 'descr': 'Reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.'}
        R.message = str_dflt
        R.phase = str_dflt
        R.reason = str_dflt
    class definitions_io_k8s_api_core_v1_PhotonPersistentDiskVolumeSource:
        """#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"""
        class R:
            description = 'Represents a Photon Controller persistent disk resource.'
            type = 'object'
            required = ['pdID']
            _attrs = ['fsType', 'pdID']
            fsType = {'type': 'string', 'descr': 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.'}
            pdID = {'type': 'string', 'descr': 'ID that identifies Photon Controller persistent disk'}
        R.fsType = str_dflt
        R.pdID = str_dflt
    class definitions_io_k8s_api_core_v1_Pod:
        """#/definitions/io.k8s.api.core.v1.Pod"""
        class R:
            description = 'Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'Pod', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PodSpec, 'descr': 'Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PodStatus, 'descr': 'Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_core_v1_PodSpec
        R.status = lambda: Defs.definitions_io_k8s_api_core_v1_PodStatus
    class definitions_io_k8s_api_core_v1_PodAffinity:
        """#/definitions/io.k8s.api.core.v1.PodAffinity"""
        class R:
            description = 'Pod affinity is a group of inter pod affinity scheduling rules.'
            type = 'object'
            _attrs = ['preferredDuringSchedulingIgnoredDuringExecution', 'requiredDuringSchedulingIgnoredDuringExecution']
            preferredDuringSchedulingIgnoredDuringExecution = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_WeightedPodAffinityTerm, 'descr': 'The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.'}
            requiredDuringSchedulingIgnoredDuringExecution = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_PodAffinityTerm, 'descr': 'If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.'}
        R.preferredDuringSchedulingIgnoredDuringExecution = [lambda: Defs.definitions_io_k8s_api_core_v1_WeightedPodAffinityTerm]
        R.requiredDuringSchedulingIgnoredDuringExecution = [lambda: Defs.definitions_io_k8s_api_core_v1_PodAffinityTerm]
    class definitions_io_k8s_api_core_v1_PodAffinityTerm:
        """#/definitions/io.k8s.api.core.v1.PodAffinityTerm"""
        class R:
            description = 'Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running'
            type = 'object'
            required = ['topologyKey']
            _attrs = ['labelSelector', 'namespaceSelector', 'namespaces', 'topologyKey']
            labelSelector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'A label query over a set of resources, in this case pods.'}
            namespaceSelector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod\'s namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.'}
            namespaces = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod\'s namespace"'}
            topologyKey = {'type': 'string', 'descr': 'This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.'}
        R.labelSelector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.namespaceSelector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.namespaces = [str_dflt]
        R.topologyKey = str_dflt
    class definitions_io_k8s_api_core_v1_PodAntiAffinity:
        """#/definitions/io.k8s.api.core.v1.PodAntiAffinity"""
        class R:
            description = 'Pod anti affinity is a group of inter pod anti affinity scheduling rules.'
            type = 'object'
            _attrs = ['preferredDuringSchedulingIgnoredDuringExecution', 'requiredDuringSchedulingIgnoredDuringExecution']
            preferredDuringSchedulingIgnoredDuringExecution = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_WeightedPodAffinityTerm, 'descr': 'The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.'}
            requiredDuringSchedulingIgnoredDuringExecution = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_PodAffinityTerm, 'descr': 'If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.'}
        R.preferredDuringSchedulingIgnoredDuringExecution = [lambda: Defs.definitions_io_k8s_api_core_v1_WeightedPodAffinityTerm]
        R.requiredDuringSchedulingIgnoredDuringExecution = [lambda: Defs.definitions_io_k8s_api_core_v1_PodAffinityTerm]
    class definitions_io_k8s_api_core_v1_PodCondition:
        """#/definitions/io.k8s.api.core.v1.PodCondition"""
        class R:
            description = 'PodCondition contains details for the current condition of this pod.'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['lastProbeTime', 'lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastProbeTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Last time we probed the condition.'}
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Last time the condition transitioned from one status to another.'}
            message = {'type': 'string', 'descr': 'Human-readable message indicating details about last transition.'}
            reason = {'type': 'string', 'descr': "Unique, one-word, CamelCase reason for the condition's last transition."}
            status = {'type': 'string', 'descr': 'Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions'}
            type = {'type': 'string', 'descr': 'Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions\n\n'}
        R.lastProbeTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_core_v1_PodDNSConfig:
        """#/definitions/io.k8s.api.core.v1.PodDNSConfig"""
        class R:
            description = 'PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.'
            type = 'object'
            _attrs = ['nameservers', 'options', 'searches']
            nameservers = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.'}
            options = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_PodDNSConfigOption, 'descr': 'A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.'}
            searches = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.'}
        R.nameservers = [str_dflt]
        R.options = [lambda: Defs.definitions_io_k8s_api_core_v1_PodDNSConfigOption]
        R.searches = [str_dflt]
    class definitions_io_k8s_api_core_v1_PodDNSConfigOption:
        """#/definitions/io.k8s.api.core.v1.PodDNSConfigOption"""
        class R:
            description = 'PodDNSConfigOption defines DNS resolver options of a pod.'
            type = 'object'
            _attrs = ['name', 'value']
            name = {'type': 'string', 'descr': 'Required.'}
            value = {'type': 'string'}
        R.name = name
        R.value = str_dflt
    class definitions_io_k8s_api_core_v1_PodIP:
        """#/definitions/io.k8s.api.core.v1.PodIP"""
        class R:
            description = 'IP address information for entries in the (plural) PodIPs field. Each entry includes:\n   IP: An IP address allocated to the pod. Routable at least within the cluster.'
            type = 'object'
            _attrs = ['ip']
            ip = {'type': 'string', 'descr': 'ip is an IP address (IPv4 or IPv6) assigned to the pod'}
        R.ip = str_dflt
    class definitions_io_k8s_api_core_v1_PodList:
        """#/definitions/io.k8s.api.core.v1.PodList"""
        class R:
            description = 'PodList is a list of Pods.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'PodList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_Pod, 'descr': 'List of pods. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_Pod]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_core_v1_PodOS:
        """#/definitions/io.k8s.api.core.v1.PodOS"""
        class R:
            description = 'PodOS defines the OS parameters of a pod.'
            type = 'object'
            required = ['name']
            _attrs = ['name']
            name = {'type': 'string', 'descr': 'Name is the name of the operating system. The currently supported values are linux and windows. Additional value may be defined in future and can be one of: https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration Clients should expect to handle additional values and treat unrecognized values in this field as os: null'}
        R.name = name
    class definitions_io_k8s_api_core_v1_PodReadinessGate:
        """#/definitions/io.k8s.api.core.v1.PodReadinessGate"""
        class R:
            description = 'PodReadinessGate contains the reference to a pod condition'
            type = 'object'
            required = ['conditionType']
            _attrs = ['conditionType']
            conditionType = {'type': 'string', 'descr': "ConditionType refers to a condition in the pod's condition list with matching type.\n\n"}
        R.conditionType = str_dflt
    class definitions_io_k8s_api_core_v1_PodSecurityContext:
        """#/definitions/io.k8s.api.core.v1.PodSecurityContext"""
        class R:
            description = 'PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.'
            type = 'object'
            _attrs = ['fsGroup', 'fsGroupChangePolicy', 'runAsGroup', 'runAsNonRoot', 'runAsUser', 'seLinuxOptions', 'seccompProfile', 'supplementalGroups', 'sysctls', 'windowsOptions']
            fsGroup = {'type': 'integer', 'format': 'int64', 'descr': "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows."}
            fsGroupChangePolicy = {'type': 'string', 'descr': 'fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used. Note that this field cannot be set when spec.os.name is windows.'}
            runAsGroup = {'type': 'integer', 'format': 'int64', 'descr': 'The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.'}
            runAsNonRoot = {'type': 'boolean', 'descr': 'Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'}
            runAsUser = {'type': 'integer', 'format': 'int64', 'descr': 'The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.'}
            seLinuxOptions = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SELinuxOptions, 'descr': 'The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.'}
            seccompProfile = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SeccompProfile, 'descr': 'The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.'}
            supplementalGroups = {'type': 'array', 'items': {'type': 'integer', 'format': 'int64'}, 'descr': "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container. Note that this field cannot be set when spec.os.name is windows."}
            sysctls = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_Sysctl, 'descr': 'Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.'}
            windowsOptions = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_WindowsSecurityContextOptions, 'descr': "The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux."}
        R.fsGroup = 0
        R.fsGroupChangePolicy = str_dflt
        R.runAsGroup = 0
        R.runAsNonRoot = True
        R.runAsUser = 0
        R.seLinuxOptions = lambda: Defs.definitions_io_k8s_api_core_v1_SELinuxOptions
        R.seccompProfile = lambda: Defs.definitions_io_k8s_api_core_v1_SeccompProfile
        R.supplementalGroups = [0]
        R.sysctls = [lambda: Defs.definitions_io_k8s_api_core_v1_Sysctl]
        R.windowsOptions = lambda: Defs.definitions_io_k8s_api_core_v1_WindowsSecurityContextOptions
    class definitions_io_k8s_api_core_v1_PodSpec:
        """#/definitions/io.k8s.api.core.v1.PodSpec"""
        class R:
            description = 'PodSpec is a description of a pod.'
            type = 'object'
            required = ['containers']
            _attrs = ['activeDeadlineSeconds', 'affinity', 'automountServiceAccountToken', 'containers', 'dnsConfig', 'dnsPolicy', 'enableServiceLinks', 'ephemeralContainers', 'hostAliases', 'hostIPC', 'hostNetwork', 'hostPID', 'hostname', 'imagePullSecrets', 'initContainers', 'nodeName', 'nodeSelector', 'os', 'overhead', 'preemptionPolicy', 'priority', 'priorityClassName', 'readinessGates', 'restartPolicy', 'runtimeClassName', 'schedulerName', 'securityContext', 'serviceAccount', 'serviceAccountName', 'setHostnameAsFQDN', 'shareProcessNamespace', 'subdomain', 'terminationGracePeriodSeconds', 'tolerations', 'topologySpreadConstraints', 'volumes']
            activeDeadlineSeconds = {'type': 'integer', 'format': 'int64', 'descr': 'Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.'}
            affinity = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_Affinity, 'descr': "If specified, the pod's scheduling constraints"}
            automountServiceAccountToken = {'type': 'boolean', 'descr': 'AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.'}
            containers = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_Container, 'x-kubernetes-patch-merge-key': 'name', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.'}
            dnsConfig = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PodDNSConfig, 'descr': 'Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.'}
            dnsPolicy = {'type': 'string', 'descr': 'Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are \'ClusterFirstWithHostNet\', \'ClusterFirst\', \'Default\' or \'None\'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to \'ClusterFirstWithHostNet\'.\n\n'}
            enableServiceLinks = {'type': 'boolean', 'descr': "EnableServiceLinks indicates whether information about services should be injected into pod's environment variables, matching the syntax of Docker links. Optional: Defaults to true."}
            ephemeralContainers = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_EphemeralContainer, 'x-kubernetes-patch-merge-key': 'name', 'x-kubernetes-patch-strategy': 'merge', 'descr': "List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing pod to perform user-initiated actions such as debugging. This list cannot be specified when creating a pod, and it cannot be modified by updating the pod spec. In order to add an ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource. This field is beta-level and available on clusters that haven't disabled the EphemeralContainers feature gate."}
            hostAliases = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_HostAlias, 'x-kubernetes-patch-merge-key': 'ip', 'x-kubernetes-patch-strategy': 'merge', 'descr': "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods."}
            hostIPC = {'type': 'boolean', 'descr': "Use the host's ipc namespace. Optional: Default to false."}
            hostNetwork = {'type': 'boolean', 'descr': "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false."}
            hostPID = {'type': 'boolean', 'descr': "Use the host's pid namespace. Optional: Default to false."}
            hostname = {'type': 'string', 'descr': "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value."}
            imagePullSecrets = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference, 'x-kubernetes-patch-merge-key': 'name', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'}
            initContainers = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_Container, 'x-kubernetes-patch-merge-key': 'name', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/'}
            nodeName = {'type': 'string', 'descr': 'NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.'}
            nodeSelector = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'x-kubernetes-map-type': 'atomic', 'descr': "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/"}
            os = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PodOS, 'descr': 'Specifies the OS of the containers in the pod. Some pod and container fields are restricted if this is set.\n\nIf the OS field is set to linux, the following fields must be unset: -securityContext.windowsOptions\n\nIf the OS field is set to windows, following fields must be unset: - spec.hostPID - spec.hostIPC - spec.securityContext.seLinuxOptions - spec.securityContext.seccompProfile - spec.securityContext.fsGroup - spec.securityContext.fsGroupChangePolicy - spec.securityContext.sysctls - spec.shareProcessNamespace - spec.securityContext.runAsUser - spec.securityContext.runAsGroup - spec.securityContext.supplementalGroups - spec.containers[*].securityContext.seLinuxOptions - spec.containers[*].securityContext.seccompProfile - spec.containers[*].securityContext.capabilities - spec.containers[*].securityContext.readOnlyRootFilesystem - spec.containers[*].securityContext.privileged - spec.containers[*].securityContext.allowPrivilegeEscalation - spec.containers[*].securityContext.procMount - ...'}
            overhead = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'Overhead represents the resource overhead associated with running a pod for a given RuntimeClass. This field will be autopopulated at admission time by the RuntimeClass admission controller. If the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests. The RuntimeClass admission controller will reject Pod create requests which have the overhead already set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero. More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md This field is beta-level as of Kubernetes v1.18, and is only honored by servers that enable the PodOverhead feature.'}
            preemptionPolicy = {'type': 'string', 'descr': 'PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is beta-level, gated by the NonPreemptingPriority feature-gate.'}
            priority = {'type': 'integer', 'format': 'int32', 'descr': 'The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.'}
            priorityClassName = {'type': 'string', 'descr': 'If specified, indicates the pod\'s priority. "system-node-critical" and "system-cluster-critical" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.'}
            readinessGates = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_PodReadinessGate, 'descr': 'If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to "True" More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates'}
            restartPolicy = {'type': 'string', 'descr': 'Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy\n\n'}
            runtimeClassName = {'type': 'string', 'descr': 'RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class This is a beta feature as of Kubernetes v1.14.'}
            schedulerName = {'type': 'string', 'descr': 'If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.'}
            securityContext = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PodSecurityContext, 'descr': 'SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.'}
            serviceAccount = {'type': 'string', 'descr': 'DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.'}
            serviceAccountName = {'type': 'string', 'descr': 'ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'}
            setHostnameAsFQDN = {'type': 'boolean', 'descr': "If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default). In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname). In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN. If a pod does not have FQDN, this has no effect. Default to false."}
            shareProcessNamespace = {'type': 'boolean', 'descr': 'Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false.'}
            subdomain = {'type': 'string', 'descr': 'If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>". If not specified, the pod will not have a domainname at all.'}
            terminationGracePeriodSeconds = {'type': 'integer', 'format': 'int64', 'descr': 'Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.'}
            tolerations = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_Toleration, 'descr': "If specified, the pod's tolerations."}
            topologySpreadConstraints = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_TopologySpreadConstraint, 'x-kubernetes-list-map-keys': ['topologyKey', 'whenUnsatisfiable'], 'x-kubernetes-list-type': 'map', 'x-kubernetes-patch-merge-key': 'topologyKey', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed.'}
            volumes = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_Volume, 'x-kubernetes-patch-merge-key': 'name', 'x-kubernetes-patch-strategy': 'merge,retainKeys', 'descr': 'List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'}
        R.activeDeadlineSeconds = 0
        R.affinity = lambda: Defs.definitions_io_k8s_api_core_v1_Affinity
        R.automountServiceAccountToken = True
        R.containers = [lambda: Defs.definitions_io_k8s_api_core_v1_Container]
        R.dnsConfig = lambda: Defs.definitions_io_k8s_api_core_v1_PodDNSConfig
        R.dnsPolicy = str_dflt
        R.enableServiceLinks = True
        R.ephemeralContainers = [lambda: Defs.definitions_io_k8s_api_core_v1_EphemeralContainer]
        R.hostAliases = [lambda: Defs.definitions_io_k8s_api_core_v1_HostAlias]
        R.hostIPC = True
        R.hostNetwork = True
        R.hostPID = True
        R.hostname = str_dflt
        R.imagePullSecrets = [lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference]
        R.initContainers = [lambda: Defs.definitions_io_k8s_api_core_v1_Container]
        R.nodeName = str_dflt
        R.nodeSelector = {}
        R.os = lambda: Defs.definitions_io_k8s_api_core_v1_PodOS
        R.overhead = {}
        R.preemptionPolicy = str_dflt
        R.priority = 0
        R.priorityClassName = str_dflt
        R.readinessGates = [lambda: Defs.definitions_io_k8s_api_core_v1_PodReadinessGate]
        R.restartPolicy = str_dflt
        R.runtimeClassName = str_dflt
        R.schedulerName = str_dflt
        R.securityContext = lambda: Defs.definitions_io_k8s_api_core_v1_PodSecurityContext
        R.serviceAccount = str_dflt
        R.serviceAccountName = str_dflt
        R.setHostnameAsFQDN = True
        R.shareProcessNamespace = True
        R.subdomain = str_dflt
        R.terminationGracePeriodSeconds = 0
        R.tolerations = [lambda: Defs.definitions_io_k8s_api_core_v1_Toleration]
        R.topologySpreadConstraints = [lambda: Defs.definitions_io_k8s_api_core_v1_TopologySpreadConstraint]
        R.volumes = [lambda: Defs.definitions_io_k8s_api_core_v1_Volume]
    class definitions_io_k8s_api_core_v1_PodStatus:
        """#/definitions/io.k8s.api.core.v1.PodStatus"""
        class R:
            description = 'PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane.'
            type = 'object'
            _attrs = ['conditions', 'containerStatuses', 'ephemeralContainerStatuses', 'hostIP', 'initContainerStatuses', 'message', 'nominatedNodeName', 'phase', 'podIP', 'podIPs', 'qosClass', 'reason', 'startTime']
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_PodCondition, 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions'}
            containerStatuses = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ContainerStatus, 'descr': 'The list has one entry per container in the manifest. Each entry is currently the output of `docker inspect`. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status'}
            ephemeralContainerStatuses = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ContainerStatus, 'descr': "Status for any ephemeral containers that have run in this pod. This field is beta-level and available on clusters that haven't disabled the EphemeralContainers feature gate."}
            hostIP = {'type': 'string', 'descr': 'IP address of the host to which the pod is assigned. Empty if not yet scheduled.'}
            initContainerStatuses = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ContainerStatus, 'descr': 'The list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status'}
            message = {'type': 'string', 'descr': 'A human readable message indicating details about why the pod is in this condition.'}
            nominatedNodeName = {'type': 'string', 'descr': 'nominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be scheduled right away as preemption victims receive their graceful termination periods. This field does not guarantee that the pod will be scheduled on this node. Scheduler may decide to place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to give the resources on this node to a higher priority pod that is created after preemption. As a result, this field may be different than PodSpec.nodeName when the pod is scheduled.'}
            phase = {'type': 'string', 'descr': "The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod's status. There are five possible phase values:\n\nPending: The pod has been accepted by the Kubernetes system, but one or more of the container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while. Running: The pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting. Succeeded: All containers in the pod have terminated in success, and will not be restarted. Failed: All containers in the pod have terminated, and at least one container has terminated in failure. The container either exited with non-zero status or was terminated by the system. Unknown: For some reason t..."}
            podIP = {'type': 'string', 'descr': 'IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.'}
            podIPs = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_PodIP, 'x-kubernetes-patch-merge-key': 'ip', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'podIPs holds the IP addresses allocated to the pod. If this field is specified, the 0th entry must match the podIP field. Pods may be allocated at most 1 value for each of IPv4 and IPv6. This list is empty if no IPs have been allocated yet.'}
            qosClass = {'type': 'string', 'descr': 'The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md\n\n'}
            reason = {'type': 'string', 'descr': "A brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'"}
            startTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'RFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod.'}
        R.conditions = [lambda: Defs.definitions_io_k8s_api_core_v1_PodCondition]
        R.containerStatuses = [lambda: Defs.definitions_io_k8s_api_core_v1_ContainerStatus]
        R.ephemeralContainerStatuses = [lambda: Defs.definitions_io_k8s_api_core_v1_ContainerStatus]
        R.hostIP = str_dflt
        R.initContainerStatuses = [lambda: Defs.definitions_io_k8s_api_core_v1_ContainerStatus]
        R.message = str_dflt
        R.nominatedNodeName = str_dflt
        R.phase = str_dflt
        R.podIP = str_dflt
        R.podIPs = [lambda: Defs.definitions_io_k8s_api_core_v1_PodIP]
        R.qosClass = str_dflt
        R.reason = str_dflt
        R.startTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
    class definitions_io_k8s_api_core_v1_PodTemplate:
        """#/definitions/io.k8s.api.core.v1.PodTemplate"""
        class R:
            description = 'PodTemplate describes a template for creating copies of a predefined pod.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'PodTemplate', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'template']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            template = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PodTemplateSpec, 'descr': 'Template defines the pods that will be created from this pod template. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.template = lambda: Defs.definitions_io_k8s_api_core_v1_PodTemplateSpec
    class definitions_io_k8s_api_core_v1_PodTemplateList:
        """#/definitions/io.k8s.api.core.v1.PodTemplateList"""
        class R:
            description = 'PodTemplateList is a list of PodTemplates.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'PodTemplateList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_PodTemplate, 'descr': 'List of pod templates'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_PodTemplate]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_core_v1_PodTemplateSpec:
        """#/definitions/io.k8s.api.core.v1.PodTemplateSpec"""
        class R:
            description = 'PodTemplateSpec describes the data a pod should have when created from a template'
            type = 'object'
            _attrs = ['metadata', 'spec']
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PodSpec, 'descr': 'Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_core_v1_PodSpec
    class definitions_io_k8s_api_core_v1_PortStatus:
        """#/definitions/io.k8s.api.core.v1.PortStatus"""
        class R:
            type = 'object'
            required = ['port', 'protocol']
            _attrs = ['error', 'port', 'protocol']
            error = {'type': 'string', 'descr': 'Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use\n  CamelCase names\n- cloud provider specific error values must have names that comply with the\n  format foo.example.com/CamelCase.'}
            port = {'type': 'integer', 'format': 'int32', 'descr': 'Port is the port number of the service port of which status is recorded here'}
            protocol = {'type': 'string', 'descr': 'Protocol is the protocol of the service port of which status is recorded here The supported values are: "TCP", "UDP", "SCTP"\n\n'}
        R.error = str_dflt
        R.port = 0
        R.protocol = str_dflt
    class definitions_io_k8s_api_core_v1_PortworxVolumeSource:
        """#/definitions/io.k8s.api.core.v1.PortworxVolumeSource"""
        class R:
            description = 'PortworxVolumeSource represents a Portworx volume resource.'
            type = 'object'
            required = ['volumeID']
            _attrs = ['fsType', 'readOnly', 'volumeID']
            fsType = {'type': 'string', 'descr': 'FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.'}
            readOnly = {'type': 'boolean', 'descr': 'Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'}
            volumeID = {'type': 'string', 'descr': 'VolumeID uniquely identifies a Portworx volume'}
        R.fsType = str_dflt
        R.readOnly = True
        R.volumeID = str_dflt
    class definitions_io_k8s_api_core_v1_PreferredSchedulingTerm:
        """#/definitions/io.k8s.api.core.v1.PreferredSchedulingTerm"""
        class R:
            description = 'An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it"s a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).'
            type = 'object'
            required = ['weight', 'preference']
            _attrs = ['preference', 'weight']
            preference = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NodeSelectorTerm, 'descr': 'A node selector term, associated with the corresponding weight.'}
            weight = {'type': 'integer', 'format': 'int32', 'descr': 'Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.'}
        R.preference = lambda: Defs.definitions_io_k8s_api_core_v1_NodeSelectorTerm
        R.weight = 0
    class definitions_io_k8s_api_core_v1_Probe:
        """#/definitions/io.k8s.api.core.v1.Probe"""
        class R:
            description = 'Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.'
            type = 'object'
            _attrs = ['exec', 'failureThreshold', 'grpc', 'httpGet', 'initialDelaySeconds', 'periodSeconds', 'successThreshold', 'tcpSocket', 'terminationGracePeriodSeconds', 'timeoutSeconds']
            exec = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ExecAction, 'descr': 'Exec specifies the action to take.'}
            failureThreshold = {'type': 'integer', 'format': 'int32', 'descr': 'Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.'}
            grpc = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_GRPCAction, 'descr': 'GRPC specifies an action involving a GRPC port. This is an alpha field and requires enabling GRPCContainerProbe feature gate.'}
            httpGet = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_HTTPGetAction, 'descr': 'HTTPGet specifies the http request to perform.'}
            initialDelaySeconds = {'type': 'integer', 'format': 'int32', 'descr': 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
            periodSeconds = {'type': 'integer', 'format': 'int32', 'descr': 'How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.'}
            successThreshold = {'type': 'integer', 'format': 'int32', 'descr': 'Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.'}
            tcpSocket = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_TCPSocketAction, 'descr': 'TCPSocket specifies an action involving a TCP port.'}
            terminationGracePeriodSeconds = {'type': 'integer', 'format': 'int64', 'descr': "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset."}
            timeoutSeconds = {'type': 'integer', 'format': 'int32', 'descr': 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'}
        R.exec = lambda: Defs.definitions_io_k8s_api_core_v1_ExecAction
        R.failureThreshold = 0
        R.grpc = lambda: Defs.definitions_io_k8s_api_core_v1_GRPCAction
        R.httpGet = lambda: Defs.definitions_io_k8s_api_core_v1_HTTPGetAction
        R.initialDelaySeconds = 0
        R.periodSeconds = 0
        R.successThreshold = 0
        R.tcpSocket = lambda: Defs.definitions_io_k8s_api_core_v1_TCPSocketAction
        R.terminationGracePeriodSeconds = 0
        R.timeoutSeconds = 0
    class definitions_io_k8s_api_core_v1_ProjectedVolumeSource:
        """#/definitions/io.k8s.api.core.v1.ProjectedVolumeSource"""
        class R:
            description = 'Represents a projected volume source'
            type = 'object'
            _attrs = ['defaultMode', 'sources']
            defaultMode = {'type': 'integer', 'format': 'int32', 'descr': 'Mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'}
            sources = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_VolumeProjection, 'descr': 'list of volume projections'}
        R.defaultMode = 0
        R.sources = [lambda: Defs.definitions_io_k8s_api_core_v1_VolumeProjection]
    class definitions_io_k8s_api_core_v1_QuobyteVolumeSource:
        """#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource"""
        class R:
            description = 'Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.'
            type = 'object'
            required = ['registry', 'volume']
            _attrs = ['group', 'readOnly', 'registry', 'tenant', 'user', 'volume']
            group = {'type': 'string', 'descr': 'Group to map volume access to Default is no group'}
            readOnly = {'type': 'boolean', 'descr': 'ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.'}
            registry = {'type': 'string', 'descr': 'Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes'}
            tenant = {'type': 'string', 'descr': 'Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin'}
            user = {'type': 'string', 'descr': 'User to map volume access to Defaults to serivceaccount user'}
            volume = {'type': 'string', 'descr': 'Volume is a string that references an already created Quobyte volume by name.'}
        R.group = str_dflt
        R.readOnly = True
        R.registry = str_dflt
        R.tenant = str_dflt
        R.user = str_dflt
        R.volume = str_dflt
    class definitions_io_k8s_api_core_v1_RBDPersistentVolumeSource:
        """#/definitions/io.k8s.api.core.v1.RBDPersistentVolumeSource"""
        class R:
            description = 'Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.'
            type = 'object'
            required = ['monitors', 'image']
            _attrs = ['fsType', 'image', 'keyring', 'monitors', 'pool', 'readOnly', 'secretRef', 'user']
            fsType = {'type': 'string', 'descr': 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd'}
            image = {'type': 'string', 'descr': 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'}
            keyring = {'type': 'string', 'descr': 'Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'}
            monitors = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'}
            pool = {'type': 'string', 'descr': 'The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'}
            readOnly = {'type': 'boolean', 'descr': 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'}
            secretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference, 'descr': 'SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'}
            user = {'type': 'string', 'descr': 'The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'}
        R.fsType = str_dflt
        R.image = str_dflt
        R.keyring = str_dflt
        R.monitors = [str_dflt]
        R.pool = str_dflt
        R.readOnly = True
        R.secretRef = lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference
        R.user = str_dflt
    class definitions_io_k8s_api_core_v1_RBDVolumeSource:
        """#/definitions/io.k8s.api.core.v1.RBDVolumeSource"""
        class R:
            description = 'Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.'
            type = 'object'
            required = ['monitors', 'image']
            _attrs = ['fsType', 'image', 'keyring', 'monitors', 'pool', 'readOnly', 'secretRef', 'user']
            fsType = {'type': 'string', 'descr': 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd'}
            image = {'type': 'string', 'descr': 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'}
            keyring = {'type': 'string', 'descr': 'Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'}
            monitors = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'}
            pool = {'type': 'string', 'descr': 'The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'}
            readOnly = {'type': 'boolean', 'descr': 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'}
            secretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference, 'descr': 'SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'}
            user = {'type': 'string', 'descr': 'The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'}
        R.fsType = str_dflt
        R.image = str_dflt
        R.keyring = str_dflt
        R.monitors = [str_dflt]
        R.pool = str_dflt
        R.readOnly = True
        R.secretRef = lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference
        R.user = str_dflt
    class definitions_io_k8s_api_core_v1_ReplicationController:
        """#/definitions/io.k8s.api.core.v1.ReplicationController"""
        class R:
            description = 'ReplicationController represents the configuration of a replication controller.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'ReplicationController', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "If the Labels of a ReplicationController are empty, they are defaulted to be the same as the Pod(s) that the replication controller manages. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ReplicationControllerSpec, 'descr': 'Spec defines the specification of the desired behavior of the replication controller. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ReplicationControllerStatus, 'descr': 'Status is the most recently observed status of the replication controller. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_core_v1_ReplicationControllerSpec
        R.status = lambda: Defs.definitions_io_k8s_api_core_v1_ReplicationControllerStatus
    class definitions_io_k8s_api_core_v1_ReplicationControllerCondition:
        """#/definitions/io.k8s.api.core.v1.ReplicationControllerCondition"""
        class R:
            description = 'ReplicationControllerCondition describes the state of a replication controller at a certain point.'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'The last time the condition transitioned from one status to another.'}
            message = {'type': 'string', 'descr': 'A human readable message indicating details about the transition.'}
            reason = {'type': 'string', 'descr': "The reason for the condition's last transition."}
            status = {'type': 'string', 'descr': 'Status of the condition, one of True, False, Unknown.'}
            type = {'type': 'string', 'descr': 'Type of replication controller condition.'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_core_v1_ReplicationControllerList:
        """#/definitions/io.k8s.api.core.v1.ReplicationControllerList"""
        class R:
            description = 'ReplicationControllerList is a collection of replication controllers.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'ReplicationControllerList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ReplicationController, 'descr': 'List of replication controllers. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_ReplicationController]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_core_v1_ReplicationControllerSpec:
        """#/definitions/io.k8s.api.core.v1.ReplicationControllerSpec"""
        class R:
            description = 'ReplicationControllerSpec is the specification of a replication controller.'
            type = 'object'
            _attrs = ['minReadySeconds', 'replicas', 'selector', 'template']
            minReadySeconds = {'type': 'integer', 'format': 'int32', 'descr': 'Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)'}
            replicas = {'type': 'integer', 'format': 'int32', 'descr': 'Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller'}
            selector = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'x-kubernetes-map-type': 'atomic', 'descr': 'Selector is a label query over pods that should match the Replicas count. If Selector is empty, it is defaulted to the labels present on the Pod template. Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'}
            template = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PodTemplateSpec, 'descr': 'Template is the object that describes the pod that will be created if insufficient replicas are detected. This takes precedence over a TemplateRef. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template'}
        R.minReadySeconds = 0
        R.replicas = 0
        R.selector = {}
        R.template = lambda: Defs.definitions_io_k8s_api_core_v1_PodTemplateSpec
    class definitions_io_k8s_api_core_v1_ReplicationControllerStatus:
        """#/definitions/io.k8s.api.core.v1.ReplicationControllerStatus"""
        class R:
            description = 'ReplicationControllerStatus represents the current status of a replication controller.'
            type = 'object'
            required = ['replicas']
            _attrs = ['availableReplicas', 'conditions', 'fullyLabeledReplicas', 'observedGeneration', 'readyReplicas', 'replicas']
            availableReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'The number of available replicas (ready for at least minReadySeconds) for this replication controller.'}
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ReplicationControllerCondition, 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': "Represents the latest available observations of a replication controller's current state."}
            fullyLabeledReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'The number of pods that have labels matching the labels of the pod template of the replication controller.'}
            observedGeneration = {'type': 'integer', 'format': 'int64', 'descr': 'ObservedGeneration reflects the generation of the most recently observed replication controller.'}
            readyReplicas = {'type': 'integer', 'format': 'int32', 'descr': 'The number of ready replicas for this replication controller.'}
            replicas = {'type': 'integer', 'format': 'int32', 'descr': 'Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller'}
        R.availableReplicas = 0
        R.conditions = [lambda: Defs.definitions_io_k8s_api_core_v1_ReplicationControllerCondition]
        R.fullyLabeledReplicas = 0
        R.observedGeneration = 0
        R.readyReplicas = 0
        R.replicas = 0
    class definitions_io_k8s_api_core_v1_ResourceFieldSelector:
        """#/definitions/io.k8s.api.core.v1.ResourceFieldSelector"""
        class R:
            description = 'ResourceFieldSelector represents container resources (cpu, memory) and their output format'
            type = 'object'
            required = ['resource']
            x_kubernetes_map_type = 'atomic'
            _attrs = ['containerName', 'divisor', 'resource']
            containerName = {'type': 'string', 'descr': 'Container name: required for volumes, optional for env vars'}
            divisor = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'Specifies the output format of the exposed resources, defaults to "1"'}
            resource = {'type': 'string', 'descr': 'Required: resource to select'}
        R.containerName = str_dflt
        R.divisor = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
        R.resource = str_dflt
    class definitions_io_k8s_api_core_v1_ResourceQuota:
        """#/definitions/io.k8s.api.core.v1.ResourceQuota"""
        class R:
            description = 'ResourceQuota sets aggregate quota restrictions enforced per namespace'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'ResourceQuota', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ResourceQuotaSpec, 'descr': 'Spec defines the desired quota. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ResourceQuotaStatus, 'descr': 'Status defines the actual enforced quota and its current usage. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_core_v1_ResourceQuotaSpec
        R.status = lambda: Defs.definitions_io_k8s_api_core_v1_ResourceQuotaStatus
    class definitions_io_k8s_api_core_v1_ResourceQuotaList:
        """#/definitions/io.k8s.api.core.v1.ResourceQuotaList"""
        class R:
            description = 'ResourceQuotaList is a list of ResourceQuota items.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'ResourceQuotaList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ResourceQuota, 'descr': 'Items is a list of ResourceQuota objects. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_ResourceQuota]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_core_v1_ResourceQuotaSpec:
        """#/definitions/io.k8s.api.core.v1.ResourceQuotaSpec"""
        class R:
            description = 'ResourceQuotaSpec defines the desired hard limits to enforce for Quota.'
            type = 'object'
            _attrs = ['hard', 'scopeSelector', 'scopes']
            hard = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'}
            scopeSelector = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ScopeSelector, 'descr': 'scopeSelector is also a collection of filters like scopes that must match each object tracked by a quota but expressed using ScopeSelectorOperator in combination with possible values. For a resource to match, both scopes AND scopeSelector (if specified in spec), must be matched.'}
            scopes = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.'}
        R.hard = {}
        R.scopeSelector = lambda: Defs.definitions_io_k8s_api_core_v1_ScopeSelector
        R.scopes = [str_dflt]
    class definitions_io_k8s_api_core_v1_ResourceQuotaStatus:
        """#/definitions/io.k8s.api.core.v1.ResourceQuotaStatus"""
        class R:
            description = 'ResourceQuotaStatus defines the enforced hard limits and observed use.'
            type = 'object'
            _attrs = ['hard', 'used']
            hard = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'Hard is the set of enforced hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'}
            used = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'Used is the current observed total usage of the resource in the namespace.'}
        R.hard = {}
        R.used = {}
    class definitions_io_k8s_api_core_v1_ResourceRequirements:
        """#/definitions/io.k8s.api.core.v1.ResourceRequirements"""
        class R:
            description = 'ResourceRequirements describes the compute resource requirements.'
            type = 'object'
            _attrs = ['limits', 'requests']
            limits = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'}
            requests = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'}
        R.limits = {}
        R.requests = {}
    class definitions_io_k8s_api_core_v1_SELinuxOptions:
        """#/definitions/io.k8s.api.core.v1.SELinuxOptions"""
        class R:
            description = 'SELinuxOptions are the labels to be applied to the container'
            type = 'object'
            _attrs = ['level', 'role', 'type', 'user']
            level = {'type': 'string', 'descr': 'Level is SELinux level label that applies to the container.'}
            role = {'type': 'string', 'descr': 'Role is a SELinux role label that applies to the container.'}
            type = {'type': 'string', 'descr': 'Type is a SELinux type label that applies to the container.'}
            user = {'type': 'string', 'descr': 'User is a SELinux user label that applies to the container.'}
        R.level = str_dflt
        R.role = str_dflt
        R.type = str_dflt
        R.user = str_dflt
    class definitions_io_k8s_api_core_v1_ScaleIOPersistentVolumeSource:
        """#/definitions/io.k8s.api.core.v1.ScaleIOPersistentVolumeSource"""
        class R:
            description = 'ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume'
            type = 'object'
            required = ['gateway', 'system', 'secretRef']
            _attrs = ['fsType', 'gateway', 'protectionDomain', 'readOnly', 'secretRef', 'sslEnabled', 'storageMode', 'storagePool', 'system', 'volumeName']
            fsType = {'type': 'string', 'descr': 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs"'}
            gateway = {'type': 'string', 'descr': 'The host address of the ScaleIO API Gateway.'}
            protectionDomain = {'type': 'string', 'descr': 'The name of the ScaleIO Protection Domain for the configured storage.'}
            readOnly = {'type': 'boolean', 'descr': 'Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'}
            secretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference, 'descr': 'SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.'}
            sslEnabled = {'type': 'boolean', 'descr': 'Flag to enable/disable SSL communication with Gateway, default false'}
            storageMode = {'type': 'string', 'descr': 'Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.'}
            storagePool = {'type': 'string', 'descr': 'The ScaleIO Storage Pool associated with the protection domain.'}
            system = {'type': 'string', 'descr': 'The name of the storage system as configured in ScaleIO.'}
            volumeName = {'type': 'string', 'descr': 'The name of a volume already created in the ScaleIO system that is associated with this volume source.'}
        R.fsType = str_dflt
        R.gateway = str_dflt
        R.protectionDomain = str_dflt
        R.readOnly = True
        R.secretRef = lambda: Defs.definitions_io_k8s_api_core_v1_SecretReference
        R.sslEnabled = True
        R.storageMode = str_dflt
        R.storagePool = str_dflt
        R.system = str_dflt
        R.volumeName = str_dflt
    class definitions_io_k8s_api_core_v1_ScaleIOVolumeSource:
        """#/definitions/io.k8s.api.core.v1.ScaleIOVolumeSource"""
        class R:
            description = 'ScaleIOVolumeSource represents a persistent ScaleIO volume'
            type = 'object'
            required = ['gateway', 'system', 'secretRef']
            _attrs = ['fsType', 'gateway', 'protectionDomain', 'readOnly', 'secretRef', 'sslEnabled', 'storageMode', 'storagePool', 'system', 'volumeName']
            fsType = {'type': 'string', 'descr': 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".'}
            gateway = {'type': 'string', 'descr': 'The host address of the ScaleIO API Gateway.'}
            protectionDomain = {'type': 'string', 'descr': 'The name of the ScaleIO Protection Domain for the configured storage.'}
            readOnly = {'type': 'boolean', 'descr': 'Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'}
            secretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference, 'descr': 'SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.'}
            sslEnabled = {'type': 'boolean', 'descr': 'Flag to enable/disable SSL communication with Gateway, default false'}
            storageMode = {'type': 'string', 'descr': 'Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.'}
            storagePool = {'type': 'string', 'descr': 'The ScaleIO Storage Pool associated with the protection domain.'}
            system = {'type': 'string', 'descr': 'The name of the storage system as configured in ScaleIO.'}
            volumeName = {'type': 'string', 'descr': 'The name of a volume already created in the ScaleIO system that is associated with this volume source.'}
        R.fsType = str_dflt
        R.gateway = str_dflt
        R.protectionDomain = str_dflt
        R.readOnly = True
        R.secretRef = lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference
        R.sslEnabled = True
        R.storageMode = str_dflt
        R.storagePool = str_dflt
        R.system = str_dflt
        R.volumeName = str_dflt
    class definitions_io_k8s_api_core_v1_ScopeSelector:
        """#/definitions/io.k8s.api.core.v1.ScopeSelector"""
        class R:
            description = 'A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements.'
            type = 'object'
            x_kubernetes_map_type = 'atomic'
            _attrs = ['matchExpressions']
            matchExpressions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ScopedResourceSelectorRequirement, 'descr': 'A list of scope selector requirements by scope of the resources.'}
        R.matchExpressions = [lambda: Defs.definitions_io_k8s_api_core_v1_ScopedResourceSelectorRequirement]
    class definitions_io_k8s_api_core_v1_ScopedResourceSelectorRequirement:
        """#/definitions/io.k8s.api.core.v1.ScopedResourceSelectorRequirement"""
        class R:
            description = 'A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values.'
            type = 'object'
            required = ['scopeName', 'operator']
            _attrs = ['operator', 'scopeName', 'values']
            operator = {'type': 'string', 'descr': "Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.\n\n"}
            scopeName = {'type': 'string', 'descr': 'The name of the scope that the selector applies to.\n\n'}
            values = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.'}
        R.operator = str_dflt
        R.scopeName = str_dflt
        R.values = [str_dflt]
    class definitions_io_k8s_api_core_v1_SeccompProfile:
        """#/definitions/io.k8s.api.core.v1.SeccompProfile"""
        class R:
            description = 'SeccompProfile defines a pod/container"s seccomp profile settings. Only one profile source may be set.'
            type = 'object'
            required = ['type']
            x_kubernetes_unions = [{'discriminator': 'type', 'fields-to-discriminateBy': {'localhostProfile': 'LocalhostProfile'}}]
            _attrs = ['localhostProfile', 'type']
            localhostProfile = {'type': 'string', 'descr': 'localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet\'s configured seccomp profile location. Must only be set if type is "Localhost".'}
            type = {'type': 'string', 'descr': 'type indicates which kind of seccomp profile will be applied. Valid options are:\n\nLocalhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.\n\n'}
        R.localhostProfile = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_core_v1_Secret:
        """#/definitions/io.k8s.api.core.v1.Secret"""
        class R:
            description = 'Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'Secret', 'version': 'v1'}]
            _attrs = ['apiVersion', 'data', 'immutable', 'kind', 'metadata', 'stringData', 'type']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            data = {'type': 'object', 'additionalProperties': {'type': 'string', 'format': 'byte'}, 'descr': "Data contains the secret data. Each key must consist of alphanumeric characters, '-', '_' or '.'. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4"}
            immutable = {'type': 'boolean', 'descr': 'Immutable, if set to true, ensures that data stored in the Secret cannot be updated (only object metadata can be modified). If not set to true, the field can be modified at any time. Defaulted to nil.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            stringData = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'descr': 'stringData allows specifying non-binary secret data in string form. It is provided as a write-only input field for convenience. All keys and values are merged into the data field on write, overwriting any existing values. The stringData field is never output when reading from the API.'}
            type = {'type': 'string', 'descr': 'Used to facilitate programmatic handling of secret data. More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types'}
        R.apiVersion = str_dflt
        R.data = {}
        R.immutable = True
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.stringData = {}
        R.type = str_dflt
    class definitions_io_k8s_api_core_v1_SecretEnvSource:
        """#/definitions/io.k8s.api.core.v1.SecretEnvSource"""
        class R:
            description = 'SecretEnvSource selects a Secret to populate the environment variables with.\n\nThe contents of the target Secret"s Data field will represent the key-value pairs as environment variables.'
            type = 'object'
            _attrs = ['name', 'optional']
            name = {'type': 'string', 'descr': 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'}
            optional = {'type': 'boolean', 'descr': 'Specify whether the Secret must be defined'}
        R.name = name
        R.optional = True
    class definitions_io_k8s_api_core_v1_SecretKeySelector:
        """#/definitions/io.k8s.api.core.v1.SecretKeySelector"""
        class R:
            description = 'SecretKeySelector selects a key of a Secret.'
            type = 'object'
            required = ['key']
            x_kubernetes_map_type = 'atomic'
            _attrs = ['key', 'name', 'optional']
            key = {'type': 'string', 'descr': 'The key of the secret to select from.  Must be a valid secret key.'}
            name = {'type': 'string', 'descr': 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'}
            optional = {'type': 'boolean', 'descr': 'Specify whether the Secret or its key must be defined'}
        R.key = str_dflt
        R.name = name
        R.optional = True
    class definitions_io_k8s_api_core_v1_SecretList:
        """#/definitions/io.k8s.api.core.v1.SecretList"""
        class R:
            description = 'SecretList is a list of Secret.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'SecretList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_Secret, 'descr': 'Items is a list of secret objects. More info: https://kubernetes.io/docs/concepts/configuration/secret'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_Secret]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_core_v1_SecretProjection:
        """#/definitions/io.k8s.api.core.v1.SecretProjection"""
        class R:
            description = 'Adapts a secret into a projected volume.\n\nThe contents of the target Secret"s Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.'
            type = 'object'
            _attrs = ['items', 'name', 'optional']
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_KeyToPath, 'descr': "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."}
            name = {'type': 'string', 'descr': 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'}
            optional = {'type': 'boolean', 'descr': 'Specify whether the Secret or its key must be defined'}
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_KeyToPath]
        R.name = name
        R.optional = True
    class definitions_io_k8s_api_core_v1_SecretReference:
        """#/definitions/io.k8s.api.core.v1.SecretReference"""
        class R:
            description = 'SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace'
            type = 'object'
            x_kubernetes_map_type = 'atomic'
            _attrs = ['name', 'namespace']
            name = {'type': 'string', 'descr': 'Name is unique within a namespace to reference a secret resource.'}
            namespace = {'type': 'string', 'descr': 'Namespace defines the space within which the secret name must be unique.'}
        R.name = name
        R.namespace = namespace
    class definitions_io_k8s_api_core_v1_SecretVolumeSource:
        """#/definitions/io.k8s.api.core.v1.SecretVolumeSource"""
        class R:
            description = 'Adapts a Secret into a volume.\n\nThe contents of the target Secret"s Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.'
            type = 'object'
            _attrs = ['defaultMode', 'items', 'optional', 'secretName']
            defaultMode = {'type': 'integer', 'format': 'int32', 'descr': 'Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_KeyToPath, 'descr': "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."}
            optional = {'type': 'boolean', 'descr': 'Specify whether the Secret or its keys must be defined'}
            secretName = {'type': 'string', 'descr': "Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"}
        R.defaultMode = 0
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_KeyToPath]
        R.optional = True
        R.secretName = str_dflt
    class definitions_io_k8s_api_core_v1_SecurityContext:
        """#/definitions/io.k8s.api.core.v1.SecurityContext"""
        class R:
            description = 'SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.'
            type = 'object'
            _attrs = ['allowPrivilegeEscalation', 'capabilities', 'privileged', 'procMount', 'readOnlyRootFilesystem', 'runAsGroup', 'runAsNonRoot', 'runAsUser', 'seLinuxOptions', 'seccompProfile', 'windowsOptions']
            allowPrivilegeEscalation = {'type': 'boolean', 'descr': 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.'}
            capabilities = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_Capabilities, 'descr': 'The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.'}
            privileged = {'type': 'boolean', 'descr': 'Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.'}
            procMount = {'type': 'string', 'descr': 'procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.'}
            readOnlyRootFilesystem = {'type': 'boolean', 'descr': 'Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.'}
            runAsGroup = {'type': 'integer', 'format': 'int64', 'descr': 'The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.'}
            runAsNonRoot = {'type': 'boolean', 'descr': 'Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'}
            runAsUser = {'type': 'integer', 'format': 'int64', 'descr': 'The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.'}
            seLinuxOptions = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SELinuxOptions, 'descr': 'The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.'}
            seccompProfile = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SeccompProfile, 'descr': 'The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.'}
            windowsOptions = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_WindowsSecurityContextOptions, 'descr': 'The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.'}
        R.allowPrivilegeEscalation = True
        R.capabilities = lambda: Defs.definitions_io_k8s_api_core_v1_Capabilities
        R.privileged = True
        R.procMount = str_dflt
        R.readOnlyRootFilesystem = True
        R.runAsGroup = 0
        R.runAsNonRoot = True
        R.runAsUser = 0
        R.seLinuxOptions = lambda: Defs.definitions_io_k8s_api_core_v1_SELinuxOptions
        R.seccompProfile = lambda: Defs.definitions_io_k8s_api_core_v1_SeccompProfile
        R.windowsOptions = lambda: Defs.definitions_io_k8s_api_core_v1_WindowsSecurityContextOptions
    class definitions_io_k8s_api_core_v1_Service:
        """#/definitions/io.k8s.api.core.v1.Service"""
        class R:
            description = 'Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'Service', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ServiceSpec, 'descr': 'Spec defines the behavior of a service. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ServiceStatus, 'descr': 'Most recently observed status of the service. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_core_v1_ServiceSpec
        R.status = lambda: Defs.definitions_io_k8s_api_core_v1_ServiceStatus
    class definitions_io_k8s_api_core_v1_ServiceAccount:
        """#/definitions/io.k8s.api.core.v1.ServiceAccount"""
        class R:
            description = 'ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'ServiceAccount', 'version': 'v1'}]
            _attrs = ['apiVersion', 'automountServiceAccountToken', 'imagePullSecrets', 'kind', 'metadata', 'secrets']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            automountServiceAccountToken = {'type': 'boolean', 'descr': 'AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level.'}
            imagePullSecrets = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference, 'descr': 'ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            secrets = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference, 'x-kubernetes-patch-merge-key': 'name', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount. More info: https://kubernetes.io/docs/concepts/configuration/secret'}
        R.apiVersion = str_dflt
        R.automountServiceAccountToken = True
        R.imagePullSecrets = [lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.secrets = [lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference]
    class definitions_io_k8s_api_core_v1_ServiceAccountList:
        """#/definitions/io.k8s.api.core.v1.ServiceAccountList"""
        class R:
            description = 'ServiceAccountList is a list of ServiceAccount objects'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'ServiceAccountList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ServiceAccount, 'descr': 'List of ServiceAccounts. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_ServiceAccount]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_core_v1_ServiceAccountTokenProjection:
        """#/definitions/io.k8s.api.core.v1.ServiceAccountTokenProjection"""
        class R:
            description = 'ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).'
            type = 'object'
            required = ['path']
            _attrs = ['audience', 'expirationSeconds', 'path']
            audience = {'type': 'string', 'descr': 'Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.'}
            expirationSeconds = {'type': 'integer', 'format': 'int64', 'descr': 'ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.'}
            path = {'type': 'string', 'descr': 'Path is the path relative to the mount point of the file to project the token into.'}
        R.audience = str_dflt
        R.expirationSeconds = 0
        R.path = path
    class definitions_io_k8s_api_core_v1_ServiceList:
        """#/definitions/io.k8s.api.core.v1.ServiceList"""
        class R:
            description = 'ServiceList holds a list of services.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'ServiceList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_Service, 'descr': 'List of services'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_core_v1_Service]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_core_v1_ServicePort:
        """#/definitions/io.k8s.api.core.v1.ServicePort"""
        class R:
            description = 'ServicePort contains information on service"s port.'
            type = 'object'
            required = ['port']
            _attrs = ['appProtocol', 'name', 'nodePort', 'port', 'protocol', 'targetPort']
            appProtocol = {'type': 'string', 'descr': 'The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.'}
            name = {'type': 'string', 'descr': "The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service."}
            nodePort = {'type': 'integer', 'format': 'int32', 'descr': 'The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'}
            port = {'type': 'integer', 'format': 'int32', 'descr': 'The port that will be exposed by this service.'}
            protocol = {'type': 'string', 'descr': 'The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.\n\n'}
            targetPort = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString, 'descr': "Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service"}
        R.appProtocol = str_dflt
        R.name = name
        R.nodePort = 0
        R.port = 0
        R.protocol = str_dflt
        R.targetPort = lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString
    class definitions_io_k8s_api_core_v1_ServiceSpec:
        """#/definitions/io.k8s.api.core.v1.ServiceSpec"""
        class R:
            description = 'ServiceSpec describes the attributes that a user creates on a service.'
            type = 'object'
            _attrs = ['allocateLoadBalancerNodePorts', 'clusterIP', 'clusterIPs', 'externalIPs', 'externalName', 'externalTrafficPolicy', 'healthCheckNodePort', 'internalTrafficPolicy', 'ipFamilies', 'ipFamilyPolicy', 'loadBalancerClass', 'loadBalancerIP', 'loadBalancerSourceRanges', 'ports', 'publishNotReadyAddresses', 'selector', 'sessionAffinity', 'sessionAffinityConfig', 'type']
            allocateLoadBalancerNodePorts = {'type': 'boolean', 'descr': 'allocateLoadBalancerNodePorts defines if NodePorts will be automatically allocated for services with type LoadBalancer.  Default is "true". It may be set to "false" if the cluster load-balancer does not rely on NodePorts.  If the caller requests specific NodePorts (by specifying a value), those requests will be respected, regardless of this field. This field may only be set for services with type LoadBalancer and will be cleared if the type is changed to any other type. This field is beta-level and is only honored by servers that enable the ServiceLBNodePortControl feature.'}
            clusterIP = {'type': 'string', 'descr': 'clusterIP is the IP address of the service and is usually assigned randomly. If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail. This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be blank) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above).  Valid values are "None", empty string (""), or a valid IP address. Setting this to "None" makes a "headless service" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required.  Only applies to types ClusterIP, NodePort, and LoadBalancer. If this field is specified when creating a Service of type ExternalName, creation will fail. This field will be wiped when updating a Service to type ExternalName. More info: htt...'}
            clusterIPs = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'atomic', 'descr': 'ClusterIPs is a list of IP addresses assigned to this service, and are usually assigned randomly.  If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail. This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be empty) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above).  Valid values are "None", empty string (""), or a valid IP address.  Setting this to "None" makes a "headless service" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required.  Only applies to types ClusterIP, NodePort, and LoadBalancer. If this field is specified when creating a Service of type ExternalName, creation will fail. This field will be wiped when updating a Service to type Exter...'}
            externalIPs = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.'}
            externalName = {'type': 'string', 'descr': 'externalName is the external reference that discovery mechanisms will return as an alias for this service (e.g. a DNS CNAME record). No proxying will be involved.  Must be a lowercase RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".'}
            externalTrafficPolicy = {'type': 'string', 'descr': 'externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. "Local" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. "Cluster" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.\n\n'}
            healthCheckNodePort = {'type': 'integer', 'format': 'int32', 'descr': 'healthCheckNodePort specifies the healthcheck nodePort for the service. This only applies when type is set to LoadBalancer and externalTrafficPolicy is set to Local. If a value is specified, is in-range, and is not in use, it will be used.  If not specified, a value will be automatically allocated.  External systems (e.g. load-balancers) can use this port to determine if a given node holds endpoints for this service or not.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type).'}
            internalTrafficPolicy = {'type': 'string', 'descr': 'InternalTrafficPolicy specifies if the cluster internal traffic should be routed to all endpoints or node-local endpoints only. "Cluster" routes internal traffic to a Service to all endpoints. "Local" routes traffic to node-local endpoints only, traffic is dropped if no node-local endpoints are ready. The default value is "Cluster".'}
            ipFamilies = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'atomic', 'descr': 'IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this service. This field is usually assigned automatically based on cluster configuration and the ipFamilyPolicy field. If this field is specified manually, the requested family is available in the cluster, and ipFamilyPolicy allows it, it will be used; otherwise creation of the service will fail. This field is conditionally mutable: it allows for adding or removing a secondary IP family, but it does not allow changing the primary IP family of the Service. Valid values are "IPv4" and "IPv6".  This field only applies to Services of types ClusterIP, NodePort, and LoadBalancer, and does apply to "headless" services. This field will be wiped when updating a Service to type ExternalName.\n\nThis field may hold a maximum of two entries (dual-stack families, in either order).  These families must correspond to the values of the clusterIPs field, if specified. Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field...'}
            ipFamilyPolicy = {'type': 'string', 'descr': 'IPFamilyPolicy represents the dual-stack-ness requested or required by this Service. If there is no value provided, then this field will be set to SingleStack. Services can be "SingleStack" (a single IP family), "PreferDualStack" (two IP families on dual-stack configured clusters or a single IP family on single-stack clusters), or "RequireDualStack" (two IP families on dual-stack configured clusters, otherwise fail). The ipFamilies and clusterIPs fields depend on the value of this field. This field will be wiped when updating a service to type ExternalName.'}
            loadBalancerClass = {'type': 'string', 'descr': 'loadBalancerClass is the class of the load balancer implementation this Service belongs to. If specified, the value of this field must be a label-style identifier, with an optional prefix, e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users. This field can only be set when the Service type is \'LoadBalancer\'. If not set, the default load balancer implementation is used, today this is typically done through the cloud provider integration, but should apply for any default implementation. If set, it is assumed that a load balancer implementation is watching for Services with a matching class. Any default load balancer implementation (e.g. cloud providers) should ignore Services that set this field. This field can only be set when creating or updating a Service to type \'LoadBalancer\'. Once set, it can not be changed. This field will be wiped when a service is updated to a non \'LoadBalancer\' type.'}
            loadBalancerIP = {'type': 'string', 'descr': 'Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.'}
            loadBalancerSourceRanges = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/'}
            ports = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_ServicePort, 'x-kubernetes-list-map-keys': ['port', 'protocol'], 'x-kubernetes-list-type': 'map', 'x-kubernetes-patch-merge-key': 'port', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'}
            publishNotReadyAddresses = {'type': 'boolean', 'descr': 'publishNotReadyAddresses indicates that any agent which deals with endpoints for this Service should disregard any indications of ready/not-ready. The primary use case for setting this field is for a StatefulSet\'s Headless Service to propagate SRV DNS records for its Pods for the purpose of peer discovery. The Kubernetes controllers that generate Endpoints and EndpointSlice resources for Services interpret this to mean that all endpoints are considered "ready" even if the Pods themselves are not. Agents which consume only Kubernetes generated endpoints through the Endpoints or EndpointSlice resources can safely assume this behavior.'}
            selector = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'x-kubernetes-map-type': 'atomic', 'descr': 'Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/'}
            sessionAffinity = {'type': 'string', 'descr': 'Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n\n'}
            sessionAffinityConfig = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SessionAffinityConfig, 'descr': 'sessionAffinityConfig contains the configurations of session affinity.'}
            type = {'type': 'string', 'descr': 'type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object or EndpointSlice objects. If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a virtual IP. "NodePort" builds on ClusterIP and allocates a port on every node which routes to the same endpoints as the clusterIP. "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the same endpoints as the clusterIP. "ExternalName" aliases this service to the specified externalName. Several other fields do not apply to ExternalName services. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-s...'}
        R.allocateLoadBalancerNodePorts = True
        R.clusterIP = str_dflt
        R.clusterIPs = [str_dflt]
        R.externalIPs = [str_dflt]
        R.externalName = str_dflt
        R.externalTrafficPolicy = str_dflt
        R.healthCheckNodePort = 0
        R.internalTrafficPolicy = str_dflt
        R.ipFamilies = [str_dflt]
        R.ipFamilyPolicy = str_dflt
        R.loadBalancerClass = str_dflt
        R.loadBalancerIP = str_dflt
        R.loadBalancerSourceRanges = [str_dflt]
        R.ports = [lambda: Defs.definitions_io_k8s_api_core_v1_ServicePort]
        R.publishNotReadyAddresses = True
        R.selector = {}
        R.sessionAffinity = str_dflt
        R.sessionAffinityConfig = lambda: Defs.definitions_io_k8s_api_core_v1_SessionAffinityConfig
        R.type = str_dflt
    class definitions_io_k8s_api_core_v1_ServiceStatus:
        """#/definitions/io.k8s.api.core.v1.ServiceStatus"""
        class R:
            description = 'ServiceStatus represents the current status of a service.'
            type = 'object'
            _attrs = ['conditions', 'loadBalancer']
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Condition, 'x-kubernetes-list-map-keys': ['type'], 'x-kubernetes-list-type': 'map', 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'Current service state'}
            loadBalancer = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_LoadBalancerStatus, 'descr': 'LoadBalancer contains the current status of the load-balancer, if one is present.'}
        R.conditions = [lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Condition]
        R.loadBalancer = lambda: Defs.definitions_io_k8s_api_core_v1_LoadBalancerStatus
    class definitions_io_k8s_api_core_v1_SessionAffinityConfig:
        """#/definitions/io.k8s.api.core.v1.SessionAffinityConfig"""
        class R:
            description = 'SessionAffinityConfig represents the configurations of session affinity.'
            type = 'object'
            _attrs = ['clientIP']
            clientIP = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ClientIPConfig, 'descr': 'clientIP contains the configurations of Client IP based session affinity.'}
        R.clientIP = lambda: Defs.definitions_io_k8s_api_core_v1_ClientIPConfig
    class definitions_io_k8s_api_core_v1_StorageOSPersistentVolumeSource:
        """#/definitions/io.k8s.api.core.v1.StorageOSPersistentVolumeSource"""
        class R:
            description = 'Represents a StorageOS persistent volume resource.'
            type = 'object'
            _attrs = ['fsType', 'readOnly', 'secretRef', 'volumeName', 'volumeNamespace']
            fsType = {'type': 'string', 'descr': 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.'}
            readOnly = {'type': 'boolean', 'descr': 'Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'}
            secretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference, 'descr': 'SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.'}
            volumeName = {'type': 'string', 'descr': 'VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.'}
            volumeNamespace = {'type': 'string', 'descr': 'VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod\'s namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.'}
        R.fsType = str_dflt
        R.readOnly = True
        R.secretRef = lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference
        R.volumeName = str_dflt
        R.volumeNamespace = str_dflt
    class definitions_io_k8s_api_core_v1_StorageOSVolumeSource:
        """#/definitions/io.k8s.api.core.v1.StorageOSVolumeSource"""
        class R:
            description = 'Represents a StorageOS persistent volume resource.'
            type = 'object'
            _attrs = ['fsType', 'readOnly', 'secretRef', 'volumeName', 'volumeNamespace']
            fsType = {'type': 'string', 'descr': 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.'}
            readOnly = {'type': 'boolean', 'descr': 'Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'}
            secretRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference, 'descr': 'SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.'}
            volumeName = {'type': 'string', 'descr': 'VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.'}
            volumeNamespace = {'type': 'string', 'descr': 'VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod\'s namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.'}
        R.fsType = str_dflt
        R.readOnly = True
        R.secretRef = lambda: Defs.definitions_io_k8s_api_core_v1_LocalObjectReference
        R.volumeName = str_dflt
        R.volumeNamespace = str_dflt
    class definitions_io_k8s_api_core_v1_Sysctl:
        """#/definitions/io.k8s.api.core.v1.Sysctl"""
        class R:
            description = 'Sysctl defines a kernel parameter to be set'
            type = 'object'
            required = ['name', 'value']
            _attrs = ['name', 'value']
            name = {'type': 'string', 'descr': 'Name of a property to set'}
            value = {'type': 'string', 'descr': 'Value of a property to set'}
        R.name = name
        R.value = str_dflt
    class definitions_io_k8s_api_core_v1_TCPSocketAction:
        """#/definitions/io.k8s.api.core.v1.TCPSocketAction"""
        class R:
            description = 'TCPSocketAction describes an action based on opening a socket'
            type = 'object'
            required = ['port']
            _attrs = ['host', 'port']
            host = {'type': 'string', 'descr': 'Optional: Host name to connect to, defaults to the pod IP.'}
            port = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString, 'descr': 'Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.'}
        R.host = str_dflt
        R.port = lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString
    class definitions_io_k8s_api_core_v1_Taint:
        """#/definitions/io.k8s.api.core.v1.Taint"""
        class R:
            description = 'The node this Taint is attached to has the "effect" on any pod that does not tolerate the Taint.'
            type = 'object'
            required = ['key', 'effect']
            _attrs = ['effect', 'key', 'timeAdded', 'value']
            effect = {'type': 'string', 'descr': 'Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n\n'}
            key = {'type': 'string', 'descr': 'Required. The taint key to be applied to a node.'}
            timeAdded = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.'}
            value = {'type': 'string', 'descr': 'The taint value corresponding to the taint key.'}
        R.effect = str_dflt
        R.key = str_dflt
        R.timeAdded = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.value = str_dflt
    class definitions_io_k8s_api_core_v1_Toleration:
        """#/definitions/io.k8s.api.core.v1.Toleration"""
        class R:
            description = 'The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.'
            type = 'object'
            _attrs = ['effect', 'key', 'operator', 'tolerationSeconds', 'value']
            effect = {'type': 'string', 'descr': 'Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n\n'}
            key = {'type': 'string', 'descr': 'Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.'}
            operator = {'type': 'string', 'descr': "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\n\n"}
            tolerationSeconds = {'type': 'integer', 'format': 'int64', 'descr': 'TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.'}
            value = {'type': 'string', 'descr': 'Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.'}
        R.effect = str_dflt
        R.key = str_dflt
        R.operator = str_dflt
        R.tolerationSeconds = 0
        R.value = str_dflt
    class definitions_io_k8s_api_core_v1_TopologySelectorLabelRequirement:
        """#/definitions/io.k8s.api.core.v1.TopologySelectorLabelRequirement"""
        class R:
            description = 'A topology selector requirement is a selector that matches given label. This is an alpha feature and may change in the future.'
            type = 'object'
            required = ['key', 'values']
            _attrs = ['key', 'values']
            key = {'type': 'string', 'descr': 'The label key that the selector applies to.'}
            values = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'An array of string values. One value must match the label to be selected. Each entry in Values is ORed.'}
        R.key = str_dflt
        R.values = [str_dflt]
    class definitions_io_k8s_api_core_v1_TopologySelectorTerm:
        """#/definitions/io.k8s.api.core.v1.TopologySelectorTerm"""
        class R:
            description = 'A topology selector term represents the result of label queries. A null or empty topology selector term matches no objects. The requirements of them are ANDed. It provides a subset of functionality as NodeSelectorTerm. This is an alpha feature and may change in the future.'
            type = 'object'
            x_kubernetes_map_type = 'atomic'
            _attrs = ['matchLabelExpressions']
            matchLabelExpressions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_TopologySelectorLabelRequirement, 'descr': 'A list of topology selector requirements by labels.'}
        R.matchLabelExpressions = [lambda: Defs.definitions_io_k8s_api_core_v1_TopologySelectorLabelRequirement]
    class definitions_io_k8s_api_core_v1_TopologySpreadConstraint:
        """#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"""
        class R:
            description = 'TopologySpreadConstraint specifies how to spread matching pods among the given topology.'
            type = 'object'
            required = ['maxSkew', 'topologyKey', 'whenUnsatisfiable']
            _attrs = ['labelSelector', 'maxSkew', 'topologyKey', 'whenUnsatisfiable']
            labelSelector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.'}
            maxSkew = {'type': 'integer', 'format': 'int32', 'descr': "MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed."}
            topologyKey = {'type': 'string', 'descr': 'TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. It\'s a required field.'}
            whenUnsatisfiable = {'type': 'string', 'descr': 'WhenUnsatisfiable indicates how to deal with a pod if it doesn\'t satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered "Unsatisfiable" for an incoming pod if and only if every possible node assignment for that pod would violate "MaxSkew" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won\'t make it *more* imbalanced. It\'s a required field.\n\n'}
        R.labelSelector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.maxSkew = 0
        R.topologyKey = str_dflt
        R.whenUnsatisfiable = str_dflt
    class definitions_io_k8s_api_core_v1_TypedLocalObjectReference:
        """#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"""
        class R:
            description = 'TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.'
            type = 'object'
            required = ['kind', 'name']
            x_kubernetes_map_type = 'atomic'
            _attrs = ['apiGroup', 'kind', 'name']
            apiGroup = {'type': 'string', 'descr': 'APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.'}
            kind = {'type': 'string', 'descr': 'Kind is the type of resource being referenced'}
            name = {'type': 'string', 'descr': 'Name is the name of resource being referenced'}
        R.apiGroup = str_dflt
        R.kind = str_dflt
        R.name = name
    class definitions_io_k8s_api_core_v1_Volume:
        """#/definitions/io.k8s.api.core.v1.Volume"""
        class R:
            description = 'Volume represents a named volume in a pod that may be accessed by any container in the pod.'
            type = 'object'
            required = ['name']
            _attrs = ['awsElasticBlockStore', 'azureDisk', 'azureFile', 'cephfs', 'cinder', 'configMap', 'csi', 'downwardAPI', 'emptyDir', 'ephemeral', 'fc', 'flexVolume', 'flocker', 'gcePersistentDisk', 'gitRepo', 'glusterfs', 'hostPath', 'iscsi', 'name', 'nfs', 'persistentVolumeClaim', 'photonPersistentDisk', 'portworxVolume', 'projected', 'quobyte', 'rbd', 'scaleIO', 'secret', 'storageos', 'vsphereVolume']
            awsElasticBlockStore = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSource, 'descr': "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"}
            azureDisk = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_AzureDiskVolumeSource, 'descr': 'AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.'}
            azureFile = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_AzureFileVolumeSource, 'descr': 'AzureFile represents an Azure File Service mount on the host and bind mount to the pod.'}
            cephfs = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_CephFSVolumeSource, 'descr': "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime"}
            cinder = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_CinderVolumeSource, 'descr': 'Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'}
            configMap = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ConfigMapVolumeSource, 'descr': 'ConfigMap represents a configMap that should populate this volume'}
            csi = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_CSIVolumeSource, 'descr': 'CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).'}
            downwardAPI = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_DownwardAPIVolumeSource, 'descr': 'DownwardAPI represents downward API about the pod that should populate this volume'}
            emptyDir = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_EmptyDirVolumeSource, 'descr': "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"}
            ephemeral = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_EphemeralVolumeSource, 'descr': "Ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.\n\nUse this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.\n\nA pod can use both types of ephemeral volumes an..."}
            fc = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_FCVolumeSource, 'descr': "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod."}
            flexVolume = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_FlexVolumeSource, 'descr': 'FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.'}
            flocker = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_FlockerVolumeSource, 'descr': "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running"}
            gcePersistentDisk = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_GCEPersistentDiskVolumeSource, 'descr': "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"}
            gitRepo = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_GitRepoVolumeSource, 'descr': "GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container."}
            glusterfs = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_GlusterfsVolumeSource, 'descr': "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md"}
            hostPath = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_HostPathVolumeSource, 'descr': 'HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'}
            iscsi = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ISCSIVolumeSource, 'descr': "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md"}
            name = {'type': 'string', 'descr': "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"}
            nfs = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NFSVolumeSource, 'descr': "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"}
            persistentVolumeClaim = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaimVolumeSource, 'descr': 'PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'}
            photonPersistentDisk = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PhotonPersistentDiskVolumeSource, 'descr': 'PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine'}
            portworxVolume = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PortworxVolumeSource, 'descr': 'PortworxVolume represents a portworx volume attached and mounted on kubelets host machine'}
            projected = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ProjectedVolumeSource, 'descr': 'Items for all in one resources secrets, configmaps, and downward API'}
            quobyte = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_QuobyteVolumeSource, 'descr': "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime"}
            rbd = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_RBDVolumeSource, 'descr': "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md"}
            scaleIO = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ScaleIOVolumeSource, 'descr': 'ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.'}
            secret = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SecretVolumeSource, 'descr': 'Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'}
            storageos = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_StorageOSVolumeSource, 'descr': 'StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.'}
            vsphereVolume = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_VsphereVirtualDiskVolumeSource, 'descr': 'VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine'}
        R.awsElasticBlockStore = lambda: Defs.definitions_io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSource
        R.azureDisk = lambda: Defs.definitions_io_k8s_api_core_v1_AzureDiskVolumeSource
        R.azureFile = lambda: Defs.definitions_io_k8s_api_core_v1_AzureFileVolumeSource
        R.cephfs = lambda: Defs.definitions_io_k8s_api_core_v1_CephFSVolumeSource
        R.cinder = lambda: Defs.definitions_io_k8s_api_core_v1_CinderVolumeSource
        R.configMap = lambda: Defs.definitions_io_k8s_api_core_v1_ConfigMapVolumeSource
        R.csi = lambda: Defs.definitions_io_k8s_api_core_v1_CSIVolumeSource
        R.downwardAPI = lambda: Defs.definitions_io_k8s_api_core_v1_DownwardAPIVolumeSource
        R.emptyDir = lambda: Defs.definitions_io_k8s_api_core_v1_EmptyDirVolumeSource
        R.ephemeral = lambda: Defs.definitions_io_k8s_api_core_v1_EphemeralVolumeSource
        R.fc = lambda: Defs.definitions_io_k8s_api_core_v1_FCVolumeSource
        R.flexVolume = lambda: Defs.definitions_io_k8s_api_core_v1_FlexVolumeSource
        R.flocker = lambda: Defs.definitions_io_k8s_api_core_v1_FlockerVolumeSource
        R.gcePersistentDisk = lambda: Defs.definitions_io_k8s_api_core_v1_GCEPersistentDiskVolumeSource
        R.gitRepo = lambda: Defs.definitions_io_k8s_api_core_v1_GitRepoVolumeSource
        R.glusterfs = lambda: Defs.definitions_io_k8s_api_core_v1_GlusterfsVolumeSource
        R.hostPath = lambda: Defs.definitions_io_k8s_api_core_v1_HostPathVolumeSource
        R.iscsi = lambda: Defs.definitions_io_k8s_api_core_v1_ISCSIVolumeSource
        R.name = name
        R.nfs = lambda: Defs.definitions_io_k8s_api_core_v1_NFSVolumeSource
        R.persistentVolumeClaim = lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaimVolumeSource
        R.photonPersistentDisk = lambda: Defs.definitions_io_k8s_api_core_v1_PhotonPersistentDiskVolumeSource
        R.portworxVolume = lambda: Defs.definitions_io_k8s_api_core_v1_PortworxVolumeSource
        R.projected = lambda: Defs.definitions_io_k8s_api_core_v1_ProjectedVolumeSource
        R.quobyte = lambda: Defs.definitions_io_k8s_api_core_v1_QuobyteVolumeSource
        R.rbd = lambda: Defs.definitions_io_k8s_api_core_v1_RBDVolumeSource
        R.scaleIO = lambda: Defs.definitions_io_k8s_api_core_v1_ScaleIOVolumeSource
        R.secret = lambda: Defs.definitions_io_k8s_api_core_v1_SecretVolumeSource
        R.storageos = lambda: Defs.definitions_io_k8s_api_core_v1_StorageOSVolumeSource
        R.vsphereVolume = lambda: Defs.definitions_io_k8s_api_core_v1_VsphereVirtualDiskVolumeSource
    class definitions_io_k8s_api_core_v1_VolumeDevice:
        """#/definitions/io.k8s.api.core.v1.VolumeDevice"""
        class R:
            description = 'volumeDevice describes a mapping of a raw block device within a container.'
            type = 'object'
            required = ['name', 'devicePath']
            _attrs = ['devicePath', 'name']
            devicePath = {'type': 'string', 'descr': 'devicePath is the path inside of the container that the device will be mapped to.'}
            name = {'type': 'string', 'descr': 'name must match the name of a persistentVolumeClaim in the pod'}
        R.devicePath = str_dflt
        R.name = name
    class definitions_io_k8s_api_core_v1_VolumeMount:
        """#/definitions/io.k8s.api.core.v1.VolumeMount"""
        class R:
            description = 'VolumeMount describes a mounting of a Volume within a container.'
            type = 'object'
            required = ['name', 'mountPath']
            _attrs = ['mountPath', 'mountPropagation', 'name', 'readOnly', 'subPath', 'subPathExpr']
            mountPath = {'type': 'string', 'descr': "Path within the container at which the volume should be mounted.  Must not contain ':'."}
            mountPropagation = {'type': 'string', 'descr': 'mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.'}
            name = {'type': 'string', 'descr': 'This must match the Name of a Volume.'}
            readOnly = {'type': 'boolean', 'descr': 'Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.'}
            subPath = {'type': 'string', 'descr': 'Path within the volume from which the container\'s volume should be mounted. Defaults to "" (volume\'s root).'}
            subPathExpr = {'type': 'string', 'descr': 'Expanded path within the volume from which the container\'s volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container\'s environment. Defaults to "" (volume\'s root). SubPathExpr and SubPath are mutually exclusive.'}
        R.mountPath = str_dflt
        R.mountPropagation = str_dflt
        R.name = name
        R.readOnly = True
        R.subPath = str_dflt
        R.subPathExpr = str_dflt
    class definitions_io_k8s_api_core_v1_VolumeNodeAffinity:
        """#/definitions/io.k8s.api.core.v1.VolumeNodeAffinity"""
        class R:
            description = 'VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from.'
            type = 'object'
            _attrs = ['required']
            required = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_NodeSelector, 'descr': 'Required specifies hard node constraints that must be met.'}
        R.required = lambda: Defs.definitions_io_k8s_api_core_v1_NodeSelector
    class definitions_io_k8s_api_core_v1_VolumeProjection:
        """#/definitions/io.k8s.api.core.v1.VolumeProjection"""
        class R:
            description = 'Projection that may be projected along with other supported volume types'
            type = 'object'
            _attrs = ['configMap', 'downwardAPI', 'secret', 'serviceAccountToken']
            configMap = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ConfigMapProjection, 'descr': 'information about the configMap data to project'}
            downwardAPI = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_DownwardAPIProjection, 'descr': 'information about the downwardAPI data to project'}
            secret = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SecretProjection, 'descr': 'information about the secret data to project'}
            serviceAccountToken = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ServiceAccountTokenProjection, 'descr': 'information about the serviceAccountToken data to project'}
        R.configMap = lambda: Defs.definitions_io_k8s_api_core_v1_ConfigMapProjection
        R.downwardAPI = lambda: Defs.definitions_io_k8s_api_core_v1_DownwardAPIProjection
        R.secret = lambda: Defs.definitions_io_k8s_api_core_v1_SecretProjection
        R.serviceAccountToken = lambda: Defs.definitions_io_k8s_api_core_v1_ServiceAccountTokenProjection
    class definitions_io_k8s_api_core_v1_VsphereVirtualDiskVolumeSource:
        """#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"""
        class R:
            description = 'Represents a vSphere volume resource.'
            type = 'object'
            required = ['volumePath']
            _attrs = ['fsType', 'storagePolicyID', 'storagePolicyName', 'volumePath']
            fsType = {'type': 'string', 'descr': 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.'}
            storagePolicyID = {'type': 'string', 'descr': 'Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.'}
            storagePolicyName = {'type': 'string', 'descr': 'Storage Policy Based Management (SPBM) profile name.'}
            volumePath = {'type': 'string', 'descr': 'Path that identifies vSphere volume vmdk'}
        R.fsType = str_dflt
        R.storagePolicyID = str_dflt
        R.storagePolicyName = str_dflt
        R.volumePath = str_dflt
    class definitions_io_k8s_api_core_v1_WeightedPodAffinityTerm:
        """#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"""
        class R:
            description = 'The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)'
            type = 'object'
            required = ['weight', 'podAffinityTerm']
            _attrs = ['podAffinityTerm', 'weight']
            podAffinityTerm = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PodAffinityTerm, 'descr': 'Required. A pod affinity term, associated with the corresponding weight.'}
            weight = {'type': 'integer', 'format': 'int32', 'descr': 'weight associated with matching the corresponding podAffinityTerm, in the range 1-100.'}
        R.podAffinityTerm = lambda: Defs.definitions_io_k8s_api_core_v1_PodAffinityTerm
        R.weight = 0
    class definitions_io_k8s_api_core_v1_WindowsSecurityContextOptions:
        """#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions"""
        class R:
            description = 'WindowsSecurityContextOptions contain Windows-specific options and credentials.'
            type = 'object'
            _attrs = ['gmsaCredentialSpec', 'gmsaCredentialSpecName', 'hostProcess', 'runAsUserName']
            gmsaCredentialSpec = {'type': 'string', 'descr': 'GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.'}
            gmsaCredentialSpecName = {'type': 'string', 'descr': 'GMSACredentialSpecName is the name of the GMSA credential spec to use.'}
            hostProcess = {'type': 'boolean', 'descr': "HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true."}
            runAsUserName = {'type': 'string', 'descr': 'The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.'}
        R.gmsaCredentialSpec = str_dflt
        R.gmsaCredentialSpecName = str_dflt
        R.hostProcess = True
        R.runAsUserName = str_dflt
    class definitions_io_k8s_api_discovery_v1_Endpoint:
        """#/definitions/io.k8s.api.discovery.v1.Endpoint"""
        class R:
            description = 'Endpoint represents a single logical "backend" implementing a service.'
            type = 'object'
            required = ['addresses']
            _attrs = ['addresses', 'conditions', 'deprecatedTopology', 'hints', 'hostname', 'nodeName', 'targetRef', 'zone']
            addresses = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': 'addresses of this endpoint. The contents of this field are interpreted according to the corresponding EndpointSlice addressType field. Consumers must handle different types of addresses in the context of their own capabilities. This must contain at least one address but no more than 100.'}
            conditions = {'$ref': lambda: Defs.definitions_io_k8s_api_discovery_v1_EndpointConditions, 'descr': 'conditions contains information about the current status of the endpoint.'}
            deprecatedTopology = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'descr': 'deprecatedTopology contains topology information part of the v1beta1 API. This field is deprecated, and will be removed when the v1beta1 API is removed (no sooner than kubernetes v1.24).  While this field can hold values, it is not writable through the v1 API, and any attempts to write to it will be silently ignored. Topology information can be found in the zone and nodeName fields instead.'}
            hints = {'$ref': lambda: Defs.definitions_io_k8s_api_discovery_v1_EndpointHints, 'descr': 'hints contains information associated with how an endpoint should be consumed.'}
            hostname = {'type': 'string', 'descr': 'hostname of this endpoint. This field may be used by consumers of endpoints to distinguish endpoints from each other (e.g. in DNS names). Multiple endpoints which use the same hostname should be considered fungible (e.g. multiple A values in DNS). Must be lowercase and pass DNS Label (RFC 1123) validation.'}
            nodeName = {'type': 'string', 'descr': 'nodeName represents the name of the Node hosting this endpoint. This can be used to determine endpoints local to a Node. This field can be enabled with the EndpointSliceNodeName feature gate.'}
            targetRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference, 'descr': 'targetRef is a reference to a Kubernetes object that represents this endpoint.'}
            zone = {'type': 'string', 'descr': 'zone is the name of the Zone this endpoint exists in.'}
        R.addresses = [str_dflt]
        R.conditions = lambda: Defs.definitions_io_k8s_api_discovery_v1_EndpointConditions
        R.deprecatedTopology = {}
        R.hints = lambda: Defs.definitions_io_k8s_api_discovery_v1_EndpointHints
        R.hostname = str_dflt
        R.nodeName = str_dflt
        R.targetRef = lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference
        R.zone = str_dflt
    class definitions_io_k8s_api_discovery_v1_EndpointConditions:
        """#/definitions/io.k8s.api.discovery.v1.EndpointConditions"""
        class R:
            description = 'EndpointConditions represents the current condition of an endpoint.'
            type = 'object'
            _attrs = ['ready', 'serving', 'terminating']
            ready = {'type': 'boolean', 'descr': 'ready indicates that this endpoint is prepared to receive traffic, according to whatever system is managing the endpoint. A nil value indicates an unknown state. In most cases consumers should interpret this unknown state as ready. For compatibility reasons, ready should never be "true" for terminating endpoints.'}
            serving = {'type': 'boolean', 'descr': 'serving is identical to ready except that it is set regardless of the terminating state of endpoints. This condition should be set to true for a ready endpoint that is terminating. If nil, consumers should defer to the ready condition. This field can be enabled with the EndpointSliceTerminatingCondition feature gate.'}
            terminating = {'type': 'boolean', 'descr': 'terminating indicates that this endpoint is terminating. A nil value indicates an unknown state. Consumers should interpret this unknown state to mean that the endpoint is not terminating. This field can be enabled with the EndpointSliceTerminatingCondition feature gate.'}
        R.ready = True
        R.serving = True
        R.terminating = True
    class definitions_io_k8s_api_discovery_v1_EndpointHints:
        """#/definitions/io.k8s.api.discovery.v1.EndpointHints"""
        class R:
            description = 'EndpointHints provides hints describing how an endpoint should be consumed.'
            type = 'object'
            _attrs = ['forZones']
            forZones = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_discovery_v1_ForZone, 'x-kubernetes-list-type': 'atomic', 'descr': 'forZones indicates the zone(s) this endpoint should be consumed by to enable topology aware routing.'}
        R.forZones = [lambda: Defs.definitions_io_k8s_api_discovery_v1_ForZone]
    class definitions_io_k8s_api_discovery_v1_EndpointPort:
        """#/definitions/io.k8s.api.discovery.v1.EndpointPort"""
        class R:
            description = 'EndpointPort represents a Port used by an EndpointSlice'
            type = 'object'
            x_kubernetes_map_type = 'atomic'
            _attrs = ['appProtocol', 'name', 'port', 'protocol']
            appProtocol = {'type': 'string', 'descr': 'The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.'}
            name = {'type': 'string', 'descr': "The name of this port. All ports in an EndpointSlice must have a unique name. If the EndpointSlice is dervied from a Kubernetes service, this corresponds to the Service.ports[].name. Name must either be an empty string or pass DNS_LABEL validation: * must be no more than 63 characters long. * must consist of lower case alphanumeric characters or '-'. * must start and end with an alphanumeric character. Default is empty string."}
            port = {'type': 'integer', 'format': 'int32', 'descr': 'The port number of the endpoint. If this is not specified, ports are not restricted and must be interpreted in the context of the specific consumer.'}
            protocol = {'type': 'string', 'descr': 'The IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.'}
        R.appProtocol = str_dflt
        R.name = name
        R.port = 0
        R.protocol = str_dflt
    class definitions_io_k8s_api_discovery_v1_EndpointSlice:
        """#/definitions/io.k8s.api.discovery.v1.EndpointSlice"""
        class R:
            description = 'EndpointSlice represents a subset of the endpoints that implement a service. For a given service there may be multiple EndpointSlice objects, selected by labels, which must be joined to produce the full set of endpoints.'
            type = 'object'
            required = ['addressType', 'endpoints']
            x_kubernetes_group_version_kind = [{'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1'}]
            _attrs = ['addressType', 'apiVersion', 'endpoints', 'kind', 'metadata', 'ports']
            addressType = {'type': 'string', 'descr': 'addressType specifies the type of address carried by this EndpointSlice. All addresses in this slice must be the same type. This field is immutable after creation. The following address types are currently supported: * IPv4: Represents an IPv4 Address. * IPv6: Represents an IPv6 Address. * FQDN: Represents a Fully Qualified Domain Name.\n\n'}
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            endpoints = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_discovery_v1_Endpoint, 'x-kubernetes-list-type': 'atomic', 'descr': 'endpoints is a list of unique endpoints in this slice. Each slice may include a maximum of 1000 endpoints.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata."}
            ports = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_discovery_v1_EndpointPort, 'x-kubernetes-list-type': 'atomic', 'descr': 'ports specifies the list of network ports exposed by each endpoint in this slice. Each port must have a unique name. When ports is empty, it indicates that there are no defined ports. When a port is defined with a nil port value, it indicates "all ports". Each slice may include a maximum of 100 ports.'}
        R.addressType = str_dflt
        R.apiVersion = str_dflt
        R.endpoints = [lambda: Defs.definitions_io_k8s_api_discovery_v1_Endpoint]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.ports = [lambda: Defs.definitions_io_k8s_api_discovery_v1_EndpointPort]
    class definitions_io_k8s_api_discovery_v1_EndpointSliceList:
        """#/definitions/io.k8s.api.discovery.v1.EndpointSliceList"""
        class R:
            description = 'EndpointSliceList represents a list of endpoint slices'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'discovery.k8s.io', 'kind': 'EndpointSliceList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_discovery_v1_EndpointSlice, 'descr': 'List of endpoint slices'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata.'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_discovery_v1_EndpointSlice]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_discovery_v1_ForZone:
        """#/definitions/io.k8s.api.discovery.v1.ForZone"""
        class R:
            description = 'ForZone provides information about which zones should consume this endpoint.'
            type = 'object'
            required = ['name']
            _attrs = ['name']
            name = {'type': 'string', 'descr': 'name represents the name of the zone.'}
        R.name = name
    class definitions_io_k8s_api_discovery_v1beta1_Endpoint:
        """#/definitions/io.k8s.api.discovery.v1beta1.Endpoint"""
        class R:
            description = 'Endpoint represents a single logical "backend" implementing a service.'
            type = 'object'
            required = ['addresses']
            _attrs = ['addresses', 'conditions', 'hints', 'hostname', 'nodeName', 'targetRef', 'topology']
            addresses = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': 'addresses of this endpoint. The contents of this field are interpreted according to the corresponding EndpointSlice addressType field. Consumers must handle different types of addresses in the context of their own capabilities. This must contain at least one address but no more than 100.'}
            conditions = {'$ref': lambda: Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointConditions, 'descr': 'conditions contains information about the current status of the endpoint.'}
            hints = {'$ref': lambda: Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointHints, 'descr': 'hints contains information associated with how an endpoint should be consumed.'}
            hostname = {'type': 'string', 'descr': 'hostname of this endpoint. This field may be used by consumers of endpoints to distinguish endpoints from each other (e.g. in DNS names). Multiple endpoints which use the same hostname should be considered fungible (e.g. multiple A values in DNS). Must be lowercase and pass DNS Label (RFC 1123) validation.'}
            nodeName = {'type': 'string', 'descr': 'nodeName represents the name of the Node hosting this endpoint. This can be used to determine endpoints local to a Node. This field can be enabled with the EndpointSliceNodeName feature gate.'}
            targetRef = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference, 'descr': 'targetRef is a reference to a Kubernetes object that represents this endpoint.'}
            topology = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'descr': 'topology contains arbitrary topology information associated with the endpoint. These key/value pairs must conform with the label format. https://kubernetes.io/docs/concepts/overview/working-with-objects/labels Topology may include a maximum of 16 key/value pairs. This includes, but is not limited to the following well known keys: * kubernetes.io/hostname: the value indicates the hostname of the node\n  where the endpoint is located. This should match the corresponding\n  node label.\n* topology.kubernetes.io/zone: the value indicates the zone where the\n  endpoint is located. This should match the corresponding node label.\n* topology.kubernetes.io/region: the value indicates the region where the\n  endpoint is located. This should match the corresponding node label.\nThis field is deprecated and will be removed in future api versions.'}
        R.addresses = [str_dflt]
        R.conditions = lambda: Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointConditions
        R.hints = lambda: Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointHints
        R.hostname = str_dflt
        R.nodeName = str_dflt
        R.targetRef = lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference
        R.topology = {}
    class definitions_io_k8s_api_discovery_v1beta1_EndpointConditions:
        """#/definitions/io.k8s.api.discovery.v1beta1.EndpointConditions"""
        class R:
            description = 'EndpointConditions represents the current condition of an endpoint.'
            type = 'object'
            _attrs = ['ready', 'serving', 'terminating']
            ready = {'type': 'boolean', 'descr': 'ready indicates that this endpoint is prepared to receive traffic, according to whatever system is managing the endpoint. A nil value indicates an unknown state. In most cases consumers should interpret this unknown state as ready. For compatibility reasons, ready should never be "true" for terminating endpoints.'}
            serving = {'type': 'boolean', 'descr': 'serving is identical to ready except that it is set regardless of the terminating state of endpoints. This condition should be set to true for a ready endpoint that is terminating. If nil, consumers should defer to the ready condition. This field can be enabled with the EndpointSliceTerminatingCondition feature gate.'}
            terminating = {'type': 'boolean', 'descr': 'terminating indicates that this endpoint is terminating. A nil value indicates an unknown state. Consumers should interpret this unknown state to mean that the endpoint is not terminating. This field can be enabled with the EndpointSliceTerminatingCondition feature gate.'}
        R.ready = True
        R.serving = True
        R.terminating = True
    class definitions_io_k8s_api_discovery_v1beta1_EndpointHints:
        """#/definitions/io.k8s.api.discovery.v1beta1.EndpointHints"""
        class R:
            description = 'EndpointHints provides hints describing how an endpoint should be consumed.'
            type = 'object'
            _attrs = ['forZones']
            forZones = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_discovery_v1beta1_ForZone, 'x-kubernetes-list-type': 'atomic', 'descr': 'forZones indicates the zone(s) this endpoint should be consumed by to enable topology aware routing. May contain a maximum of 8 entries.'}
        R.forZones = [lambda: Defs.definitions_io_k8s_api_discovery_v1beta1_ForZone]
    class definitions_io_k8s_api_discovery_v1beta1_EndpointPort:
        """#/definitions/io.k8s.api.discovery.v1beta1.EndpointPort"""
        class R:
            description = 'EndpointPort represents a Port used by an EndpointSlice'
            type = 'object'
            _attrs = ['appProtocol', 'name', 'port', 'protocol']
            appProtocol = {'type': 'string', 'descr': 'The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.'}
            name = {'type': 'string', 'descr': "The name of this port. All ports in an EndpointSlice must have a unique name. If the EndpointSlice is dervied from a Kubernetes service, this corresponds to the Service.ports[].name. Name must either be an empty string or pass DNS_LABEL validation: * must be no more than 63 characters long. * must consist of lower case alphanumeric characters or '-'. * must start and end with an alphanumeric character. Default is empty string."}
            port = {'type': 'integer', 'format': 'int32', 'descr': 'The port number of the endpoint. If this is not specified, ports are not restricted and must be interpreted in the context of the specific consumer.'}
            protocol = {'type': 'string', 'descr': 'The IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.'}
        R.appProtocol = str_dflt
        R.name = name
        R.port = 0
        R.protocol = str_dflt
    class definitions_io_k8s_api_discovery_v1beta1_EndpointSlice:
        """#/definitions/io.k8s.api.discovery.v1beta1.EndpointSlice"""
        class R:
            description = 'EndpointSlice represents a subset of the endpoints that implement a service. For a given service there may be multiple EndpointSlice objects, selected by labels, which must be joined to produce the full set of endpoints.'
            type = 'object'
            required = ['addressType', 'endpoints']
            x_kubernetes_group_version_kind = [{'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1beta1'}]
            _attrs = ['addressType', 'apiVersion', 'endpoints', 'kind', 'metadata', 'ports']
            addressType = {'type': 'string', 'descr': 'addressType specifies the type of address carried by this EndpointSlice. All addresses in this slice must be the same type. This field is immutable after creation. The following address types are currently supported: * IPv4: Represents an IPv4 Address. * IPv6: Represents an IPv6 Address. * FQDN: Represents a Fully Qualified Domain Name.'}
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            endpoints = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_discovery_v1beta1_Endpoint, 'x-kubernetes-list-type': 'atomic', 'descr': 'endpoints is a list of unique endpoints in this slice. Each slice may include a maximum of 1000 endpoints.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata."}
            ports = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointPort, 'x-kubernetes-list-type': 'atomic', 'descr': 'ports specifies the list of network ports exposed by each endpoint in this slice. Each port must have a unique name. When ports is empty, it indicates that there are no defined ports. When a port is defined with a nil port value, it indicates "all ports". Each slice may include a maximum of 100 ports.'}
        R.addressType = str_dflt
        R.apiVersion = str_dflt
        R.endpoints = [lambda: Defs.definitions_io_k8s_api_discovery_v1beta1_Endpoint]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.ports = [lambda: Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointPort]
    class definitions_io_k8s_api_discovery_v1beta1_EndpointSliceList:
        """#/definitions/io.k8s.api.discovery.v1beta1.EndpointSliceList"""
        class R:
            description = 'EndpointSliceList represents a list of endpoint slices'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'discovery.k8s.io', 'kind': 'EndpointSliceList', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointSlice, 'descr': 'List of endpoint slices'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata.'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointSlice]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_discovery_v1beta1_ForZone:
        """#/definitions/io.k8s.api.discovery.v1beta1.ForZone"""
        class R:
            description = 'ForZone provides information about which zones should consume this endpoint.'
            type = 'object'
            required = ['name']
            _attrs = ['name']
            name = {'type': 'string', 'descr': 'name represents the name of the zone.'}
        R.name = name
    class definitions_io_k8s_api_events_v1_Event:
        """#/definitions/io.k8s.api.events.v1.Event"""
        class R:
            description = 'Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system. Events have a limited retention time and triggers and messages may evolve with time.  Event consumers should not rely on the timing of an event with a given Reason reflecting a consistent underlying trigger, or the continued existence of events with that Reason.  Events should be treated as informative, best-effort, supplemental data.'
            type = 'object'
            required = ['eventTime']
            x_kubernetes_group_version_kind = [{'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1'}]
            _attrs = ['action', 'apiVersion', 'deprecatedCount', 'deprecatedFirstTimestamp', 'deprecatedLastTimestamp', 'deprecatedSource', 'eventTime', 'kind', 'metadata', 'note', 'reason', 'regarding', 'related', 'reportingController', 'reportingInstance', 'series', 'type']
            action = {'type': 'string', 'descr': 'action is what action was taken/failed regarding to the regarding object. It is machine-readable. This field cannot be empty for new Events and it can have at most 128 characters.'}
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            deprecatedCount = {'type': 'integer', 'format': 'int32', 'descr': 'deprecatedCount is the deprecated field assuring backward compatibility with core.v1 Event type.'}
            deprecatedFirstTimestamp = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'deprecatedFirstTimestamp is the deprecated field assuring backward compatibility with core.v1 Event type.'}
            deprecatedLastTimestamp = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'deprecatedLastTimestamp is the deprecated field assuring backward compatibility with core.v1 Event type.'}
            deprecatedSource = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_EventSource, 'descr': 'deprecatedSource is the deprecated field assuring backward compatibility with core.v1 Event type.'}
            eventTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime, 'descr': 'eventTime is the time when this Event was first observed. It is required.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            note = {'type': 'string', 'descr': 'note is a human-readable description of the status of this operation. Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB.'}
            reason = {'type': 'string', 'descr': 'reason is why the action was taken. It is human-readable. This field cannot be empty for new Events and it can have at most 128 characters.'}
            regarding = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference, 'descr': "regarding contains the object this Event is about. In most cases it's an Object reporting controller implements, e.g. ReplicaSetController implements ReplicaSets and this event is emitted because it acts on some changes in a ReplicaSet object."}
            related = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference, 'descr': 'related is the optional secondary object for more complex actions. E.g. when regarding object triggers a creation or deletion of related object.'}
            reportingController = {'type': 'string', 'descr': 'reportingController is the name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`. This field cannot be empty for new Events.'}
            reportingInstance = {'type': 'string', 'descr': 'reportingInstance is the ID of the controller instance, e.g. `kubelet-xyzf`. This field cannot be empty for new Events and it can have at most 128 characters.'}
            series = {'$ref': lambda: Defs.definitions_io_k8s_api_events_v1_EventSeries, 'descr': "series is data about the Event series this event represents or nil if it's a singleton Event."}
            type = {'type': 'string', 'descr': 'type is the type of this event (Normal, Warning), new types could be added in the future. It is machine-readable. This field cannot be empty for new Events.'}
        R.action = str_dflt
        R.apiVersion = str_dflt
        R.deprecatedCount = 0
        R.deprecatedFirstTimestamp = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.deprecatedLastTimestamp = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.deprecatedSource = lambda: Defs.definitions_io_k8s_api_core_v1_EventSource
        R.eventTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.note = str_dflt
        R.reason = str_dflt
        R.regarding = lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference
        R.related = lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference
        R.reportingController = str_dflt
        R.reportingInstance = str_dflt
        R.series = lambda: Defs.definitions_io_k8s_api_events_v1_EventSeries
        R.type = str_dflt
    class definitions_io_k8s_api_events_v1_EventList:
        """#/definitions/io.k8s.api.events.v1.EventList"""
        class R:
            description = 'EventList is a list of Event objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'events.k8s.io', 'kind': 'EventList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_events_v1_Event, 'descr': 'items is a list of schema objects.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_events_v1_Event]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_events_v1_EventSeries:
        """#/definitions/io.k8s.api.events.v1.EventSeries"""
        class R:
            description = 'EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time. How often to update the EventSeries is up to the event reporters. The default event reporter in "k8s.io/client-go/tools/events/event_broadcaster.go" shows how this struct is updated on heartbeats and can guide customized reporter implementations.'
            type = 'object'
            required = ['count', 'lastObservedTime']
            _attrs = ['count', 'lastObservedTime']
            count = {'type': 'integer', 'format': 'int32', 'descr': 'count is the number of occurrences in this series up to the last heartbeat time.'}
            lastObservedTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime, 'descr': 'lastObservedTime is the time when last Event from the series was seen before last heartbeat.'}
        R.count = 0
        R.lastObservedTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime
    class definitions_io_k8s_api_events_v1beta1_Event:
        """#/definitions/io.k8s.api.events.v1beta1.Event"""
        class R:
            description = 'Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system. Events have a limited retention time and triggers and messages may evolve with time.  Event consumers should not rely on the timing of an event with a given Reason reflecting a consistent underlying trigger, or the continued existence of events with that Reason.  Events should be treated as informative, best-effort, supplemental data.'
            type = 'object'
            required = ['eventTime']
            x_kubernetes_group_version_kind = [{'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1beta1'}]
            _attrs = ['action', 'apiVersion', 'deprecatedCount', 'deprecatedFirstTimestamp', 'deprecatedLastTimestamp', 'deprecatedSource', 'eventTime', 'kind', 'metadata', 'note', 'reason', 'regarding', 'related', 'reportingController', 'reportingInstance', 'series', 'type']
            action = {'type': 'string', 'descr': 'action is what action was taken/failed regarding to the regarding object. It is machine-readable. This field can have at most 128 characters.'}
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            deprecatedCount = {'type': 'integer', 'format': 'int32', 'descr': 'deprecatedCount is the deprecated field assuring backward compatibility with core.v1 Event type.'}
            deprecatedFirstTimestamp = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'deprecatedFirstTimestamp is the deprecated field assuring backward compatibility with core.v1 Event type.'}
            deprecatedLastTimestamp = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'deprecatedLastTimestamp is the deprecated field assuring backward compatibility with core.v1 Event type.'}
            deprecatedSource = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_EventSource, 'descr': 'deprecatedSource is the deprecated field assuring backward compatibility with core.v1 Event type.'}
            eventTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime, 'descr': 'eventTime is the time when this Event was first observed. It is required.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            note = {'type': 'string', 'descr': 'note is a human-readable description of the status of this operation. Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB.'}
            reason = {'type': 'string', 'descr': 'reason is why the action was taken. It is human-readable. This field can have at most 128 characters.'}
            regarding = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference, 'descr': "regarding contains the object this Event is about. In most cases it's an Object reporting controller implements, e.g. ReplicaSetController implements ReplicaSets and this event is emitted because it acts on some changes in a ReplicaSet object."}
            related = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference, 'descr': 'related is the optional secondary object for more complex actions. E.g. when regarding object triggers a creation or deletion of related object.'}
            reportingController = {'type': 'string', 'descr': 'reportingController is the name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`. This field cannot be empty for new Events.'}
            reportingInstance = {'type': 'string', 'descr': 'reportingInstance is the ID of the controller instance, e.g. `kubelet-xyzf`. This field cannot be empty for new Events and it can have at most 128 characters.'}
            series = {'$ref': lambda: Defs.definitions_io_k8s_api_events_v1beta1_EventSeries, 'descr': "series is data about the Event series this event represents or nil if it's a singleton Event."}
            type = {'type': 'string', 'descr': 'type is the type of this event (Normal, Warning), new types could be added in the future. It is machine-readable.'}
        R.action = str_dflt
        R.apiVersion = str_dflt
        R.deprecatedCount = 0
        R.deprecatedFirstTimestamp = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.deprecatedLastTimestamp = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.deprecatedSource = lambda: Defs.definitions_io_k8s_api_core_v1_EventSource
        R.eventTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.note = str_dflt
        R.reason = str_dflt
        R.regarding = lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference
        R.related = lambda: Defs.definitions_io_k8s_api_core_v1_ObjectReference
        R.reportingController = str_dflt
        R.reportingInstance = str_dflt
        R.series = lambda: Defs.definitions_io_k8s_api_events_v1beta1_EventSeries
        R.type = str_dflt
    class definitions_io_k8s_api_events_v1beta1_EventList:
        """#/definitions/io.k8s.api.events.v1beta1.EventList"""
        class R:
            description = 'EventList is a list of Event objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'events.k8s.io', 'kind': 'EventList', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_events_v1beta1_Event, 'descr': 'items is a list of schema objects.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_events_v1beta1_Event]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_events_v1beta1_EventSeries:
        """#/definitions/io.k8s.api.events.v1beta1.EventSeries"""
        class R:
            description = 'EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.'
            type = 'object'
            required = ['count', 'lastObservedTime']
            _attrs = ['count', 'lastObservedTime']
            count = {'type': 'integer', 'format': 'int32', 'descr': 'count is the number of occurrences in this series up to the last heartbeat time.'}
            lastObservedTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime, 'descr': 'lastObservedTime is the time when last Event from the series was seen before last heartbeat.'}
        R.count = 0
        R.lastObservedTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime
    class definitions_io_k8s_api_flowcontrol_v1beta1_FlowDistinguisherMethod:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.FlowDistinguisherMethod"""
        class R:
            description = 'FlowDistinguisherMethod specifies the method of a flow distinguisher.'
            type = 'object'
            required = ['type']
            _attrs = ['type']
            type = {'type': 'string', 'descr': '`type` is the type of flow distinguisher method The supported types are "ByUser" and "ByNamespace". Required.'}
        R.type = str_dflt
    class definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.FlowSchema"""
        class R:
            description = 'FlowSchema defines the schema of a group of flows. Note that a flow is made up of a set of inbound API requests with similar attributes and is identified by a pair of strings: the name of the FlowSchema and a "flow distinguisher".'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchemaSpec, 'descr': '`spec` is the specification of the desired behavior of a FlowSchema. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchemaStatus, 'descr': '`status` is the current status of a FlowSchema. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchemaSpec
        R.status = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchemaStatus
    class definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchemaCondition:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.FlowSchemaCondition"""
        class R:
            description = 'FlowSchemaCondition describes conditions for a FlowSchema.'
            type = 'object'
            _attrs = ['lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': '`lastTransitionTime` is the last time the condition transitioned from one status to another.'}
            message = {'type': 'string', 'descr': '`message` is a human-readable message indicating details about last transition.'}
            reason = {'type': 'string', 'descr': "`reason` is a unique, one-word, CamelCase reason for the condition's last transition."}
            status = {'type': 'string', 'descr': '`status` is the status of the condition. Can be True, False, Unknown. Required.'}
            type = {'type': 'string', 'descr': '`type` is the type of the condition. Required.'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchemaList:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.FlowSchemaList"""
        class R:
            description = 'FlowSchemaList is a list of FlowSchema objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchemaList', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema, 'descr': '`items` is a list of FlowSchemas.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': '`metadata` is the standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchemaSpec:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.FlowSchemaSpec"""
        class R:
            description = 'FlowSchemaSpec describes how the FlowSchema"s specification looks like.'
            type = 'object'
            required = ['priorityLevelConfiguration']
            _attrs = ['distinguisherMethod', 'matchingPrecedence', 'priorityLevelConfiguration', 'rules']
            distinguisherMethod = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowDistinguisherMethod, 'descr': '`distinguisherMethod` defines how to compute the flow distinguisher for requests that match this schema. `nil` specifies that the distinguisher is disabled and thus will always be the empty string.'}
            matchingPrecedence = {'type': 'integer', 'format': 'int32', 'descr': '`matchingPrecedence` is used to choose among the FlowSchemas that match a given request. The chosen FlowSchema is among those with the numerically lowest (which we take to be logically highest) MatchingPrecedence.  Each MatchingPrecedence value must be ranged in [1,10000]. Note that if the precedence is not specified, it will be set to 1000 as default.'}
            priorityLevelConfiguration = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfigurationReference, 'descr': '`priorityLevelConfiguration` should reference a PriorityLevelConfiguration in the cluster. If the reference cannot be resolved, the FlowSchema will be ignored and marked as invalid in its status. Required.'}
            rules = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PolicyRulesWithSubjects, 'x-kubernetes-list-type': 'atomic', 'descr': '`rules` describes which requests will match this flow schema. This FlowSchema matches a request if and only if at least one member of rules matches the request. if it is an empty slice, there will be no requests matching the FlowSchema.'}
        R.distinguisherMethod = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowDistinguisherMethod
        R.matchingPrecedence = 0
        R.priorityLevelConfiguration = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfigurationReference
        R.rules = [lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PolicyRulesWithSubjects]
    class definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchemaStatus:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.FlowSchemaStatus"""
        class R:
            description = 'FlowSchemaStatus represents the current state of a FlowSchema.'
            type = 'object'
            _attrs = ['conditions']
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchemaCondition, 'x-kubernetes-list-map-keys': ['type'], 'x-kubernetes-list-type': 'map', 'descr': '`conditions` is a list of the current states of FlowSchema.'}
        R.conditions = [lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchemaCondition]
    class definitions_io_k8s_api_flowcontrol_v1beta1_GroupSubject:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.GroupSubject"""
        class R:
            description = 'GroupSubject holds detailed information for group-kind subject.'
            type = 'object'
            required = ['name']
            _attrs = ['name']
            name = {'type': 'string', 'descr': 'name is the user group that matches, or "*" to match all user groups. See https://github.com/kubernetes/apiserver/blob/master/pkg/authentication/user/user.go for some well-known group names. Required.'}
        R.name = name
    class definitions_io_k8s_api_flowcontrol_v1beta1_LimitResponse:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.LimitResponse"""
        class R:
            description = 'LimitResponse defines how to handle requests that can not be executed right now.'
            type = 'object'
            required = ['type']
            x_kubernetes_unions = [{'discriminator': 'type', 'fields-to-discriminateBy': {'queuing': 'Queuing'}}]
            _attrs = ['queuing', 'type']
            queuing = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_QueuingConfiguration, 'descr': '`queuing` holds the configuration parameters for queuing. This field may be non-empty only if `type` is `"Queue"`.'}
            type = {'type': 'string', 'descr': '`type` is "Queue" or "Reject". "Queue" means that requests that can not be executed upon arrival are held in a queue until they can be executed or a queuing limit is reached. "Reject" means that requests that can not be executed upon arrival are rejected. Required.'}
        R.queuing = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_QueuingConfiguration
        R.type = str_dflt
    class definitions_io_k8s_api_flowcontrol_v1beta1_LimitedPriorityLevelConfiguration:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.LimitedPriorityLevelConfiguration"""
        class R:
            description = 'LimitedPriorityLevelConfiguration specifies how to handle requests that are subject to limits. It addresses two issues:\n * How are requests for this priority level limited?\n * What should be done with requests that exceed the limit?'
            type = 'object'
            _attrs = ['assuredConcurrencyShares', 'limitResponse']
            assuredConcurrencyShares = {'type': 'integer', 'format': 'int32', 'descr': "`assuredConcurrencyShares` (ACS) configures the execution limit, which is a limit on the number of requests of this priority level that may be exeucting at a given time.  ACS must be a positive number. The server's concurrency limit (SCL) is divided among the concurrency-controlled priority levels in proportion to their assured concurrency shares. This produces the assured concurrency value (ACV) --- the number of requests that may be executing at a time --- for each such priority level:\n\n            ACV(l) = ceil( SCL * ACS(l) / ( sum[priority levels k] ACS(k) ) )\n\nbigger numbers of ACS mean more reserved concurrent requests (at the expense of every other PL). This field has a default value of 30."}
            limitResponse = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_LimitResponse, 'descr': '`limitResponse` indicates what to do with requests that can not be executed right now'}
        R.assuredConcurrencyShares = 0
        R.limitResponse = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_LimitResponse
    class definitions_io_k8s_api_flowcontrol_v1beta1_NonResourcePolicyRule:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.NonResourcePolicyRule"""
        class R:
            description = 'NonResourcePolicyRule is a predicate that matches non-resource requests according to their verb and the target non-resource URL. A NonResourcePolicyRule matches a request if and only if both (a) at least one member of verbs matches the request and (b) at least one member of nonResourceURLs matches the request.'
            type = 'object'
            required = ['verbs', 'nonResourceURLs']
            _attrs = ['nonResourceURLs', 'verbs']
            nonResourceURLs = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': '`nonResourceURLs` is a set of url prefixes that a user should have access to and may not be empty. For example:\n  - "/healthz" is legal\n  - "/hea*" is illegal\n  - "/hea" is legal but matches nothing\n  - "/hea/*" also matches nothing\n  - "/healthz/*" matches all per-component health checks.\n"*" matches all non-resource urls. if it is present, it must be the only entry. Required.'}
            verbs = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': '`verbs` is a list of matching verbs and may not be empty. "*" matches all verbs. If it is present, it must be the only entry. Required.'}
        R.nonResourceURLs = [str_dflt]
        R.verbs = [str_dflt]
    class definitions_io_k8s_api_flowcontrol_v1beta1_PolicyRulesWithSubjects:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.PolicyRulesWithSubjects"""
        class R:
            description = 'PolicyRulesWithSubjects prescribes a test that applies to a request to an apiserver. The test considers the subject making the request, the verb being requested, and the resource to be acted upon. This PolicyRulesWithSubjects matches a request if and only if both (a) at least one member of subjects matches the request and (b) at least one member of resourceRules or nonResourceRules matches the request.'
            type = 'object'
            required = ['subjects']
            _attrs = ['nonResourceRules', 'resourceRules', 'subjects']
            nonResourceRules = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_NonResourcePolicyRule, 'x-kubernetes-list-type': 'atomic', 'descr': '`nonResourceRules` is a list of NonResourcePolicyRules that identify matching requests according to their verb and the target non-resource URL.'}
            resourceRules = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_ResourcePolicyRule, 'x-kubernetes-list-type': 'atomic', 'descr': '`resourceRules` is a slice of ResourcePolicyRules that identify matching requests according to their verb and the target resource. At least one of `resourceRules` and `nonResourceRules` has to be non-empty.'}
            subjects = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_Subject, 'x-kubernetes-list-type': 'atomic', 'descr': 'subjects is the list of normal user, serviceaccount, or group that this rule cares about. There must be at least one member in this slice. A slice that includes both the system:authenticated and system:unauthenticated user groups matches every request. Required.'}
        R.nonResourceRules = [lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_NonResourcePolicyRule]
        R.resourceRules = [lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_ResourcePolicyRule]
        R.subjects = [lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_Subject]
    class definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfiguration"""
        class R:
            description = 'PriorityLevelConfiguration represents the configuration of a priority level.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfigurationSpec, 'descr': '`spec` is the specification of the desired behavior of a "request-priority". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfigurationStatus, 'descr': '`status` is the current status of a "request-priority". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfigurationSpec
        R.status = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfigurationStatus
    class definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfigurationCondition:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfigurationCondition"""
        class R:
            description = 'PriorityLevelConfigurationCondition defines the condition of priority level.'
            type = 'object'
            _attrs = ['lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': '`lastTransitionTime` is the last time the condition transitioned from one status to another.'}
            message = {'type': 'string', 'descr': '`message` is a human-readable message indicating details about last transition.'}
            reason = {'type': 'string', 'descr': "`reason` is a unique, one-word, CamelCase reason for the condition's last transition."}
            status = {'type': 'string', 'descr': '`status` is the status of the condition. Can be True, False, Unknown. Required.'}
            type = {'type': 'string', 'descr': '`type` is the type of the condition. Required.'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfigurationList:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfigurationList"""
        class R:
            description = 'PriorityLevelConfigurationList is a list of PriorityLevelConfiguration objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfigurationList', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration, 'descr': '`items` is a list of request-priorities.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfigurationReference:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfigurationReference"""
        class R:
            description = 'PriorityLevelConfigurationReference contains information that points to the "request-priority" being used.'
            type = 'object'
            required = ['name']
            _attrs = ['name']
            name = {'type': 'string', 'descr': '`name` is the name of the priority level configuration being referenced Required.'}
        R.name = name
    class definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfigurationSpec:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfigurationSpec"""
        class R:
            description = 'PriorityLevelConfigurationSpec specifies the configuration of a priority level.'
            type = 'object'
            required = ['type']
            x_kubernetes_unions = [{'discriminator': 'type', 'fields-to-discriminateBy': {'limited': 'Limited'}}]
            _attrs = ['limited', 'type']
            limited = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_LimitedPriorityLevelConfiguration, 'descr': '`limited` specifies how requests are handled for a Limited priority level. This field must be non-empty if and only if `type` is `"Limited"`.'}
            type = {'type': 'string', 'descr': '`type` indicates whether this priority level is subject to limitation on request execution.  A value of `"Exempt"` means that requests of this priority level are not subject to a limit (and thus are never queued) and do not detract from the capacity made available to other priority levels.  A value of `"Limited"` means that (a) requests of this priority level _are_ subject to limits and (b) some of the server\'s limited capacity is made available exclusively to this priority level. Required.'}
        R.limited = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_LimitedPriorityLevelConfiguration
        R.type = str_dflt
    class definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfigurationStatus:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfigurationStatus"""
        class R:
            description = 'PriorityLevelConfigurationStatus represents the current state of a "request-priority".'
            type = 'object'
            _attrs = ['conditions']
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfigurationCondition, 'x-kubernetes-list-map-keys': ['type'], 'x-kubernetes-list-type': 'map', 'descr': '`conditions` is the current state of "request-priority".'}
        R.conditions = [lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfigurationCondition]
    class definitions_io_k8s_api_flowcontrol_v1beta1_QueuingConfiguration:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.QueuingConfiguration"""
        class R:
            description = 'QueuingConfiguration holds the configuration parameters for queuing'
            type = 'object'
            _attrs = ['handSize', 'queueLengthLimit', 'queues']
            handSize = {'type': 'integer', 'format': 'int32', 'descr': "`handSize` is a small positive number that configures the shuffle sharding of requests into queues.  When enqueuing a request at this priority level the request's flow identifier (a string pair) is hashed and the hash value is used to shuffle the list of queues and deal a hand of the size specified here.  The request is put into one of the shortest queues in that hand. `handSize` must be no larger than `queues`, and should be significantly smaller (so that a few heavy flows do not saturate most of the queues).  See the user-facing documentation for more extensive guidance on setting this field.  This field has a default value of 8."}
            queueLengthLimit = {'type': 'integer', 'format': 'int32', 'descr': '`queueLengthLimit` is the maximum number of requests allowed to be waiting in a given queue of this priority level at a time; excess requests are rejected.  This value must be positive.  If not specified, it will be defaulted to 50.'}
            queues = {'type': 'integer', 'format': 'int32', 'descr': '`queues` is the number of queues for this priority level. The queues exist independently at each apiserver. The value must be positive.  Setting it to 1 effectively precludes shufflesharding and thus makes the distinguisher method of associated flow schemas irrelevant.  This field has a default value of 64.'}
        R.handSize = 0
        R.queueLengthLimit = 0
        R.queues = 0
    class definitions_io_k8s_api_flowcontrol_v1beta1_ResourcePolicyRule:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.ResourcePolicyRule"""
        class R:
            description = 'ResourcePolicyRule is a predicate that matches some resource requests, testing the request"s verb and the target resource. A ResourcePolicyRule matches a resource request if and only if: (a) at least one member of verbs matches the request, (b) at least one member of apiGroups matches the request, (c) at least one member of resources matches the request, and (d) either (d1) the request does not specify a namespace (i.e., `Namespace==""`) and clusterScope is true or (d2) the request specifies a namespace and least one member of namespaces matches the request"s namespace.'
            type = 'object'
            required = ['verbs', 'apiGroups', 'resources']
            _attrs = ['apiGroups', 'clusterScope', 'namespaces', 'resources', 'verbs']
            apiGroups = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': '`apiGroups` is a list of matching API groups and may not be empty. "*" matches all API groups and, if present, must be the only entry. Required.'}
            clusterScope = {'type': 'boolean', 'descr': '`clusterScope` indicates whether to match requests that do not specify a namespace (which happens either because the resource is not namespaced or the request targets all namespaces). If this field is omitted or false then the `namespaces` field must contain a non-empty list.'}
            namespaces = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': '`namespaces` is a list of target namespaces that restricts matches.  A request that specifies a target namespace matches only if either (a) this list contains that target namespace or (b) this list contains "*".  Note that "*" matches any specified namespace but does not match a request that _does not specify_ a namespace (see the `clusterScope` field for that). This list may be empty, but only if `clusterScope` is true.'}
            resources = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': '`resources` is a list of matching resources (i.e., lowercase and plural) with, if desired, subresource.  For example, [ "services", "nodes/status" ].  This list may not be empty. "*" matches all resources and, if present, must be the only entry. Required.'}
            verbs = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': '`verbs` is a list of matching verbs and may not be empty. "*" matches all verbs and, if present, must be the only entry. Required.'}
        R.apiGroups = [str_dflt]
        R.clusterScope = True
        R.namespaces = [str_dflt]
        R.resources = [str_dflt]
        R.verbs = [str_dflt]
    class definitions_io_k8s_api_flowcontrol_v1beta1_ServiceAccountSubject:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.ServiceAccountSubject"""
        class R:
            description = 'ServiceAccountSubject holds detailed information for service-account-kind subject.'
            type = 'object'
            required = ['namespace', 'name']
            _attrs = ['name', 'namespace']
            name = {'type': 'string', 'descr': '`name` is the name of matching ServiceAccount objects, or "*" to match regardless of name. Required.'}
            namespace = {'type': 'string', 'descr': '`namespace` is the namespace of matching ServiceAccount objects. Required.'}
        R.name = name
        R.namespace = namespace
    class definitions_io_k8s_api_flowcontrol_v1beta1_Subject:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.Subject"""
        class R:
            description = 'Subject matches the originator of a request, as identified by the request authentication system. There are three ways of matching an originator; by user, group, or service account.'
            type = 'object'
            required = ['kind']
            x_kubernetes_unions = [{'discriminator': 'kind', 'fields-to-discriminateBy': {'group': 'Group', 'serviceAccount': 'ServiceAccount', 'user': 'User'}}]
            _attrs = ['group', 'kind', 'serviceAccount', 'user']
            group = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_GroupSubject, 'descr': '`group` matches based on user group name.'}
            kind = {'type': 'string', 'descr': '`kind` indicates which one of the other fields is non-empty. Required'}
            serviceAccount = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_ServiceAccountSubject, 'descr': '`serviceAccount` matches ServiceAccounts.'}
            user = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_UserSubject, 'descr': '`user` matches based on username.'}
        R.group = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_GroupSubject
        R.kind = str_dflt
        R.serviceAccount = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_ServiceAccountSubject
        R.user = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta1_UserSubject
    class definitions_io_k8s_api_flowcontrol_v1beta1_UserSubject:
        """#/definitions/io.k8s.api.flowcontrol.v1beta1.UserSubject"""
        class R:
            description = 'UserSubject holds detailed information for user-kind subject.'
            type = 'object'
            required = ['name']
            _attrs = ['name']
            name = {'type': 'string', 'descr': '`name` is the username that matches, or "*" to match all usernames. Required.'}
        R.name = name
    class definitions_io_k8s_api_flowcontrol_v1beta2_FlowDistinguisherMethod:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.FlowDistinguisherMethod"""
        class R:
            description = 'FlowDistinguisherMethod specifies the method of a flow distinguisher.'
            type = 'object'
            required = ['type']
            _attrs = ['type']
            type = {'type': 'string', 'descr': '`type` is the type of flow distinguisher method The supported types are "ByUser" and "ByNamespace". Required.'}
        R.type = str_dflt
    class definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.FlowSchema"""
        class R:
            description = 'FlowSchema defines the schema of a group of flows. Note that a flow is made up of a set of inbound API requests with similar attributes and is identified by a pair of strings: the name of the FlowSchema and a "flow distinguisher".'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta2'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchemaSpec, 'descr': '`spec` is the specification of the desired behavior of a FlowSchema. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchemaStatus, 'descr': '`status` is the current status of a FlowSchema. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchemaSpec
        R.status = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchemaStatus
    class definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchemaCondition:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.FlowSchemaCondition"""
        class R:
            description = 'FlowSchemaCondition describes conditions for a FlowSchema.'
            type = 'object'
            _attrs = ['lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': '`lastTransitionTime` is the last time the condition transitioned from one status to another.'}
            message = {'type': 'string', 'descr': '`message` is a human-readable message indicating details about last transition.'}
            reason = {'type': 'string', 'descr': "`reason` is a unique, one-word, CamelCase reason for the condition's last transition."}
            status = {'type': 'string', 'descr': '`status` is the status of the condition. Can be True, False, Unknown. Required.'}
            type = {'type': 'string', 'descr': '`type` is the type of the condition. Required.'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchemaList:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.FlowSchemaList"""
        class R:
            description = 'FlowSchemaList is a list of FlowSchema objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchemaList', 'version': 'v1beta2'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema, 'descr': '`items` is a list of FlowSchemas.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': '`metadata` is the standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchemaSpec:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.FlowSchemaSpec"""
        class R:
            description = 'FlowSchemaSpec describes how the FlowSchema"s specification looks like.'
            type = 'object'
            required = ['priorityLevelConfiguration']
            _attrs = ['distinguisherMethod', 'matchingPrecedence', 'priorityLevelConfiguration', 'rules']
            distinguisherMethod = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowDistinguisherMethod, 'descr': '`distinguisherMethod` defines how to compute the flow distinguisher for requests that match this schema. `nil` specifies that the distinguisher is disabled and thus will always be the empty string.'}
            matchingPrecedence = {'type': 'integer', 'format': 'int32', 'descr': '`matchingPrecedence` is used to choose among the FlowSchemas that match a given request. The chosen FlowSchema is among those with the numerically lowest (which we take to be logically highest) MatchingPrecedence.  Each MatchingPrecedence value must be ranged in [1,10000]. Note that if the precedence is not specified, it will be set to 1000 as default.'}
            priorityLevelConfiguration = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfigurationReference, 'descr': '`priorityLevelConfiguration` should reference a PriorityLevelConfiguration in the cluster. If the reference cannot be resolved, the FlowSchema will be ignored and marked as invalid in its status. Required.'}
            rules = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PolicyRulesWithSubjects, 'x-kubernetes-list-type': 'atomic', 'descr': '`rules` describes which requests will match this flow schema. This FlowSchema matches a request if and only if at least one member of rules matches the request. if it is an empty slice, there will be no requests matching the FlowSchema.'}
        R.distinguisherMethod = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowDistinguisherMethod
        R.matchingPrecedence = 0
        R.priorityLevelConfiguration = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfigurationReference
        R.rules = [lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PolicyRulesWithSubjects]
    class definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchemaStatus:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.FlowSchemaStatus"""
        class R:
            description = 'FlowSchemaStatus represents the current state of a FlowSchema.'
            type = 'object'
            _attrs = ['conditions']
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchemaCondition, 'x-kubernetes-list-map-keys': ['type'], 'x-kubernetes-list-type': 'map', 'descr': '`conditions` is a list of the current states of FlowSchema.'}
        R.conditions = [lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchemaCondition]
    class definitions_io_k8s_api_flowcontrol_v1beta2_GroupSubject:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.GroupSubject"""
        class R:
            description = 'GroupSubject holds detailed information for group-kind subject.'
            type = 'object'
            required = ['name']
            _attrs = ['name']
            name = {'type': 'string', 'descr': 'name is the user group that matches, or "*" to match all user groups. See https://github.com/kubernetes/apiserver/blob/master/pkg/authentication/user/user.go for some well-known group names. Required.'}
        R.name = name
    class definitions_io_k8s_api_flowcontrol_v1beta2_LimitResponse:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.LimitResponse"""
        class R:
            description = 'LimitResponse defines how to handle requests that can not be executed right now.'
            type = 'object'
            required = ['type']
            x_kubernetes_unions = [{'discriminator': 'type', 'fields-to-discriminateBy': {'queuing': 'Queuing'}}]
            _attrs = ['queuing', 'type']
            queuing = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_QueuingConfiguration, 'descr': '`queuing` holds the configuration parameters for queuing. This field may be non-empty only if `type` is `"Queue"`.'}
            type = {'type': 'string', 'descr': '`type` is "Queue" or "Reject". "Queue" means that requests that can not be executed upon arrival are held in a queue until they can be executed or a queuing limit is reached. "Reject" means that requests that can not be executed upon arrival are rejected. Required.'}
        R.queuing = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_QueuingConfiguration
        R.type = str_dflt
    class definitions_io_k8s_api_flowcontrol_v1beta2_LimitedPriorityLevelConfiguration:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.LimitedPriorityLevelConfiguration"""
        class R:
            description = 'LimitedPriorityLevelConfiguration specifies how to handle requests that are subject to limits. It addresses two issues:\n * How are requests for this priority level limited?\n * What should be done with requests that exceed the limit?'
            type = 'object'
            _attrs = ['assuredConcurrencyShares', 'limitResponse']
            assuredConcurrencyShares = {'type': 'integer', 'format': 'int32', 'descr': "`assuredConcurrencyShares` (ACS) configures the execution limit, which is a limit on the number of requests of this priority level that may be exeucting at a given time.  ACS must be a positive number. The server's concurrency limit (SCL) is divided among the concurrency-controlled priority levels in proportion to their assured concurrency shares. This produces the assured concurrency value (ACV) --- the number of requests that may be executing at a time --- for each such priority level:\n\n            ACV(l) = ceil( SCL * ACS(l) / ( sum[priority levels k] ACS(k) ) )\n\nbigger numbers of ACS mean more reserved concurrent requests (at the expense of every other PL). This field has a default value of 30."}
            limitResponse = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_LimitResponse, 'descr': '`limitResponse` indicates what to do with requests that can not be executed right now'}
        R.assuredConcurrencyShares = 0
        R.limitResponse = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_LimitResponse
    class definitions_io_k8s_api_flowcontrol_v1beta2_NonResourcePolicyRule:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.NonResourcePolicyRule"""
        class R:
            description = 'NonResourcePolicyRule is a predicate that matches non-resource requests according to their verb and the target non-resource URL. A NonResourcePolicyRule matches a request if and only if both (a) at least one member of verbs matches the request and (b) at least one member of nonResourceURLs matches the request.'
            type = 'object'
            required = ['verbs', 'nonResourceURLs']
            _attrs = ['nonResourceURLs', 'verbs']
            nonResourceURLs = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': '`nonResourceURLs` is a set of url prefixes that a user should have access to and may not be empty. For example:\n  - "/healthz" is legal\n  - "/hea*" is illegal\n  - "/hea" is legal but matches nothing\n  - "/hea/*" also matches nothing\n  - "/healthz/*" matches all per-component health checks.\n"*" matches all non-resource urls. if it is present, it must be the only entry. Required.'}
            verbs = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': '`verbs` is a list of matching verbs and may not be empty. "*" matches all verbs. If it is present, it must be the only entry. Required.'}
        R.nonResourceURLs = [str_dflt]
        R.verbs = [str_dflt]
    class definitions_io_k8s_api_flowcontrol_v1beta2_PolicyRulesWithSubjects:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.PolicyRulesWithSubjects"""
        class R:
            description = 'PolicyRulesWithSubjects prescribes a test that applies to a request to an apiserver. The test considers the subject making the request, the verb being requested, and the resource to be acted upon. This PolicyRulesWithSubjects matches a request if and only if both (a) at least one member of subjects matches the request and (b) at least one member of resourceRules or nonResourceRules matches the request.'
            type = 'object'
            required = ['subjects']
            _attrs = ['nonResourceRules', 'resourceRules', 'subjects']
            nonResourceRules = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_NonResourcePolicyRule, 'x-kubernetes-list-type': 'atomic', 'descr': '`nonResourceRules` is a list of NonResourcePolicyRules that identify matching requests according to their verb and the target non-resource URL.'}
            resourceRules = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_ResourcePolicyRule, 'x-kubernetes-list-type': 'atomic', 'descr': '`resourceRules` is a slice of ResourcePolicyRules that identify matching requests according to their verb and the target resource. At least one of `resourceRules` and `nonResourceRules` has to be non-empty.'}
            subjects = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_Subject, 'x-kubernetes-list-type': 'atomic', 'descr': 'subjects is the list of normal user, serviceaccount, or group that this rule cares about. There must be at least one member in this slice. A slice that includes both the system:authenticated and system:unauthenticated user groups matches every request. Required.'}
        R.nonResourceRules = [lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_NonResourcePolicyRule]
        R.resourceRules = [lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_ResourcePolicyRule]
        R.subjects = [lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_Subject]
    class definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfiguration"""
        class R:
            description = 'PriorityLevelConfiguration represents the configuration of a priority level.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta2'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfigurationSpec, 'descr': '`spec` is the specification of the desired behavior of a "request-priority". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfigurationStatus, 'descr': '`status` is the current status of a "request-priority". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfigurationSpec
        R.status = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfigurationStatus
    class definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfigurationCondition:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationCondition"""
        class R:
            description = 'PriorityLevelConfigurationCondition defines the condition of priority level.'
            type = 'object'
            _attrs = ['lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': '`lastTransitionTime` is the last time the condition transitioned from one status to another.'}
            message = {'type': 'string', 'descr': '`message` is a human-readable message indicating details about last transition.'}
            reason = {'type': 'string', 'descr': "`reason` is a unique, one-word, CamelCase reason for the condition's last transition."}
            status = {'type': 'string', 'descr': '`status` is the status of the condition. Can be True, False, Unknown. Required.'}
            type = {'type': 'string', 'descr': '`type` is the type of the condition. Required.'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfigurationList:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationList"""
        class R:
            description = 'PriorityLevelConfigurationList is a list of PriorityLevelConfiguration objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfigurationList', 'version': 'v1beta2'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration, 'descr': '`items` is a list of request-priorities.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfigurationReference:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationReference"""
        class R:
            description = 'PriorityLevelConfigurationReference contains information that points to the "request-priority" being used.'
            type = 'object'
            required = ['name']
            _attrs = ['name']
            name = {'type': 'string', 'descr': '`name` is the name of the priority level configuration being referenced Required.'}
        R.name = name
    class definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfigurationSpec:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationSpec"""
        class R:
            description = 'PriorityLevelConfigurationSpec specifies the configuration of a priority level.'
            type = 'object'
            required = ['type']
            x_kubernetes_unions = [{'discriminator': 'type', 'fields-to-discriminateBy': {'limited': 'Limited'}}]
            _attrs = ['limited', 'type']
            limited = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_LimitedPriorityLevelConfiguration, 'descr': '`limited` specifies how requests are handled for a Limited priority level. This field must be non-empty if and only if `type` is `"Limited"`.'}
            type = {'type': 'string', 'descr': '`type` indicates whether this priority level is subject to limitation on request execution.  A value of `"Exempt"` means that requests of this priority level are not subject to a limit (and thus are never queued) and do not detract from the capacity made available to other priority levels.  A value of `"Limited"` means that (a) requests of this priority level _are_ subject to limits and (b) some of the server\'s limited capacity is made available exclusively to this priority level. Required.'}
        R.limited = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_LimitedPriorityLevelConfiguration
        R.type = str_dflt
    class definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfigurationStatus:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationStatus"""
        class R:
            description = 'PriorityLevelConfigurationStatus represents the current state of a "request-priority".'
            type = 'object'
            _attrs = ['conditions']
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfigurationCondition, 'x-kubernetes-list-map-keys': ['type'], 'x-kubernetes-list-type': 'map', 'descr': '`conditions` is the current state of "request-priority".'}
        R.conditions = [lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfigurationCondition]
    class definitions_io_k8s_api_flowcontrol_v1beta2_QueuingConfiguration:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.QueuingConfiguration"""
        class R:
            description = 'QueuingConfiguration holds the configuration parameters for queuing'
            type = 'object'
            _attrs = ['handSize', 'queueLengthLimit', 'queues']
            handSize = {'type': 'integer', 'format': 'int32', 'descr': "`handSize` is a small positive number that configures the shuffle sharding of requests into queues.  When enqueuing a request at this priority level the request's flow identifier (a string pair) is hashed and the hash value is used to shuffle the list of queues and deal a hand of the size specified here.  The request is put into one of the shortest queues in that hand. `handSize` must be no larger than `queues`, and should be significantly smaller (so that a few heavy flows do not saturate most of the queues).  See the user-facing documentation for more extensive guidance on setting this field.  This field has a default value of 8."}
            queueLengthLimit = {'type': 'integer', 'format': 'int32', 'descr': '`queueLengthLimit` is the maximum number of requests allowed to be waiting in a given queue of this priority level at a time; excess requests are rejected.  This value must be positive.  If not specified, it will be defaulted to 50.'}
            queues = {'type': 'integer', 'format': 'int32', 'descr': '`queues` is the number of queues for this priority level. The queues exist independently at each apiserver. The value must be positive.  Setting it to 1 effectively precludes shufflesharding and thus makes the distinguisher method of associated flow schemas irrelevant.  This field has a default value of 64.'}
        R.handSize = 0
        R.queueLengthLimit = 0
        R.queues = 0
    class definitions_io_k8s_api_flowcontrol_v1beta2_ResourcePolicyRule:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.ResourcePolicyRule"""
        class R:
            description = 'ResourcePolicyRule is a predicate that matches some resource requests, testing the request"s verb and the target resource. A ResourcePolicyRule matches a resource request if and only if: (a) at least one member of verbs matches the request, (b) at least one member of apiGroups matches the request, (c) at least one member of resources matches the request, and (d) either (d1) the request does not specify a namespace (i.e., `Namespace==""`) and clusterScope is true or (d2) the request specifies a namespace and least one member of namespaces matches the request"s namespace.'
            type = 'object'
            required = ['verbs', 'apiGroups', 'resources']
            _attrs = ['apiGroups', 'clusterScope', 'namespaces', 'resources', 'verbs']
            apiGroups = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': '`apiGroups` is a list of matching API groups and may not be empty. "*" matches all API groups and, if present, must be the only entry. Required.'}
            clusterScope = {'type': 'boolean', 'descr': '`clusterScope` indicates whether to match requests that do not specify a namespace (which happens either because the resource is not namespaced or the request targets all namespaces). If this field is omitted or false then the `namespaces` field must contain a non-empty list.'}
            namespaces = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': '`namespaces` is a list of target namespaces that restricts matches.  A request that specifies a target namespace matches only if either (a) this list contains that target namespace or (b) this list contains "*".  Note that "*" matches any specified namespace but does not match a request that _does not specify_ a namespace (see the `clusterScope` field for that). This list may be empty, but only if `clusterScope` is true.'}
            resources = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': '`resources` is a list of matching resources (i.e., lowercase and plural) with, if desired, subresource.  For example, [ "services", "nodes/status" ].  This list may not be empty. "*" matches all resources and, if present, must be the only entry. Required.'}
            verbs = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': '`verbs` is a list of matching verbs and may not be empty. "*" matches all verbs and, if present, must be the only entry. Required.'}
        R.apiGroups = [str_dflt]
        R.clusterScope = True
        R.namespaces = [str_dflt]
        R.resources = [str_dflt]
        R.verbs = [str_dflt]
    class definitions_io_k8s_api_flowcontrol_v1beta2_ServiceAccountSubject:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.ServiceAccountSubject"""
        class R:
            description = 'ServiceAccountSubject holds detailed information for service-account-kind subject.'
            type = 'object'
            required = ['namespace', 'name']
            _attrs = ['name', 'namespace']
            name = {'type': 'string', 'descr': '`name` is the name of matching ServiceAccount objects, or "*" to match regardless of name. Required.'}
            namespace = {'type': 'string', 'descr': '`namespace` is the namespace of matching ServiceAccount objects. Required.'}
        R.name = name
        R.namespace = namespace
    class definitions_io_k8s_api_flowcontrol_v1beta2_Subject:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.Subject"""
        class R:
            description = 'Subject matches the originator of a request, as identified by the request authentication system. There are three ways of matching an originator; by user, group, or service account.'
            type = 'object'
            required = ['kind']
            x_kubernetes_unions = [{'discriminator': 'kind', 'fields-to-discriminateBy': {'group': 'Group', 'serviceAccount': 'ServiceAccount', 'user': 'User'}}]
            _attrs = ['group', 'kind', 'serviceAccount', 'user']
            group = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_GroupSubject, 'descr': '`group` matches based on user group name.'}
            kind = {'type': 'string', 'descr': '`kind` indicates which one of the other fields is non-empty. Required'}
            serviceAccount = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_ServiceAccountSubject, 'descr': '`serviceAccount` matches ServiceAccounts.'}
            user = {'$ref': lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_UserSubject, 'descr': '`user` matches based on username.'}
        R.group = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_GroupSubject
        R.kind = str_dflt
        R.serviceAccount = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_ServiceAccountSubject
        R.user = lambda: Defs.definitions_io_k8s_api_flowcontrol_v1beta2_UserSubject
    class definitions_io_k8s_api_flowcontrol_v1beta2_UserSubject:
        """#/definitions/io.k8s.api.flowcontrol.v1beta2.UserSubject"""
        class R:
            description = 'UserSubject holds detailed information for user-kind subject.'
            type = 'object'
            required = ['name']
            _attrs = ['name']
            name = {'type': 'string', 'descr': '`name` is the username that matches, or "*" to match all usernames. Required.'}
        R.name = name
    class definitions_io_k8s_api_networking_v1_HTTPIngressPath:
        """#/definitions/io.k8s.api.networking.v1.HTTPIngressPath"""
        class R:
            description = 'HTTPIngressPath associates a path with a backend. Incoming urls matching the path are forwarded to the backend.'
            type = 'object'
            required = ['pathType', 'backend']
            _attrs = ['backend', 'path', 'pathType']
            backend = {'$ref': lambda: Defs.definitions_io_k8s_api_networking_v1_IngressBackend, 'descr': 'Backend defines the referenced service endpoint to which the traffic will be forwarded to.'}
            path = {'type': 'string', 'descr': 'Path is matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional "path" part of a URL as defined by RFC 3986. Paths must begin with a \'/\' and must be present when using PathType with value "Exact" or "Prefix".'}
            pathType = {'type': 'string', 'descr': "PathType determines the interpretation of the Path matching. PathType can be one of the following values: * Exact: Matches the URL path exactly. * Prefix: Matches based on a URL path prefix split by '/'. Matching is\n  done on a path element by element basis. A path element refers is the\n  list of labels in the path split by the '/' separator. A request is a\n  match for path p if every p is an element-wise prefix of p of the\n  request path. Note that if the last element of the path is a substring\n  of the last element in request path, it is not a match (e.g. /foo/bar\n  matches /foo/bar/baz, but does not match /foo/barbaz).\n* ImplementationSpecific: Interpretation of the Path matching is up to\n  the IngressClass. Implementations can treat this as a separate PathType\n  or treat it identically to Prefix or Exact path types.\nImplementations are required to support all path types."}
        R.backend = lambda: Defs.definitions_io_k8s_api_networking_v1_IngressBackend
        R.path = path
        R.pathType = str_dflt
    class definitions_io_k8s_api_networking_v1_HTTPIngressRuleValue:
        """#/definitions/io.k8s.api.networking.v1.HTTPIngressRuleValue"""
        class R:
            description = 'HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last "/" and before the first "?" or "#".'
            type = 'object'
            required = ['paths']
            _attrs = ['paths']
            paths = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_networking_v1_HTTPIngressPath, 'x-kubernetes-list-type': 'atomic', 'descr': 'A collection of paths that map requests to backends.'}
        R.paths = [lambda: Defs.definitions_io_k8s_api_networking_v1_HTTPIngressPath]
    class definitions_io_k8s_api_networking_v1_IPBlock:
        """#/definitions/io.k8s.api.networking.v1.IPBlock"""
        class R:
            description = 'IPBlock describes a particular CIDR (Ex. "192.168.1.1/24","2001:db9::/64") that is allowed to the pods matched by a NetworkPolicySpec"s podSelector. The except entry describes CIDRs that should not be included within this rule.'
            type = 'object'
            required = ['cidr']
            _attrs = ['cidr', 'except__']
            cidr = {'type': 'string', 'descr': 'CIDR is a string representing the IP Block Valid examples are "192.168.1.1/24" or "2001:db9::/64"'}
            except__ = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Except is a slice of CIDRs that should not be included within an IP Block Valid examples are "192.168.1.1/24" or "2001:db9::/64" Except values will be rejected if they are outside the CIDR range'}
        R.cidr = str_dflt
        R.except__ = [str_dflt]
    class definitions_io_k8s_api_networking_v1_Ingress:
        """#/definitions/io.k8s.api.networking.v1.Ingress"""
        class R:
            description = 'Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'networking.k8s.io', 'kind': 'Ingress', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_networking_v1_IngressSpec, 'descr': 'Spec is the desired state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_networking_v1_IngressStatus, 'descr': 'Status is the current state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_networking_v1_IngressSpec
        R.status = lambda: Defs.definitions_io_k8s_api_networking_v1_IngressStatus
    class definitions_io_k8s_api_networking_v1_IngressBackend:
        """#/definitions/io.k8s.api.networking.v1.IngressBackend"""
        class R:
            description = 'IngressBackend describes all endpoints for a given service and port.'
            type = 'object'
            _attrs = ['resource', 'service']
            resource = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_TypedLocalObjectReference, 'descr': 'Resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, a service.Name and service.Port must not be specified. This is a mutually exclusive setting with "Service".'}
            service = {'$ref': lambda: Defs.definitions_io_k8s_api_networking_v1_IngressServiceBackend, 'descr': 'Service references a Service as a Backend. This is a mutually exclusive setting with "Resource".'}
        R.resource = lambda: Defs.definitions_io_k8s_api_core_v1_TypedLocalObjectReference
        R.service = lambda: Defs.definitions_io_k8s_api_networking_v1_IngressServiceBackend
    class definitions_io_k8s_api_networking_v1_IngressClass:
        """#/definitions/io.k8s.api.networking.v1.IngressClass"""
        class R:
            description = 'IngressClass represents the class of the Ingress, referenced by the Ingress Spec. The `ingressclass.kubernetes.io/is-default-class` annotation can be used to indicate that an IngressClass should be considered default. When a single IngressClass resource has this annotation set to true, new Ingress resources without a class specified will be assigned this default class.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'networking.k8s.io', 'kind': 'IngressClass', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_networking_v1_IngressClassSpec, 'descr': 'Spec is the desired state of the IngressClass. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_networking_v1_IngressClassSpec
    class definitions_io_k8s_api_networking_v1_IngressClassList:
        """#/definitions/io.k8s.api.networking.v1.IngressClassList"""
        class R:
            description = 'IngressClassList is a collection of IngressClasses.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'networking.k8s.io', 'kind': 'IngressClassList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_networking_v1_IngressClass, 'descr': 'Items is the list of IngressClasses.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata.'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_networking_v1_IngressClass]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_networking_v1_IngressClassParametersReference:
        """#/definitions/io.k8s.api.networking.v1.IngressClassParametersReference"""
        class R:
            description = 'IngressClassParametersReference identifies an API object. This can be used to specify a cluster or namespace-scoped resource.'
            type = 'object'
            required = ['kind', 'name']
            _attrs = ['apiGroup', 'kind', 'name', 'namespace', 'scope']
            apiGroup = {'type': 'string', 'descr': 'APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.'}
            kind = {'type': 'string', 'descr': 'Kind is the type of resource being referenced.'}
            name = {'type': 'string', 'descr': 'Name is the name of resource being referenced.'}
            namespace = {'type': 'string', 'descr': 'Namespace is the namespace of the resource being referenced. This field is required when scope is set to "Namespace" and must be unset when scope is set to "Cluster".'}
            scope = {'type': 'string', 'descr': 'Scope represents if this refers to a cluster or namespace scoped resource. This may be set to "Cluster" (default) or "Namespace".'}
        R.apiGroup = str_dflt
        R.kind = str_dflt
        R.name = name
        R.namespace = namespace
        R.scope = str_dflt
    class definitions_io_k8s_api_networking_v1_IngressClassSpec:
        """#/definitions/io.k8s.api.networking.v1.IngressClassSpec"""
        class R:
            description = 'IngressClassSpec provides information about the class of an Ingress.'
            type = 'object'
            _attrs = ['controller', 'parameters']
            controller = {'type': 'string', 'descr': 'Controller refers to the name of the controller that should handle this class. This allows for different "flavors" that are controlled by the same controller. For example, you may have different Parameters for the same implementing controller. This should be specified as a domain-prefixed path no more than 250 characters in length, e.g. "acme.io/ingress-controller". This field is immutable.'}
            parameters = {'$ref': lambda: Defs.definitions_io_k8s_api_networking_v1_IngressClassParametersReference, 'descr': 'Parameters is a link to a custom resource containing additional configuration for the controller. This is optional if the controller does not require extra parameters.'}
        R.controller = str_dflt
        R.parameters = lambda: Defs.definitions_io_k8s_api_networking_v1_IngressClassParametersReference
    class definitions_io_k8s_api_networking_v1_IngressList:
        """#/definitions/io.k8s.api.networking.v1.IngressList"""
        class R:
            description = 'IngressList is a collection of Ingress.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'networking.k8s.io', 'kind': 'IngressList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_networking_v1_Ingress, 'descr': 'Items is the list of Ingress.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_networking_v1_Ingress]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_networking_v1_IngressRule:
        """#/definitions/io.k8s.api.networking.v1.IngressRule"""
        class R:
            description = 'IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.'
            type = 'object'
            _attrs = ['host', 'http']
            host = {'type': 'string', 'descr': 'Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the "host" part of the URI as defined in RFC 3986: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to\n   the IP in the Spec of the parent Ingress.\n2. The `:` delimiter is not respected because ports are not allowed.\n\t  Currently the port of an Ingress is implicitly :80 for http and\n\t  :443 for https.\nBoth these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.\n\nHost can be "precise" which is a domain name without the terminating dot of a network host (e.g. "foo.bar.com") or "wildcard", which is a domain name prefixed with a single wildcard label (e.g. "*.foo.com"). The wildcard character \'*\' must appear by itself as the first DNS label and matches only a single label. You cannot have a wildcard label...'}
            http = lambda: Defs.definitions_io_k8s_api_networking_v1_HTTPIngressRuleValue
        R.host = str_dflt
        R.http = lambda: Defs.definitions_io_k8s_api_networking_v1_HTTPIngressRuleValue
    class definitions_io_k8s_api_networking_v1_IngressServiceBackend:
        """#/definitions/io.k8s.api.networking.v1.IngressServiceBackend"""
        class R:
            description = 'IngressServiceBackend references a Kubernetes Service as a Backend.'
            type = 'object'
            required = ['name']
            _attrs = ['name', 'port']
            name = {'type': 'string', 'descr': 'Name is the referenced service. The service must exist in the same namespace as the Ingress object.'}
            port = {'$ref': lambda: Defs.definitions_io_k8s_api_networking_v1_ServiceBackendPort, 'descr': 'Port of the referenced service. A port name or port number is required for a IngressServiceBackend.'}
        R.name = name
        R.port = lambda: Defs.definitions_io_k8s_api_networking_v1_ServiceBackendPort
    class definitions_io_k8s_api_networking_v1_IngressSpec:
        """#/definitions/io.k8s.api.networking.v1.IngressSpec"""
        class R:
            description = 'IngressSpec describes the Ingress the user wishes to exist.'
            type = 'object'
            _attrs = ['defaultBackend', 'ingressClassName', 'rules', 'tls']
            defaultBackend = {'$ref': lambda: Defs.definitions_io_k8s_api_networking_v1_IngressBackend, 'descr': "DefaultBackend is the backend that should handle requests that don't match any rule. If Rules are not specified, DefaultBackend must be specified. If DefaultBackend is not set, the handling of requests that do not match any of the rules will be up to the Ingress controller."}
            ingressClassName = {'type': 'string', 'descr': 'IngressClassName is the name of the IngressClass cluster resource. The associated IngressClass defines which controller will implement the resource. This replaces the deprecated `kubernetes.io/ingress.class` annotation. For backwards compatibility, when that annotation is set, it must be given precedence over this field. The controller may emit a warning if the field and annotation have different values. Implementations of this API should ignore Ingresses without a class specified. An IngressClass resource may be marked as default, which can be used to set a default value for this field. For more information, refer to the IngressClass documentation.'}
            rules = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_networking_v1_IngressRule, 'x-kubernetes-list-type': 'atomic', 'descr': 'A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.'}
            tls = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_networking_v1_IngressTLS, 'x-kubernetes-list-type': 'atomic', 'descr': 'TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.'}
        R.defaultBackend = lambda: Defs.definitions_io_k8s_api_networking_v1_IngressBackend
        R.ingressClassName = str_dflt
        R.rules = [lambda: Defs.definitions_io_k8s_api_networking_v1_IngressRule]
        R.tls = [lambda: Defs.definitions_io_k8s_api_networking_v1_IngressTLS]
    class definitions_io_k8s_api_networking_v1_IngressStatus:
        """#/definitions/io.k8s.api.networking.v1.IngressStatus"""
        class R:
            description = 'IngressStatus describe the current state of the Ingress.'
            type = 'object'
            _attrs = ['loadBalancer']
            loadBalancer = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_LoadBalancerStatus, 'descr': 'LoadBalancer contains the current status of the load-balancer.'}
        R.loadBalancer = lambda: Defs.definitions_io_k8s_api_core_v1_LoadBalancerStatus
    class definitions_io_k8s_api_networking_v1_IngressTLS:
        """#/definitions/io.k8s.api.networking.v1.IngressTLS"""
        class R:
            description = 'IngressTLS describes the transport layer security associated with an Ingress.'
            type = 'object'
            _attrs = ['hosts', 'secretName']
            hosts = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'atomic', 'descr': 'Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.'}
            secretName = {'type': 'string', 'descr': 'SecretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.'}
        R.hosts = [str_dflt]
        R.secretName = str_dflt
    class definitions_io_k8s_api_networking_v1_NetworkPolicy:
        """#/definitions/io.k8s.api.networking.v1.NetworkPolicy"""
        class R:
            description = 'NetworkPolicy describes what network traffic is allowed for a set of Pods'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'networking.k8s.io', 'kind': 'NetworkPolicy', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_networking_v1_NetworkPolicySpec, 'descr': 'Specification of the desired behavior for this NetworkPolicy.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_networking_v1_NetworkPolicySpec
    class definitions_io_k8s_api_networking_v1_NetworkPolicyEgressRule:
        """#/definitions/io.k8s.api.networking.v1.NetworkPolicyEgressRule"""
        class R:
            description = 'NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec"s podSelector. The traffic must match both ports and to. This type is beta-level in 1.8'
            type = 'object'
            _attrs = ['ports', 'to']
            ports = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_networking_v1_NetworkPolicyPort, 'descr': 'List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.'}
            to = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_networking_v1_NetworkPolicyPeer, 'descr': 'List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.'}
        R.ports = [lambda: Defs.definitions_io_k8s_api_networking_v1_NetworkPolicyPort]
        R.to = [lambda: Defs.definitions_io_k8s_api_networking_v1_NetworkPolicyPeer]
    class definitions_io_k8s_api_networking_v1_NetworkPolicyIngressRule:
        """#/definitions/io.k8s.api.networking.v1.NetworkPolicyIngressRule"""
        class R:
            description = 'NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec"s podSelector. The traffic must match both ports and from.'
            type = 'object'
            _attrs = ['ports', 'from__']
            ports = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_networking_v1_NetworkPolicyPort, 'descr': 'List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.'}
            from__ = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_networking_v1_NetworkPolicyPeer, 'descr': 'List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.'}
        R.ports = [lambda: Defs.definitions_io_k8s_api_networking_v1_NetworkPolicyPort]
        R.from__ = [lambda: Defs.definitions_io_k8s_api_networking_v1_NetworkPolicyPeer]
    class definitions_io_k8s_api_networking_v1_NetworkPolicyList:
        """#/definitions/io.k8s.api.networking.v1.NetworkPolicyList"""
        class R:
            description = 'NetworkPolicyList is a list of NetworkPolicy objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'networking.k8s.io', 'kind': 'NetworkPolicyList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_networking_v1_NetworkPolicy, 'descr': 'Items is a list of schema objects.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_networking_v1_NetworkPolicy]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_networking_v1_NetworkPolicyPeer:
        """#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer"""
        class R:
            description = 'NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of fields are allowed'
            type = 'object'
            _attrs = ['ipBlock', 'namespaceSelector', 'podSelector']
            ipBlock = {'$ref': lambda: Defs.definitions_io_k8s_api_networking_v1_IPBlock, 'descr': 'IPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.'}
            namespaceSelector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.\n\nIf PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector.'}
            podSelector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': "This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods.\n\nIf NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace."}
        R.ipBlock = lambda: Defs.definitions_io_k8s_api_networking_v1_IPBlock
        R.namespaceSelector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.podSelector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
    class definitions_io_k8s_api_networking_v1_NetworkPolicyPort:
        """#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort"""
        class R:
            description = 'NetworkPolicyPort describes a port to allow traffic on'
            type = 'object'
            _attrs = ['endPort', 'port', 'protocol']
            endPort = {'type': 'integer', 'format': 'int32', 'descr': 'If set, indicates that the range of ports from port to endPort, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port. This feature is in Beta state and is enabled by default. It can be disabled using the Feature Gate "NetworkPolicyEndPort".'}
            port = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString, 'descr': 'The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.'}
            protocol = {'type': 'string', 'descr': 'The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.'}
        R.endPort = 0
        R.port = lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString
        R.protocol = str_dflt
    class definitions_io_k8s_api_networking_v1_NetworkPolicySpec:
        """#/definitions/io.k8s.api.networking.v1.NetworkPolicySpec"""
        class R:
            description = 'NetworkPolicySpec provides the specification of a NetworkPolicy'
            type = 'object'
            required = ['podSelector']
            _attrs = ['egress', 'ingress', 'podSelector', 'policyTypes']
            egress = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_networking_v1_NetworkPolicyEgressRule, 'descr': 'List of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8'}
            ingress = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_networking_v1_NetworkPolicyIngressRule, 'descr': "List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)"}
            podSelector = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'Selects the pods to which this NetworkPolicy object applies. The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods. In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace.'}
            policyTypes = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'List of rule types that the NetworkPolicy relates to. Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"]. If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include "Egress" (since such a policy would not include an Egress section and would otherwise default to just [ "Ingress" ]). This field is beta-level in 1.8'}
        R.egress = [lambda: Defs.definitions_io_k8s_api_networking_v1_NetworkPolicyEgressRule]
        R.ingress = [lambda: Defs.definitions_io_k8s_api_networking_v1_NetworkPolicyIngressRule]
        R.podSelector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.policyTypes = [str_dflt]
    class definitions_io_k8s_api_networking_v1_ServiceBackendPort:
        """#/definitions/io.k8s.api.networking.v1.ServiceBackendPort"""
        class R:
            description = 'ServiceBackendPort is the service port being referenced.'
            type = 'object'
            _attrs = ['name', 'number']
            name = {'type': 'string', 'descr': 'Name is the name of the port on the Service. This is a mutually exclusive setting with "Number".'}
            number = {'type': 'integer', 'format': 'int32', 'descr': 'Number is the numerical port number (e.g. 80) on the Service. This is a mutually exclusive setting with "Name".'}
        R.name = name
        R.number = 0
    class definitions_io_k8s_api_node_v1_Overhead:
        """#/definitions/io.k8s.api.node.v1.Overhead"""
        class R:
            description = 'Overhead structure represents the resource overhead associated with running a pod.'
            type = 'object'
            _attrs = ['podFixed']
            podFixed = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'PodFixed represents the fixed resource overhead associated with running a pod.'}
        R.podFixed = {}
    class definitions_io_k8s_api_node_v1_RuntimeClass:
        """#/definitions/io.k8s.api.node.v1.RuntimeClass"""
        class R:
            description = 'RuntimeClass defines a class of container runtime supported in the cluster. The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod.  For more details, see https://kubernetes.io/docs/concepts/containers/runtime-class/'
            type = 'object'
            required = ['handler']
            x_kubernetes_group_version_kind = [{'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1'}]
            _attrs = ['apiVersion', 'handler', 'kind', 'metadata', 'overhead', 'scheduling']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            handler = {'type': 'string', 'descr': 'Handler specifies the underlying runtime and configuration that the CRI implementation will use to handle pods of this class. The possible values are specific to the node & CRI configuration.  It is assumed that all handlers are available on every node, and handlers of the same name are equivalent on every node. For example, a handler called "runc" might specify that the runc OCI runtime (using native Linux containers) will be used to run the containers in a pod. The Handler must be lowercase, conform to the DNS Label (RFC 1123) requirements, and is immutable.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
            overhead = {'$ref': lambda: Defs.definitions_io_k8s_api_node_v1_Overhead, 'descr': 'Overhead represents the resource overhead associated with running a pod for a given RuntimeClass. For more details, see\n https://kubernetes.io/docs/concepts/scheduling-eviction/pod-overhead/\nThis field is in beta starting v1.18 and is only honored by servers that enable the PodOverhead feature.'}
            scheduling = {'$ref': lambda: Defs.definitions_io_k8s_api_node_v1_Scheduling, 'descr': 'Scheduling holds the scheduling constraints to ensure that pods running with this RuntimeClass are scheduled to nodes that support it. If scheduling is nil, this RuntimeClass is assumed to be supported by all nodes.'}
        R.apiVersion = str_dflt
        R.handler = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.overhead = lambda: Defs.definitions_io_k8s_api_node_v1_Overhead
        R.scheduling = lambda: Defs.definitions_io_k8s_api_node_v1_Scheduling
    class definitions_io_k8s_api_node_v1_RuntimeClassList:
        """#/definitions/io.k8s.api.node.v1.RuntimeClassList"""
        class R:
            description = 'RuntimeClassList is a list of RuntimeClass objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'node.k8s.io', 'kind': 'RuntimeClassList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_node_v1_RuntimeClass, 'descr': 'Items is a list of schema objects.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_node_v1_RuntimeClass]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_node_v1_Scheduling:
        """#/definitions/io.k8s.api.node.v1.Scheduling"""
        class R:
            description = 'Scheduling specifies the scheduling constraints for nodes supporting a RuntimeClass.'
            type = 'object'
            _attrs = ['nodeSelector', 'tolerations']
            nodeSelector = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'x-kubernetes-map-type': 'atomic', 'descr': "nodeSelector lists labels that must be present on nodes that support this RuntimeClass. Pods using this RuntimeClass can only be scheduled to a node matched by this selector. The RuntimeClass nodeSelector is merged with a pod's existing nodeSelector. Any conflicts will cause the pod to be rejected in admission."}
            tolerations = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_Toleration, 'x-kubernetes-list-type': 'atomic', 'descr': 'tolerations are appended (excluding duplicates) to pods running with this RuntimeClass during admission, effectively unioning the set of nodes tolerated by the pod and the RuntimeClass.'}
        R.nodeSelector = {}
        R.tolerations = [lambda: Defs.definitions_io_k8s_api_core_v1_Toleration]
    class definitions_io_k8s_api_node_v1beta1_Overhead:
        """#/definitions/io.k8s.api.node.v1beta1.Overhead"""
        class R:
            description = 'Overhead structure represents the resource overhead associated with running a pod.'
            type = 'object'
            _attrs = ['podFixed']
            podFixed = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'PodFixed represents the fixed resource overhead associated with running a pod.'}
        R.podFixed = {}
    class definitions_io_k8s_api_node_v1beta1_RuntimeClass:
        """#/definitions/io.k8s.api.node.v1beta1.RuntimeClass"""
        class R:
            description = 'RuntimeClass defines a class of container runtime supported in the cluster. The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are (currently) manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod.  For more details, see https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class'
            type = 'object'
            required = ['handler']
            x_kubernetes_group_version_kind = [{'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'handler', 'kind', 'metadata', 'overhead', 'scheduling']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            handler = {'type': 'string', 'descr': 'Handler specifies the underlying runtime and configuration that the CRI implementation will use to handle pods of this class. The possible values are specific to the node & CRI configuration.  It is assumed that all handlers are available on every node, and handlers of the same name are equivalent on every node. For example, a handler called "runc" might specify that the runc OCI runtime (using native Linux containers) will be used to run the containers in a pod. The Handler must be lowercase, conform to the DNS Label (RFC 1123) requirements, and is immutable.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
            overhead = {'$ref': lambda: Defs.definitions_io_k8s_api_node_v1beta1_Overhead, 'descr': 'Overhead represents the resource overhead associated with running a pod for a given RuntimeClass. For more details, see https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md This field is beta-level as of Kubernetes v1.18, and is only honored by servers that enable the PodOverhead feature.'}
            scheduling = {'$ref': lambda: Defs.definitions_io_k8s_api_node_v1beta1_Scheduling, 'descr': 'Scheduling holds the scheduling constraints to ensure that pods running with this RuntimeClass are scheduled to nodes that support it. If scheduling is nil, this RuntimeClass is assumed to be supported by all nodes.'}
        R.apiVersion = str_dflt
        R.handler = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.overhead = lambda: Defs.definitions_io_k8s_api_node_v1beta1_Overhead
        R.scheduling = lambda: Defs.definitions_io_k8s_api_node_v1beta1_Scheduling
    class definitions_io_k8s_api_node_v1beta1_RuntimeClassList:
        """#/definitions/io.k8s.api.node.v1beta1.RuntimeClassList"""
        class R:
            description = 'RuntimeClassList is a list of RuntimeClass objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'node.k8s.io', 'kind': 'RuntimeClassList', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_node_v1beta1_RuntimeClass, 'descr': 'Items is a list of schema objects.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_node_v1beta1_RuntimeClass]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_node_v1beta1_Scheduling:
        """#/definitions/io.k8s.api.node.v1beta1.Scheduling"""
        class R:
            description = 'Scheduling specifies the scheduling constraints for nodes supporting a RuntimeClass.'
            type = 'object'
            _attrs = ['nodeSelector', 'tolerations']
            nodeSelector = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'x-kubernetes-map-type': 'atomic', 'descr': "nodeSelector lists labels that must be present on nodes that support this RuntimeClass. Pods using this RuntimeClass can only be scheduled to a node matched by this selector. The RuntimeClass nodeSelector is merged with a pod's existing nodeSelector. Any conflicts will cause the pod to be rejected in admission."}
            tolerations = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_Toleration, 'x-kubernetes-list-type': 'atomic', 'descr': 'tolerations are appended (excluding duplicates) to pods running with this RuntimeClass during admission, effectively unioning the set of nodes tolerated by the pod and the RuntimeClass.'}
        R.nodeSelector = {}
        R.tolerations = [lambda: Defs.definitions_io_k8s_api_core_v1_Toleration]
    class definitions_io_k8s_api_policy_v1_Eviction:
        """#/definitions/io.k8s.api.policy.v1.Eviction"""
        class R:
            description = 'Eviction evicts a pod from its node subject to certain policies and safety constraints. This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/<pod name>/evictions.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'policy', 'kind': 'Eviction', 'version': 'v1'}]
            _attrs = ['apiVersion', 'deleteOptions', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            deleteOptions = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions, 'descr': 'DeleteOptions may be provided'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'ObjectMeta describes the pod that is being evicted.'}
        R.apiVersion = str_dflt
        R.deleteOptions = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
    class definitions_io_k8s_api_policy_v1_PodDisruptionBudget:
        """#/definitions/io.k8s.api.policy.v1.PodDisruptionBudget"""
        class R:
            description = 'PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudgetSpec, 'descr': 'Specification of the desired behavior of the PodDisruptionBudget.'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudgetStatus, 'descr': 'Most recently observed status of the PodDisruptionBudget.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudgetSpec
        R.status = lambda: Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudgetStatus
    class definitions_io_k8s_api_policy_v1_PodDisruptionBudgetList:
        """#/definitions/io.k8s.api.policy.v1.PodDisruptionBudgetList"""
        class R:
            description = 'PodDisruptionBudgetList is a collection of PodDisruptionBudgets.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'policy', 'kind': 'PodDisruptionBudgetList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget, 'descr': 'Items is a list of PodDisruptionBudgets'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_policy_v1_PodDisruptionBudgetSpec:
        """#/definitions/io.k8s.api.policy.v1.PodDisruptionBudgetSpec"""
        class R:
            description = 'PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.'
            type = 'object'
            _attrs = ['maxUnavailable', 'minAvailable', 'selector']
            maxUnavailable = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString, 'descr': 'An eviction is allowed if at most "maxUnavailable" pods selected by "selector" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with "minAvailable".'}
            minAvailable = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString, 'descr': 'An eviction is allowed if at least "minAvailable" pods selected by "selector" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying "100%".'}
            selector = {'x-kubernetes-patch-strategy': 'replace', '$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'Label query over pods whose evictions are managed by the disruption budget. A null selector will match no pods, while an empty ({}) selector will select all pods within the namespace.'}
        R.maxUnavailable = lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString
        R.minAvailable = lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString
        R.selector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
    class definitions_io_k8s_api_policy_v1_PodDisruptionBudgetStatus:
        """#/definitions/io.k8s.api.policy.v1.PodDisruptionBudgetStatus"""
        class R:
            description = 'PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system.'
            type = 'object'
            required = ['disruptionsAllowed', 'currentHealthy', 'desiredHealthy', 'expectedPods']
            _attrs = ['conditions', 'currentHealthy', 'desiredHealthy', 'disruptedPods', 'disruptionsAllowed', 'expectedPods', 'observedGeneration']
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Condition, 'x-kubernetes-list-map-keys': ['type'], 'x-kubernetes-list-type': 'map', 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': "Conditions contain conditions for PDB. The disruption controller sets the DisruptionAllowed condition. The following are known values for the reason field (additional reasons could be added in the future): - SyncFailed: The controller encountered an error and wasn't able to compute\n              the number of allowed disruptions. Therefore no disruptions are\n              allowed and the status of the condition will be False.\n- InsufficientPods: The number of pods are either at or below the number\n                    required by the PodDisruptionBudget. No disruptions are\n                    allowed and the status of the condition will be False.\n- SufficientPods: There are more pods than required by the PodDisruptionBudget.\n                  The condition will be True, and the number of allowed\n                  disruptions are provided by the disruptionsAllowed property."}
            currentHealthy = {'type': 'integer', 'format': 'int32', 'descr': 'current number of healthy pods'}
            desiredHealthy = {'type': 'integer', 'format': 'int32', 'descr': 'minimum desired number of healthy pods'}
            disruptedPods = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': "DisruptedPods contains information about pods whose eviction was processed by the API server eviction subresource handler but has not yet been observed by the PodDisruptionBudget controller. A pod will be in this map from the time when the API server processed the eviction request to the time when the pod is seen by PDB controller as having been marked for deletion (or after a timeout). The key in the map is the name of the pod and the value is the time when the API server processed the eviction request. If the deletion didn't occur and a pod is still there it will be removed from the list automatically by PodDisruptionBudget controller after some time. If everything goes smooth this map should be empty for the most of the time. Large number of entries in the map may indicate problems with pod deletions."}
            disruptionsAllowed = {'type': 'integer', 'format': 'int32', 'descr': 'Number of pod disruptions that are currently allowed.'}
            expectedPods = {'type': 'integer', 'format': 'int32', 'descr': 'total number of pods counted by this disruption budget'}
            observedGeneration = {'type': 'integer', 'format': 'int64', 'descr': "Most recent generation observed when updating this PDB status. DisruptionsAllowed and other status information is valid only if observedGeneration equals to PDB's object generation."}
        R.conditions = [lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Condition]
        R.currentHealthy = 0
        R.desiredHealthy = 0
        R.disruptedPods = {}
        R.disruptionsAllowed = 0
        R.expectedPods = 0
        R.observedGeneration = 0
    class definitions_io_k8s_api_policy_v1beta1_AllowedCSIDriver:
        """#/definitions/io.k8s.api.policy.v1beta1.AllowedCSIDriver"""
        class R:
            description = 'AllowedCSIDriver represents a single inline CSI Driver that is allowed to be used.'
            type = 'object'
            required = ['name']
            _attrs = ['name']
            name = {'type': 'string', 'descr': 'Name is the registered name of the CSI driver'}
        R.name = name
    class definitions_io_k8s_api_policy_v1beta1_AllowedFlexVolume:
        """#/definitions/io.k8s.api.policy.v1beta1.AllowedFlexVolume"""
        class R:
            description = 'AllowedFlexVolume represents a single Flexvolume that is allowed to be used.'
            type = 'object'
            required = ['driver']
            _attrs = ['driver']
            driver = {'type': 'string', 'descr': 'driver is the name of the Flexvolume driver.'}
        R.driver = str_dflt
    class definitions_io_k8s_api_policy_v1beta1_AllowedHostPath:
        """#/definitions/io.k8s.api.policy.v1beta1.AllowedHostPath"""
        class R:
            description = 'AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined.'
            type = 'object'
            _attrs = ['pathPrefix', 'readOnly']
            pathPrefix = {'type': 'string', 'descr': 'pathPrefix is the path prefix that the host volume must match. It does not support `*`. Trailing slashes are trimmed when validating the path prefix with a host path.\n\nExamples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo` would not allow `/food` or `/etc/foo`'}
            readOnly = {'type': 'boolean', 'descr': 'when set to true, will allow host volumes matching the pathPrefix only if all volume mounts are readOnly.'}
        R.pathPrefix = str_dflt
        R.readOnly = True
    class definitions_io_k8s_api_policy_v1beta1_FSGroupStrategyOptions:
        """#/definitions/io.k8s.api.policy.v1beta1.FSGroupStrategyOptions"""
        class R:
            description = 'FSGroupStrategyOptions defines the strategy type and options used to create the strategy.'
            type = 'object'
            _attrs = ['ranges', 'rule']
            ranges = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_IDRange, 'descr': 'ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end. Required for MustRunAs.'}
            rule = {'type': 'string', 'descr': 'rule is the strategy that will dictate what FSGroup is used in the SecurityContext.'}
        R.ranges = [lambda: Defs.definitions_io_k8s_api_policy_v1beta1_IDRange]
        R.rule = str_dflt
    class definitions_io_k8s_api_policy_v1beta1_HostPortRange:
        """#/definitions/io.k8s.api.policy.v1beta1.HostPortRange"""
        class R:
            description = 'HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined.'
            type = 'object'
            required = ['min', 'max']
            _attrs = ['max', 'min']
            max = {'type': 'integer', 'format': 'int32', 'descr': 'max is the end of the range, inclusive.'}
            min = {'type': 'integer', 'format': 'int32', 'descr': 'min is the start of the range, inclusive.'}
        R.max = 0
        R.min = 0
    class definitions_io_k8s_api_policy_v1beta1_IDRange:
        """#/definitions/io.k8s.api.policy.v1beta1.IDRange"""
        class R:
            description = 'IDRange provides a min/max of an allowed range of IDs.'
            type = 'object'
            required = ['min', 'max']
            _attrs = ['max', 'min']
            max = {'type': 'integer', 'format': 'int64', 'descr': 'max is the end of the range, inclusive.'}
            min = {'type': 'integer', 'format': 'int64', 'descr': 'min is the start of the range, inclusive.'}
        R.max = 0
        R.min = 0
    class definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget:
        """#/definitions/io.k8s.api.policy.v1beta1.PodDisruptionBudget"""
        class R:
            description = 'PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudgetSpec, 'descr': 'Specification of the desired behavior of the PodDisruptionBudget.'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudgetStatus, 'descr': 'Most recently observed status of the PodDisruptionBudget.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudgetSpec
        R.status = lambda: Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudgetStatus
    class definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudgetList:
        """#/definitions/io.k8s.api.policy.v1beta1.PodDisruptionBudgetList"""
        class R:
            description = 'PodDisruptionBudgetList is a collection of PodDisruptionBudgets.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'policy', 'kind': 'PodDisruptionBudgetList', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget, 'descr': 'items list individual PodDisruptionBudget objects'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudgetSpec:
        """#/definitions/io.k8s.api.policy.v1beta1.PodDisruptionBudgetSpec"""
        class R:
            description = 'PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.'
            type = 'object'
            _attrs = ['maxUnavailable', 'minAvailable', 'selector']
            maxUnavailable = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString, 'descr': 'An eviction is allowed if at most "maxUnavailable" pods selected by "selector" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with "minAvailable".'}
            minAvailable = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString, 'descr': 'An eviction is allowed if at least "minAvailable" pods selected by "selector" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying "100%".'}
            selector = {'x-kubernetes-patch-strategy': 'replace', '$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'Label query over pods whose evictions are managed by the disruption budget. A null selector selects no pods. An empty selector ({}) also selects no pods, which differs from standard behavior of selecting all pods. In policy/v1, an empty selector will select all pods in the namespace.'}
        R.maxUnavailable = lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString
        R.minAvailable = lambda: Defs.definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString
        R.selector = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
    class definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudgetStatus:
        """#/definitions/io.k8s.api.policy.v1beta1.PodDisruptionBudgetStatus"""
        class R:
            description = 'PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system.'
            type = 'object'
            required = ['disruptionsAllowed', 'currentHealthy', 'desiredHealthy', 'expectedPods']
            _attrs = ['conditions', 'currentHealthy', 'desiredHealthy', 'disruptedPods', 'disruptionsAllowed', 'expectedPods', 'observedGeneration']
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Condition, 'x-kubernetes-list-map-keys': ['type'], 'x-kubernetes-list-type': 'map', 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': "Conditions contain conditions for PDB. The disruption controller sets the DisruptionAllowed condition. The following are known values for the reason field (additional reasons could be added in the future): - SyncFailed: The controller encountered an error and wasn't able to compute\n              the number of allowed disruptions. Therefore no disruptions are\n              allowed and the status of the condition will be False.\n- InsufficientPods: The number of pods are either at or below the number\n                    required by the PodDisruptionBudget. No disruptions are\n                    allowed and the status of the condition will be False.\n- SufficientPods: There are more pods than required by the PodDisruptionBudget.\n                  The condition will be True, and the number of allowed\n                  disruptions are provided by the disruptionsAllowed property."}
            currentHealthy = {'type': 'integer', 'format': 'int32', 'descr': 'current number of healthy pods'}
            desiredHealthy = {'type': 'integer', 'format': 'int32', 'descr': 'minimum desired number of healthy pods'}
            disruptedPods = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': "DisruptedPods contains information about pods whose eviction was processed by the API server eviction subresource handler but has not yet been observed by the PodDisruptionBudget controller. A pod will be in this map from the time when the API server processed the eviction request to the time when the pod is seen by PDB controller as having been marked for deletion (or after a timeout). The key in the map is the name of the pod and the value is the time when the API server processed the eviction request. If the deletion didn't occur and a pod is still there it will be removed from the list automatically by PodDisruptionBudget controller after some time. If everything goes smooth this map should be empty for the most of the time. Large number of entries in the map may indicate problems with pod deletions."}
            disruptionsAllowed = {'type': 'integer', 'format': 'int32', 'descr': 'Number of pod disruptions that are currently allowed.'}
            expectedPods = {'type': 'integer', 'format': 'int32', 'descr': 'total number of pods counted by this disruption budget'}
            observedGeneration = {'type': 'integer', 'format': 'int64', 'descr': "Most recent generation observed when updating this PDB status. DisruptionsAllowed and other status information is valid only if observedGeneration equals to PDB's object generation."}
        R.conditions = [lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Condition]
        R.currentHealthy = 0
        R.desiredHealthy = 0
        R.disruptedPods = {}
        R.disruptionsAllowed = 0
        R.expectedPods = 0
        R.observedGeneration = 0
    class definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy:
        """#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicy"""
        class R:
            description = 'PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container. Deprecated in 1.21.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'policy', 'kind': 'PodSecurityPolicy', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicySpec, 'descr': 'spec defines the policy enforced.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicySpec
    class definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicyList:
        """#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicyList"""
        class R:
            description = 'PodSecurityPolicyList is a list of PodSecurityPolicy objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'policy', 'kind': 'PodSecurityPolicyList', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy, 'descr': 'items is a list of schema objects.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicySpec:
        """#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicySpec"""
        class R:
            description = 'PodSecurityPolicySpec defines the policy enforced.'
            type = 'object'
            required = ['seLinux', 'runAsUser', 'supplementalGroups', 'fsGroup']
            _attrs = ['allowPrivilegeEscalation', 'allowedCSIDrivers', 'allowedCapabilities', 'allowedFlexVolumes', 'allowedHostPaths', 'allowedProcMountTypes', 'allowedUnsafeSysctls', 'defaultAddCapabilities', 'defaultAllowPrivilegeEscalation', 'forbiddenSysctls', 'fsGroup', 'hostIPC', 'hostNetwork', 'hostPID', 'hostPorts', 'privileged', 'readOnlyRootFilesystem', 'requiredDropCapabilities', 'runAsGroup', 'runAsUser', 'runtimeClass', 'seLinux', 'supplementalGroups', 'volumes']
            allowPrivilegeEscalation = {'type': 'boolean', 'descr': 'allowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.'}
            allowedCSIDrivers = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_AllowedCSIDriver, 'descr': 'AllowedCSIDrivers is an allowlist of inline CSI drivers that must be explicitly set to be embedded within a pod spec. An empty value indicates that any CSI driver can be used for inline ephemeral volumes. This is a beta field, and is only honored if the API server enables the CSIInlineVolume feature gate.'}
            allowedCapabilities = {'type': 'array', 'items': {'type': 'string'}, 'descr': "allowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both allowedCapabilities and requiredDropCapabilities."}
            allowedFlexVolumes = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_AllowedFlexVolume, 'descr': 'allowedFlexVolumes is an allowlist of Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the "volumes" field.'}
            allowedHostPaths = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_AllowedHostPath, 'descr': 'allowedHostPaths is an allowlist of host paths. Empty indicates that all host paths may be used.'}
            allowedProcMountTypes = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'AllowedProcMountTypes is an allowlist of allowed ProcMountTypes. Empty or nil indicates that only the DefaultProcMountType may be used. This requires the ProcMountType feature flag to be enabled.'}
            allowedUnsafeSysctls = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'allowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to allowlist all allowed unsafe sysctls explicitly to avoid rejection.\n\nExamples: e.g. "foo/*" allows "foo/bar", "foo/baz", etc. e.g. "foo.*" allows "foo.bar", "foo.baz", etc.'}
            defaultAddCapabilities = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'defaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capability in both defaultAddCapabilities and requiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the allowedCapabilities list.'}
            defaultAllowPrivilegeEscalation = {'type': 'boolean', 'descr': 'defaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.'}
            forbiddenSysctls = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'forbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.\n\nExamples: e.g. "foo/*" forbids "foo/bar", "foo/baz", etc. e.g. "foo.*" forbids "foo.bar", "foo.baz", etc.'}
            fsGroup = {'$ref': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_FSGroupStrategyOptions, 'descr': 'fsGroup is the strategy that will dictate what fs group is used by the SecurityContext.'}
            hostIPC = {'type': 'boolean', 'descr': 'hostIPC determines if the policy allows the use of HostIPC in the pod spec.'}
            hostNetwork = {'type': 'boolean', 'descr': 'hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.'}
            hostPID = {'type': 'boolean', 'descr': 'hostPID determines if the policy allows the use of HostPID in the pod spec.'}
            hostPorts = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_HostPortRange, 'descr': 'hostPorts determines which host port ranges are allowed to be exposed.'}
            privileged = {'type': 'boolean', 'descr': 'privileged determines if a pod can request to be run as privileged.'}
            readOnlyRootFilesystem = {'type': 'boolean', 'descr': 'readOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.'}
            requiredDropCapabilities = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'requiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.'}
            runAsGroup = {'$ref': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_RunAsGroupStrategyOptions, 'descr': "RunAsGroup is the strategy that will dictate the allowable RunAsGroup values that may be set. If this field is omitted, the pod's RunAsGroup can take any value. This field requires the RunAsGroup feature gate to be enabled."}
            runAsUser = {'$ref': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_RunAsUserStrategyOptions, 'descr': 'runAsUser is the strategy that will dictate the allowable RunAsUser values that may be set.'}
            runtimeClass = {'$ref': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_RuntimeClassStrategyOptions, 'descr': "runtimeClass is the strategy that will dictate the allowable RuntimeClasses for a pod. If this field is omitted, the pod's runtimeClassName field is unrestricted. Enforcement of this field depends on the RuntimeClass feature gate being enabled."}
            seLinux = {'$ref': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_SELinuxStrategyOptions, 'descr': 'seLinux is the strategy that will dictate the allowable labels that may be set.'}
            supplementalGroups = {'$ref': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_SupplementalGroupsStrategyOptions, 'descr': 'supplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.'}
            volumes = {'type': 'array', 'items': {'type': 'string'}, 'descr': "volumes is an allowlist of volume plugins. Empty indicates that no volumes may be used. To allow all volumes you may use '*'."}
        R.allowPrivilegeEscalation = True
        R.allowedCSIDrivers = [lambda: Defs.definitions_io_k8s_api_policy_v1beta1_AllowedCSIDriver]
        R.allowedCapabilities = [str_dflt]
        R.allowedFlexVolumes = [lambda: Defs.definitions_io_k8s_api_policy_v1beta1_AllowedFlexVolume]
        R.allowedHostPaths = [lambda: Defs.definitions_io_k8s_api_policy_v1beta1_AllowedHostPath]
        R.allowedProcMountTypes = [str_dflt]
        R.allowedUnsafeSysctls = [str_dflt]
        R.defaultAddCapabilities = [str_dflt]
        R.defaultAllowPrivilegeEscalation = True
        R.forbiddenSysctls = [str_dflt]
        R.fsGroup = lambda: Defs.definitions_io_k8s_api_policy_v1beta1_FSGroupStrategyOptions
        R.hostIPC = True
        R.hostNetwork = True
        R.hostPID = True
        R.hostPorts = [lambda: Defs.definitions_io_k8s_api_policy_v1beta1_HostPortRange]
        R.privileged = True
        R.readOnlyRootFilesystem = True
        R.requiredDropCapabilities = [str_dflt]
        R.runAsGroup = lambda: Defs.definitions_io_k8s_api_policy_v1beta1_RunAsGroupStrategyOptions
        R.runAsUser = lambda: Defs.definitions_io_k8s_api_policy_v1beta1_RunAsUserStrategyOptions
        R.runtimeClass = lambda: Defs.definitions_io_k8s_api_policy_v1beta1_RuntimeClassStrategyOptions
        R.seLinux = lambda: Defs.definitions_io_k8s_api_policy_v1beta1_SELinuxStrategyOptions
        R.supplementalGroups = lambda: Defs.definitions_io_k8s_api_policy_v1beta1_SupplementalGroupsStrategyOptions
        R.volumes = [str_dflt]
    class definitions_io_k8s_api_policy_v1beta1_RunAsGroupStrategyOptions:
        """#/definitions/io.k8s.api.policy.v1beta1.RunAsGroupStrategyOptions"""
        class R:
            description = 'RunAsGroupStrategyOptions defines the strategy type and any options used to create the strategy.'
            type = 'object'
            required = ['rule']
            _attrs = ['ranges', 'rule']
            ranges = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_IDRange, 'descr': 'ranges are the allowed ranges of gids that may be used. If you would like to force a single gid then supply a single range with the same start and end. Required for MustRunAs.'}
            rule = {'type': 'string', 'descr': 'rule is the strategy that will dictate the allowable RunAsGroup values that may be set.'}
        R.ranges = [lambda: Defs.definitions_io_k8s_api_policy_v1beta1_IDRange]
        R.rule = str_dflt
    class definitions_io_k8s_api_policy_v1beta1_RunAsUserStrategyOptions:
        """#/definitions/io.k8s.api.policy.v1beta1.RunAsUserStrategyOptions"""
        class R:
            description = 'RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy.'
            type = 'object'
            required = ['rule']
            _attrs = ['ranges', 'rule']
            ranges = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_IDRange, 'descr': 'ranges are the allowed ranges of uids that may be used. If you would like to force a single uid then supply a single range with the same start and end. Required for MustRunAs.'}
            rule = {'type': 'string', 'descr': 'rule is the strategy that will dictate the allowable RunAsUser values that may be set.'}
        R.ranges = [lambda: Defs.definitions_io_k8s_api_policy_v1beta1_IDRange]
        R.rule = str_dflt
    class definitions_io_k8s_api_policy_v1beta1_RuntimeClassStrategyOptions:
        """#/definitions/io.k8s.api.policy.v1beta1.RuntimeClassStrategyOptions"""
        class R:
            description = 'RuntimeClassStrategyOptions define the strategy that will dictate the allowable RuntimeClasses for a pod.'
            type = 'object'
            required = ['allowedRuntimeClassNames']
            _attrs = ['allowedRuntimeClassNames', 'defaultRuntimeClassName']
            allowedRuntimeClassNames = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'allowedRuntimeClassNames is an allowlist of RuntimeClass names that may be specified on a pod. A value of "*" means that any RuntimeClass name is allowed, and must be the only item in the list. An empty list requires the RuntimeClassName field to be unset.'}
            defaultRuntimeClassName = {'type': 'string', 'descr': 'defaultRuntimeClassName is the default RuntimeClassName to set on the pod. The default MUST be allowed by the allowedRuntimeClassNames list. A value of nil does not mutate the Pod.'}
        R.allowedRuntimeClassNames = [str_dflt]
        R.defaultRuntimeClassName = str_dflt
    class definitions_io_k8s_api_policy_v1beta1_SELinuxStrategyOptions:
        """#/definitions/io.k8s.api.policy.v1beta1.SELinuxStrategyOptions"""
        class R:
            description = 'SELinuxStrategyOptions defines the strategy type and any options used to create the strategy.'
            type = 'object'
            required = ['rule']
            _attrs = ['rule', 'seLinuxOptions']
            rule = {'type': 'string', 'descr': 'rule is the strategy that will dictate the allowable labels that may be set.'}
            seLinuxOptions = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_SELinuxOptions, 'descr': 'seLinuxOptions required to run as; required for MustRunAs More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'}
        R.rule = str_dflt
        R.seLinuxOptions = lambda: Defs.definitions_io_k8s_api_core_v1_SELinuxOptions
    class definitions_io_k8s_api_policy_v1beta1_SupplementalGroupsStrategyOptions:
        """#/definitions/io.k8s.api.policy.v1beta1.SupplementalGroupsStrategyOptions"""
        class R:
            description = 'SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy.'
            type = 'object'
            _attrs = ['ranges', 'rule']
            ranges = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_policy_v1beta1_IDRange, 'descr': 'ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end. Required for MustRunAs.'}
            rule = {'type': 'string', 'descr': 'rule is the strategy that will dictate what supplemental groups is used in the SecurityContext.'}
        R.ranges = [lambda: Defs.definitions_io_k8s_api_policy_v1beta1_IDRange]
        R.rule = str_dflt
    class definitions_io_k8s_api_rbac_v1_AggregationRule:
        """#/definitions/io.k8s.api.rbac.v1.AggregationRule"""
        class R:
            description = 'AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole'
            type = 'object'
            _attrs = ['clusterRoleSelectors']
            clusterRoleSelectors = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': "ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added"}
        R.clusterRoleSelectors = [lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector]
    class definitions_io_k8s_api_rbac_v1_ClusterRole:
        """#/definitions/io.k8s.api.rbac.v1.ClusterRole"""
        class R:
            description = 'ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRole', 'version': 'v1'}]
            _attrs = ['aggregationRule', 'apiVersion', 'kind', 'metadata', 'rules']
            aggregationRule = {'$ref': lambda: Defs.definitions_io_k8s_api_rbac_v1_AggregationRule, 'descr': 'AggregationRule is an optional field that describes how to build the Rules for this ClusterRole. If AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be stomped by the controller.'}
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata."}
            rules = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_rbac_v1_PolicyRule, 'descr': 'Rules holds all the PolicyRules for this ClusterRole'}
        R.aggregationRule = lambda: Defs.definitions_io_k8s_api_rbac_v1_AggregationRule
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.rules = [lambda: Defs.definitions_io_k8s_api_rbac_v1_PolicyRule]
    class definitions_io_k8s_api_rbac_v1_ClusterRoleBinding:
        """#/definitions/io.k8s.api.rbac.v1.ClusterRoleBinding"""
        class R:
            description = 'ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.'
            type = 'object'
            required = ['roleRef']
            x_kubernetes_group_version_kind = [{'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRoleBinding', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'roleRef', 'subjects']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata."}
            roleRef = {'$ref': lambda: Defs.definitions_io_k8s_api_rbac_v1_RoleRef, 'descr': 'RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.'}
            subjects = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_rbac_v1_Subject, 'descr': 'Subjects holds references to the objects the role applies to.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.roleRef = lambda: Defs.definitions_io_k8s_api_rbac_v1_RoleRef
        R.subjects = [lambda: Defs.definitions_io_k8s_api_rbac_v1_Subject]
    class definitions_io_k8s_api_rbac_v1_ClusterRoleBindingList:
        """#/definitions/io.k8s.api.rbac.v1.ClusterRoleBindingList"""
        class R:
            description = 'ClusterRoleBindingList is a collection of ClusterRoleBindings'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRoleBindingList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_rbac_v1_ClusterRoleBinding, 'descr': 'Items is a list of ClusterRoleBindings'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': "Standard object's metadata."}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_rbac_v1_ClusterRoleBinding]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_rbac_v1_ClusterRoleList:
        """#/definitions/io.k8s.api.rbac.v1.ClusterRoleList"""
        class R:
            description = 'ClusterRoleList is a collection of ClusterRoles'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRoleList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_rbac_v1_ClusterRole, 'descr': 'Items is a list of ClusterRoles'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': "Standard object's metadata."}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_rbac_v1_ClusterRole]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_rbac_v1_PolicyRule:
        """#/definitions/io.k8s.api.rbac.v1.PolicyRule"""
        class R:
            description = 'PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.'
            type = 'object'
            required = ['verbs']
            _attrs = ['apiGroups', 'nonResourceURLs', 'resourceNames', 'resources', 'verbs']
            apiGroups = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.'}
            nonResourceURLs = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.'}
            resourceNames = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.'}
            resources = {'type': 'array', 'items': {'type': 'string'}, 'descr': "Resources is a list of resources this rule applies to. '*' represents all resources."}
            verbs = {'type': 'array', 'items': {'type': 'string'}, 'descr': "Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule. '*' represents all verbs."}
        R.apiGroups = [str_dflt]
        R.nonResourceURLs = [str_dflt]
        R.resourceNames = [str_dflt]
        R.resources = [str_dflt]
        R.verbs = [str_dflt]
    class definitions_io_k8s_api_rbac_v1_Role:
        """#/definitions/io.k8s.api.rbac.v1.Role"""
        class R:
            description = 'Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'rbac.authorization.k8s.io', 'kind': 'Role', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'rules']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata."}
            rules = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_rbac_v1_PolicyRule, 'descr': 'Rules holds all the PolicyRules for this Role'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.rules = [lambda: Defs.definitions_io_k8s_api_rbac_v1_PolicyRule]
    class definitions_io_k8s_api_rbac_v1_RoleBinding:
        """#/definitions/io.k8s.api.rbac.v1.RoleBinding"""
        class R:
            description = 'RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.'
            type = 'object'
            required = ['roleRef']
            x_kubernetes_group_version_kind = [{'group': 'rbac.authorization.k8s.io', 'kind': 'RoleBinding', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'roleRef', 'subjects']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata."}
            roleRef = {'$ref': lambda: Defs.definitions_io_k8s_api_rbac_v1_RoleRef, 'descr': 'RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.'}
            subjects = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_rbac_v1_Subject, 'descr': 'Subjects holds references to the objects the role applies to.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.roleRef = lambda: Defs.definitions_io_k8s_api_rbac_v1_RoleRef
        R.subjects = [lambda: Defs.definitions_io_k8s_api_rbac_v1_Subject]
    class definitions_io_k8s_api_rbac_v1_RoleBindingList:
        """#/definitions/io.k8s.api.rbac.v1.RoleBindingList"""
        class R:
            description = 'RoleBindingList is a collection of RoleBindings'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'rbac.authorization.k8s.io', 'kind': 'RoleBindingList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_rbac_v1_RoleBinding, 'descr': 'Items is a list of RoleBindings'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': "Standard object's metadata."}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_rbac_v1_RoleBinding]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_rbac_v1_RoleList:
        """#/definitions/io.k8s.api.rbac.v1.RoleList"""
        class R:
            description = 'RoleList is a collection of Roles'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'rbac.authorization.k8s.io', 'kind': 'RoleList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_rbac_v1_Role, 'descr': 'Items is a list of Roles'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': "Standard object's metadata."}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_rbac_v1_Role]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_rbac_v1_RoleRef:
        """#/definitions/io.k8s.api.rbac.v1.RoleRef"""
        class R:
            description = 'RoleRef contains information that points to the role being used'
            type = 'object'
            required = ['apiGroup', 'kind', 'name']
            x_kubernetes_map_type = 'atomic'
            _attrs = ['apiGroup', 'kind', 'name']
            apiGroup = {'type': 'string', 'descr': 'APIGroup is the group for the resource being referenced'}
            kind = {'type': 'string', 'descr': 'Kind is the type of resource being referenced'}
            name = {'type': 'string', 'descr': 'Name is the name of resource being referenced'}
        R.apiGroup = str_dflt
        R.kind = str_dflt
        R.name = name
    class definitions_io_k8s_api_rbac_v1_Subject:
        """#/definitions/io.k8s.api.rbac.v1.Subject"""
        class R:
            description = 'Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.'
            type = 'object'
            required = ['kind', 'name']
            x_kubernetes_map_type = 'atomic'
            _attrs = ['apiGroup', 'kind', 'name', 'namespace']
            apiGroup = {'type': 'string', 'descr': 'APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.'}
            kind = {'type': 'string', 'descr': 'Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.'}
            name = {'type': 'string', 'descr': 'Name of the object being referenced.'}
            namespace = {'type': 'string', 'descr': 'Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.'}
        R.apiGroup = str_dflt
        R.kind = str_dflt
        R.name = name
        R.namespace = namespace
    class definitions_io_k8s_api_scheduling_v1_PriorityClass:
        """#/definitions/io.k8s.api.scheduling.v1.PriorityClass"""
        class R:
            description = 'PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.'
            type = 'object'
            required = ['value']
            x_kubernetes_group_version_kind = [{'group': 'scheduling.k8s.io', 'kind': 'PriorityClass', 'version': 'v1'}]
            _attrs = ['apiVersion', 'description', 'globalDefault', 'kind', 'metadata', 'preemptionPolicy', 'value']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            description = {'type': 'string', 'descr': 'description is an arbitrary string that usually provides guidelines on when this priority class should be used.'}
            globalDefault = {'type': 'boolean', 'descr': 'globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            preemptionPolicy = {'type': 'string', 'descr': 'PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is beta-level, gated by the NonPreemptingPriority feature-gate.'}
            value = {'type': 'integer', 'format': 'int32', 'descr': 'The value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.'}
        R.apiVersion = str_dflt
        R.description = str_dflt
        R.globalDefault = True
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.preemptionPolicy = str_dflt
        R.value = 0
    class definitions_io_k8s_api_scheduling_v1_PriorityClassList:
        """#/definitions/io.k8s.api.scheduling.v1.PriorityClassList"""
        class R:
            description = 'PriorityClassList is a collection of priority classes.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'scheduling.k8s.io', 'kind': 'PriorityClassList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_scheduling_v1_PriorityClass, 'descr': 'items is the list of PriorityClasses'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_scheduling_v1_PriorityClass]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_storage_v1_CSIDriver:
        """#/definitions/io.k8s.api.storage.v1.CSIDriver"""
        class R:
            description = 'CSIDriver captures information about a Container Storage Interface (CSI) volume driver deployed on the cluster. Kubernetes attach detach controller uses this object to determine whether attach is required. Kubelet uses this object to determine whether pod information needs to be passed on mount. CSIDriver objects are non-namespaced.'
            type = 'object'
            required = ['spec']
            x_kubernetes_group_version_kind = [{'group': 'storage.k8s.io', 'kind': 'CSIDriver', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'Standard object metadata. metadata.Name indicates the name of the CSI driver that this object refers to; it MUST be the same name returned by the CSI GetPluginName() call for that driver. The driver name must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), dots (.), and alphanumerics between. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_storage_v1_CSIDriverSpec, 'descr': 'Specification of the CSI Driver.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_storage_v1_CSIDriverSpec
    class definitions_io_k8s_api_storage_v1_CSIDriverList:
        """#/definitions/io.k8s.api.storage.v1.CSIDriverList"""
        class R:
            description = 'CSIDriverList is a collection of CSIDriver objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'storage.k8s.io', 'kind': 'CSIDriverList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_storage_v1_CSIDriver, 'descr': 'items is the list of CSIDriver'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_storage_v1_CSIDriver]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_storage_v1_CSIDriverSpec:
        """#/definitions/io.k8s.api.storage.v1.CSIDriverSpec"""
        class R:
            description = 'CSIDriverSpec is the specification of a CSIDriver.'
            type = 'object'
            _attrs = ['attachRequired', 'fsGroupPolicy', 'podInfoOnMount', 'requiresRepublish', 'storageCapacity', 'tokenRequests', 'volumeLifecycleModes']
            attachRequired = {'type': 'boolean', 'descr': 'attachRequired indicates this CSI volume driver requires an attach operation (because it implements the CSI ControllerPublishVolume() method), and that the Kubernetes attach detach controller should call the attach volume interface which checks the volumeattachment status and waits until the volume is attached before proceeding to mounting. The CSI external-attacher coordinates with CSI volume driver and updates the volumeattachment status when the attach operation is complete. If the CSIDriverRegistry feature gate is enabled and the value is specified to false, the attach operation will be skipped. Otherwise the attach operation will be called.\n\nThis field is immutable.'}
            fsGroupPolicy = {'type': 'string', 'descr': "Defines if the underlying volume supports changing ownership and permission of the volume before being mounted. Refer to the specific FSGroupPolicy values for additional details.\n\nThis field is immutable.\n\nDefaults to ReadWriteOnceWithFSType, which will examine each volume to determine if Kubernetes should modify ownership and permissions of the volume. With the default policy the defined fsGroup will only be applied if a fstype is defined and the volume's access mode contains ReadWriteOnce."}
            podInfoOnMount = {'type': 'boolean', 'descr': 'If set to true, podInfoOnMount indicates this CSI volume driver requires additional pod information (like podName, podUID, etc.) during mount operations. If set to false, pod information will not be passed on mount. Default is false. The CSI driver specifies podInfoOnMount as part of driver deployment. If true, Kubelet will pass pod information as VolumeContext in the CSI NodePublishVolume() calls. The CSI driver is responsible for parsing and validating the information passed in as VolumeContext. The following VolumeConext will be passed if podInfoOnMount is set to true. This list might grow, but the prefix will be used. "csi.storage.k8s.io/pod.name": pod.Name "csi.storage.k8s.io/pod.namespace": pod.Namespace "csi.storage.k8s.io/pod.uid": string(pod.UID) "csi.storage.k8s.io/ephemeral": "true" if the volume is an ephemeral inline volume\n                                defined by a CSIVolumeSource, otherwise "false"\n\n"csi.storage.k8s.io/ephemeral" is a new feature in Kubernetes 1.16. It...'}
            requiresRepublish = {'type': 'boolean', 'descr': 'RequiresRepublish indicates the CSI driver wants `NodePublishVolume` being periodically called to reflect any possible change in the mounted volume. This field defaults to false.\n\nNote: After a successful initial NodePublishVolume call, subsequent calls to NodePublishVolume should only update the contents of the volume. New mount points will not be seen by a running container.'}
            storageCapacity = {'type': 'boolean', 'descr': 'If set to true, storageCapacity indicates that the CSI volume driver wants pod scheduling to consider the storage capacity that the driver deployment will report by creating CSIStorageCapacity objects with capacity information.\n\nThe check can be enabled immediately when deploying a driver. In that case, provisioning new volumes with late binding will pause until the driver deployment has published some suitable CSIStorageCapacity object.\n\nAlternatively, the driver can be deployed with the field unset or false and it can be flipped later when storage capacity information has been published.\n\nThis field was immutable in Kubernetes <= 1.22 and now is mutable.\n\nThis is a beta field and only available when the CSIStorageCapacity feature is enabled. The default is false.'}
            tokenRequests = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_storage_v1_TokenRequest, 'x-kubernetes-list-type': 'atomic', 'descr': 'TokenRequests indicates the CSI driver needs pods\' service account tokens it is mounting volume for to do necessary authentication. Kubelet will pass the tokens in VolumeContext in the CSI NodePublishVolume calls. The CSI driver should parse and validate the following VolumeContext: "csi.storage.k8s.io/serviceAccount.tokens": {\n  "<audience>": {\n    "token": <token>,\n    "expirationTimestamp": <expiration timestamp in RFC3339>,\n  },\n  ...\n}\n\nNote: Audience in each TokenRequest should be different and at most one token is empty string. To receive a new token after expiry, RequiresRepublish can be used to trigger NodePublishVolume periodically.'}
            volumeLifecycleModes = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-list-type': 'set', 'descr': 'volumeLifecycleModes defines what kind of volumes this CSI volume driver supports. The default if the list is empty is "Persistent", which is the usage defined by the CSI specification and implemented in Kubernetes via the usual PV/PVC mechanism. The other mode is "Ephemeral". In this mode, volumes are defined inline inside the pod spec with CSIVolumeSource and their lifecycle is tied to the lifecycle of that pod. A driver has to be aware of this because it is only going to get a NodePublishVolume call for such a volume. For more information about implementing this mode, see https://kubernetes-csi.github.io/docs/ephemeral-local-volumes.html A driver can support one or more of these modes and more modes may be added in the future. This field is beta.\n\nThis field is immutable.'}
        R.attachRequired = True
        R.fsGroupPolicy = str_dflt
        R.podInfoOnMount = True
        R.requiresRepublish = True
        R.storageCapacity = True
        R.tokenRequests = [lambda: Defs.definitions_io_k8s_api_storage_v1_TokenRequest]
        R.volumeLifecycleModes = [str_dflt]
    class definitions_io_k8s_api_storage_v1_CSINode:
        """#/definitions/io.k8s.api.storage.v1.CSINode"""
        class R:
            description = 'CSINode holds information about all CSI drivers installed on a node. CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn"t create this object. CSINode has an OwnerReference that points to the corresponding node object.'
            type = 'object'
            required = ['spec']
            x_kubernetes_group_version_kind = [{'group': 'storage.k8s.io', 'kind': 'CSINode', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'metadata.name must be the Kubernetes node name.'}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_storage_v1_CSINodeSpec, 'descr': 'spec is the specification of CSINode'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_storage_v1_CSINodeSpec
    class definitions_io_k8s_api_storage_v1_CSINodeDriver:
        """#/definitions/io.k8s.api.storage.v1.CSINodeDriver"""
        class R:
            description = 'CSINodeDriver holds information about the specification of one CSI driver installed on a node'
            type = 'object'
            required = ['name', 'nodeID']
            _attrs = ['allocatable', 'name', 'nodeID', 'topologyKeys']
            allocatable = {'$ref': lambda: Defs.definitions_io_k8s_api_storage_v1_VolumeNodeResources, 'descr': 'allocatable represents the volume resources of a node that are available for scheduling. This field is beta.'}
            name = {'type': 'string', 'descr': 'This is the name of the CSI driver that this object refers to. This MUST be the same name returned by the CSI GetPluginName() call for that driver.'}
            nodeID = {'type': 'string', 'descr': 'nodeID of the node from the driver point of view. This field enables Kubernetes to communicate with storage systems that do not share the same nomenclature for nodes. For example, Kubernetes may refer to a given node as "node1", but the storage system may refer to the same node as "nodeA". When Kubernetes issues a command to the storage system to attach a volume to a specific node, it can use this field to refer to the node name using the ID that the storage system will understand, e.g. "nodeA" instead of "node1". This field is required.'}
            topologyKeys = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'topologyKeys is the list of keys supported by the driver. When a driver is initialized on a cluster, it provides a set of topology keys that it understands (e.g. "company.com/zone", "company.com/region"). When a driver is initialized on a node, it provides the same topology keys along with values. Kubelet will expose these topology keys as labels on its own node object. When Kubernetes does topology aware provisioning, it can use this list to determine which labels it should retrieve from the node object and pass back to the driver. It is possible for different nodes to use different topology keys. This can be empty if driver does not support topology.'}
        R.allocatable = lambda: Defs.definitions_io_k8s_api_storage_v1_VolumeNodeResources
        R.name = name
        R.nodeID = str_dflt
        R.topologyKeys = [str_dflt]
    class definitions_io_k8s_api_storage_v1_CSINodeList:
        """#/definitions/io.k8s.api.storage.v1.CSINodeList"""
        class R:
            description = 'CSINodeList is a collection of CSINode objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'storage.k8s.io', 'kind': 'CSINodeList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_storage_v1_CSINode, 'descr': 'items is the list of CSINode'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_storage_v1_CSINode]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_storage_v1_CSINodeSpec:
        """#/definitions/io.k8s.api.storage.v1.CSINodeSpec"""
        class R:
            description = 'CSINodeSpec holds information about the specification of all CSI drivers installed on a node'
            type = 'object'
            required = ['drivers']
            _attrs = ['drivers']
            drivers = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_storage_v1_CSINodeDriver, 'x-kubernetes-patch-merge-key': 'name', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'drivers is a list of information of all CSI Drivers existing on a node. If all drivers in the list are uninstalled, this can become empty.'}
        R.drivers = [lambda: Defs.definitions_io_k8s_api_storage_v1_CSINodeDriver]
    class definitions_io_k8s_api_storage_v1_StorageClass:
        """#/definitions/io.k8s.api.storage.v1.StorageClass"""
        class R:
            description = 'StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.\n\nStorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.'
            type = 'object'
            required = ['provisioner']
            x_kubernetes_group_version_kind = [{'group': 'storage.k8s.io', 'kind': 'StorageClass', 'version': 'v1'}]
            _attrs = ['allowVolumeExpansion', 'allowedTopologies', 'apiVersion', 'kind', 'metadata', 'mountOptions', 'parameters', 'provisioner', 'reclaimPolicy', 'volumeBindingMode']
            allowVolumeExpansion = {'type': 'boolean', 'descr': 'AllowVolumeExpansion shows whether the storage class allow volume expand'}
            allowedTopologies = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_core_v1_TopologySelectorTerm, 'x-kubernetes-list-type': 'atomic', 'descr': 'Restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is only honored by servers that enable the VolumeScheduling feature.'}
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            mountOptions = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'Dynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. ["ro", "soft"]. Not validated - mount of the PVs will simply fail if one is invalid.'}
            parameters = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'descr': 'Parameters holds the parameters for the provisioner that should create volumes of this storage class.'}
            provisioner = {'type': 'string', 'descr': 'Provisioner indicates the type of the provisioner.'}
            reclaimPolicy = {'type': 'string', 'descr': 'Dynamically provisioned PersistentVolumes of this storage class are created with this reclaimPolicy. Defaults to Delete.'}
            volumeBindingMode = {'type': 'string', 'descr': 'VolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is only honored by servers that enable the VolumeScheduling feature.'}
        R.allowVolumeExpansion = True
        R.allowedTopologies = [lambda: Defs.definitions_io_k8s_api_core_v1_TopologySelectorTerm]
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.mountOptions = [str_dflt]
        R.parameters = {}
        R.provisioner = str_dflt
        R.reclaimPolicy = str_dflt
        R.volumeBindingMode = str_dflt
    class definitions_io_k8s_api_storage_v1_StorageClassList:
        """#/definitions/io.k8s.api.storage.v1.StorageClassList"""
        class R:
            description = 'StorageClassList is a collection of storage classes.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'storage.k8s.io', 'kind': 'StorageClassList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_storage_v1_StorageClass, 'descr': 'Items is the list of StorageClasses'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_storage_v1_StorageClass]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_storage_v1_TokenRequest:
        """#/definitions/io.k8s.api.storage.v1.TokenRequest"""
        class R:
            description = 'TokenRequest contains parameters of a service account token.'
            type = 'object'
            required = ['audience']
            _attrs = ['audience', 'expirationSeconds']
            audience = {'type': 'string', 'descr': 'Audience is the intended audience of the token in "TokenRequestSpec". It will default to the audiences of kube apiserver.'}
            expirationSeconds = {'type': 'integer', 'format': 'int64', 'descr': 'ExpirationSeconds is the duration of validity of the token in "TokenRequestSpec". It has the same default value of "ExpirationSeconds" in "TokenRequestSpec".'}
        R.audience = str_dflt
        R.expirationSeconds = 0
    class definitions_io_k8s_api_storage_v1_VolumeAttachment:
        """#/definitions/io.k8s.api.storage.v1.VolumeAttachment"""
        class R:
            description = 'VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.\n\nVolumeAttachment objects are non-namespaced.'
            type = 'object'
            required = ['spec']
            x_kubernetes_group_version_kind = [{'group': 'storage.k8s.io', 'kind': 'VolumeAttachment', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': 'Standard object metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_api_storage_v1_VolumeAttachmentSpec, 'descr': 'Specification of the desired attach/detach volume behavior. Populated by the Kubernetes system.'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_api_storage_v1_VolumeAttachmentStatus, 'descr': 'Status of the VolumeAttachment request. Populated by the entity completing the attach or detach operation, i.e. the external-attacher.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_api_storage_v1_VolumeAttachmentSpec
        R.status = lambda: Defs.definitions_io_k8s_api_storage_v1_VolumeAttachmentStatus
    class definitions_io_k8s_api_storage_v1_VolumeAttachmentList:
        """#/definitions/io.k8s.api.storage.v1.VolumeAttachmentList"""
        class R:
            description = 'VolumeAttachmentList is a collection of VolumeAttachment objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'storage.k8s.io', 'kind': 'VolumeAttachmentList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment, 'descr': 'Items is the list of VolumeAttachments'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_api_storage_v1_VolumeAttachmentSource:
        """#/definitions/io.k8s.api.storage.v1.VolumeAttachmentSource"""
        class R:
            description = 'VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set.'
            type = 'object'
            _attrs = ['inlineVolumeSpec', 'persistentVolumeName']
            inlineVolumeSpec = {'$ref': lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeSpec, 'descr': "inlineVolumeSpec contains all the information necessary to attach a persistent volume defined by a pod's inline VolumeSource. This field is populated only for the CSIMigration feature. It contains translated fields from a pod's inline VolumeSource to a PersistentVolumeSpec. This field is beta-level and is only honored by servers that enabled the CSIMigration feature."}
            persistentVolumeName = {'type': 'string', 'descr': 'Name of the persistent volume to attach.'}
        R.inlineVolumeSpec = lambda: Defs.definitions_io_k8s_api_core_v1_PersistentVolumeSpec
        R.persistentVolumeName = str_dflt
    class definitions_io_k8s_api_storage_v1_VolumeAttachmentSpec:
        """#/definitions/io.k8s.api.storage.v1.VolumeAttachmentSpec"""
        class R:
            description = 'VolumeAttachmentSpec is the specification of a VolumeAttachment request.'
            type = 'object'
            required = ['attacher', 'source', 'nodeName']
            _attrs = ['attacher', 'nodeName', 'source']
            attacher = {'type': 'string', 'descr': 'Attacher indicates the name of the volume driver that MUST handle this request. This is the name returned by GetPluginName().'}
            nodeName = {'type': 'string', 'descr': 'The node that the volume should be attached to.'}
            source = {'$ref': lambda: Defs.definitions_io_k8s_api_storage_v1_VolumeAttachmentSource, 'descr': 'Source represents the volume that should be attached.'}
        R.attacher = str_dflt
        R.nodeName = str_dflt
        R.source = lambda: Defs.definitions_io_k8s_api_storage_v1_VolumeAttachmentSource
    class definitions_io_k8s_api_storage_v1_VolumeAttachmentStatus:
        """#/definitions/io.k8s.api.storage.v1.VolumeAttachmentStatus"""
        class R:
            description = 'VolumeAttachmentStatus is the status of a VolumeAttachment request.'
            type = 'object'
            required = ['attached']
            _attrs = ['attachError', 'attached', 'attachmentMetadata', 'detachError']
            attachError = {'$ref': lambda: Defs.definitions_io_k8s_api_storage_v1_VolumeError, 'descr': 'The last error encountered during attach operation, if any. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.'}
            attached = {'type': 'boolean', 'descr': 'Indicates the volume is successfully attached. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.'}
            attachmentMetadata = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'descr': 'Upon successful attach, this field is populated with any information returned by the attach operation that must be passed into subsequent WaitForAttach or Mount calls. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.'}
            detachError = {'$ref': lambda: Defs.definitions_io_k8s_api_storage_v1_VolumeError, 'descr': 'The last error encountered during detach operation, if any. This field must only be set by the entity completing the detach operation, i.e. the external-attacher.'}
        R.attachError = lambda: Defs.definitions_io_k8s_api_storage_v1_VolumeError
        R.attached = True
        R.attachmentMetadata = {}
        R.detachError = lambda: Defs.definitions_io_k8s_api_storage_v1_VolumeError
    class definitions_io_k8s_api_storage_v1_VolumeError:
        """#/definitions/io.k8s.api.storage.v1.VolumeError"""
        class R:
            description = 'VolumeError captures an error encountered during a volume operation.'
            type = 'object'
            _attrs = ['message', 'time']
            message = {'type': 'string', 'descr': 'String detailing the error encountered during Attach or Detach operation. This string may be logged, so it should not contain sensitive information.'}
            time = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Time the error was encountered.'}
        R.message = str_dflt
        R.time = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
    class definitions_io_k8s_api_storage_v1_VolumeNodeResources:
        """#/definitions/io.k8s.api.storage.v1.VolumeNodeResources"""
        class R:
            description = 'VolumeNodeResources is a set of resource limits for scheduling of volumes.'
            type = 'object'
            _attrs = ['count']
            count = {'type': 'integer', 'format': 'int32', 'descr': 'Maximum number of unique volumes managed by the CSI driver that can be used on a node. A volume that is both attached and mounted on a node is considered to be used once, not twice. The same rule applies for a unique volume that is shared among multiple pods on the same node. If this field is not specified, then the supported number of volumes on this node is unbounded.'}
        R.count = 0
    class definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacity:
        """#/definitions/io.k8s.api.storage.v1beta1.CSIStorageCapacity"""
        class R:
            description = 'CSIStorageCapacity stores the result of one CSI GetCapacity call. For a given StorageClass, this describes the available capacity in a particular topology segment.  This can be used when considering where to instantiate new PersistentVolumes.\n\nFor example this can express things like: - StorageClass "standard" has "1234 GiB" available in "topology.kubernetes.io/zone=us-east1" - StorageClass "localssd" has "10 GiB" available in "kubernetes.io/hostname=knode-abc123"\n\nThe following three cases all imply that no capacity is available for a certain combination: - no object exists with suitable topology and storage class name - such an object exists, but the capacity is unset - such an object exists, but the capacity is zero\n\nThe producer of these objects can decide which approach is more suitable.\n\nThey are consumed by the kube-scheduler if the CSIStorageCapacity beta feature gate is enabled there and a CSI driver opts into capacity-aware scheduling with CSIDriver.StorageCapacity.'
            type = 'object'
            required = ['storageClassName']
            x_kubernetes_group_version_kind = [{'group': 'storage.k8s.io', 'kind': 'CSIStorageCapacity', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'capacity', 'kind', 'maximumVolumeSize', 'metadata', 'nodeTopology', 'storageClassName']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            capacity = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'Capacity is the value reported by the CSI driver in its GetCapacityResponse for a GetCapacityRequest with topology and parameters that match the previous fields.\n\nThe semantic is currently (CSI spec 1.2) defined as: The available capacity, in bytes, of the storage that can be used to provision volumes. If not set, that information is currently unavailable and treated like zero capacity.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            maximumVolumeSize = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity, 'descr': 'MaximumVolumeSize is the value reported by the CSI driver in its GetCapacityResponse for a GetCapacityRequest with topology and parameters that match the previous fields.\n\nThis is defined since CSI spec 1.4.0 as the largest size that may be used in a CreateVolumeRequest.capacity_range.required_bytes field to create a volume with the same parameters as those in GetCapacityRequest. The corresponding value in the Kubernetes API is ResourceRequirements.Requests in a volume claim.'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. The name has no particular meaning. It must be be a DNS subdomain (dots allowed, 253 characters). To ensure that there are no conflicts with other CSI drivers on the cluster, the recommendation is to use csisc-<uuid>, a generated name, or a reverse-domain name which ends with the unique CSI driver name.\n\nObjects are namespaced.\n\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            nodeTopology = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector, 'descr': 'NodeTopology defines which nodes have access to the storage for which capacity was reported. If not set, the storage is not accessible from any node in the cluster. If empty, the storage is accessible from all nodes. This field is immutable.'}
            storageClassName = {'type': 'string', 'descr': 'The name of the StorageClass that the reported capacity applies to. It must meet the same requirements as the name of a StorageClass object (non-empty, DNS subdomain). If that object no longer exists, the CSIStorageCapacity object is obsolete and should be removed by its creator. This field is immutable.'}
        R.apiVersion = str_dflt
        R.capacity = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
        R.kind = str_dflt
        R.maximumVolumeSize = lambda: Defs.definitions_io_k8s_apimachinery_pkg_api_resource_Quantity
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.nodeTopology = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector
        R.storageClassName = str_dflt
    class definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacityList:
        """#/definitions/io.k8s.api.storage.v1beta1.CSIStorageCapacityList"""
        class R:
            description = 'CSIStorageCapacityList is a collection of CSIStorageCapacity objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'storage.k8s.io', 'kind': 'CSIStorageCapacityList', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacity, 'x-kubernetes-list-map-keys': ['name'], 'x-kubernetes-list-type': 'map', 'descr': 'Items is the list of CSIStorageCapacity objects.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacity]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceColumnDefinition:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition"""
        class R:
            description = 'CustomResourceColumnDefinition specifies a column for server side printing.'
            type = 'object'
            required = ['name', 'type', 'jsonPath']
            _attrs = ['description', 'format', 'jsonPath', 'name', 'priority', 'type']
            description = {'type': 'string', 'descr': 'description is a human readable description of this column.'}
            format = {'type': 'string', 'descr': "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details."}
            jsonPath = {'type': 'string', 'descr': 'jsonPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.'}
            name = {'type': 'string', 'descr': 'name is a human readable name for the column.'}
            priority = {'type': 'integer', 'format': 'int32', 'descr': 'priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.'}
            type = {'type': 'string', 'descr': 'type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.'}
        R.description = str_dflt
        R.format = str_dflt
        R.jsonPath = str_dflt
        R.name = name
        R.priority = 0
        R.type = str_dflt
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceConversion:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion"""
        class R:
            description = 'CustomResourceConversion describes how to convert different versions of a CR.'
            type = 'object'
            required = ['strategy']
            _attrs = ['strategy', 'webhook']
            strategy = {'type': 'string', 'descr': 'strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information\n  is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.'}
            webhook = {'$ref': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_WebhookConversion, 'descr': 'webhook describes how to call the conversion webhook. Required when `strategy` is set to `Webhook`.'}
        R.strategy = str_dflt
        R.webhook = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_WebhookConversion
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition"""
        class R:
            description = 'CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>.'
            type = 'object'
            required = ['spec']
            x_kubernetes_group_version_kind = [{'group': 'apiextensions.k8s.io', 'kind': 'CustomResourceDefinition', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionSpec, 'descr': 'spec describes how the user wants the resources to appear'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionStatus, 'descr': 'status indicates the actual state of the CustomResourceDefinition'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionSpec
        R.status = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionStatus
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionCondition:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition"""
        class R:
            description = 'CustomResourceDefinitionCondition contains details for the current condition of this pod.'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'lastTransitionTime last time the condition transitioned from one status to another.'}
            message = {'type': 'string', 'descr': 'message is a human-readable message indicating details about last transition.'}
            reason = {'type': 'string', 'descr': "reason is a unique, one-word, CamelCase reason for the condition's last transition."}
            status = {'type': 'string', 'descr': 'status is the status of the condition. Can be True, False, Unknown.'}
            type = {'type': 'string', 'descr': 'type is the type of the condition. Types include Established, NamesAccepted and Terminating.'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionList:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList"""
        class R:
            description = 'CustomResourceDefinitionList is a list of CustomResourceDefinition objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'apiextensions.k8s.io', 'kind': 'CustomResourceDefinitionList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition, 'descr': 'items list individual CustomResourceDefinition objects'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': "Standard object's metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionNames:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames"""
        class R:
            description = 'CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition'
            type = 'object'
            required = ['plural', 'kind']
            _attrs = ['categories', 'kind', 'listKind', 'plural', 'shortNames', 'singular']
            categories = {'type': 'array', 'items': {'type': 'string'}, 'descr': "categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`."}
            kind = {'type': 'string', 'descr': 'kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.'}
            listKind = {'type': 'string', 'descr': 'listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".'}
            plural = {'type': 'string', 'descr': 'plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.'}
            shortNames = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.'}
            singular = {'type': 'string', 'descr': 'singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.'}
        R.categories = [str_dflt]
        R.kind = str_dflt
        R.listKind = str_dflt
        R.plural = str_dflt
        R.shortNames = [str_dflt]
        R.singular = str_dflt
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionSpec:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec"""
        class R:
            description = 'CustomResourceDefinitionSpec describes how a user wants their resource to appear'
            type = 'object'
            required = ['group', 'names', 'scope', 'versions']
            _attrs = ['conversion', 'group', 'names', 'preserveUnknownFields', 'scope', 'versions']
            conversion = {'$ref': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceConversion, 'descr': 'conversion defines conversion settings for the CRD.'}
            group = {'type': 'string', 'descr': 'group is the API group of the defined custom resource. The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).'}
            names = {'$ref': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionNames, 'descr': 'names specify the resource and kind names for the custom resource.'}
            preserveUnknownFields = {'type': 'boolean', 'descr': 'preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. This field is deprecated in favor of setting `x-preserve-unknown-fields` to true in `spec.versions[*].schema.openAPIV3Schema`. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.'}
            scope = {'type': 'string', 'descr': 'scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`.'}
            versions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionVersion, 'descr': 'versions is the list of all API versions of the defined custom resource. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.'}
        R.conversion = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceConversion
        R.group = str_dflt
        R.names = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionNames
        R.preserveUnknownFields = True
        R.scope = str_dflt
        R.versions = [lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionVersion]
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionStatus:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus"""
        class R:
            description = 'CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition'
            type = 'object'
            _attrs = ['acceptedNames', 'conditions', 'storedVersions']
            acceptedNames = {'$ref': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionNames, 'descr': 'acceptedNames are the names that are actually being used to serve discovery. They may be different than the names in spec.'}
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionCondition, 'x-kubernetes-list-map-keys': ['type'], 'x-kubernetes-list-type': 'map', 'descr': 'conditions indicate state for particular aspects of a CustomResourceDefinition'}
            storedVersions = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.'}
        R.acceptedNames = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionNames
        R.conditions = [lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionCondition]
        R.storedVersions = [str_dflt]
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionVersion:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion"""
        class R:
            description = 'CustomResourceDefinitionVersion describes a version for CRD.'
            type = 'object'
            required = ['name', 'served', 'storage']
            _attrs = ['additionalPrinterColumns', 'deprecated', 'deprecationWarning', 'name', 'schema', 'served', 'storage', 'subresources']
            additionalPrinterColumns = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceColumnDefinition, 'descr': 'additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.'}
            deprecated = {'type': 'boolean', 'descr': 'deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.'}
            deprecationWarning = {'type': 'string', 'descr': 'deprecationWarning overrides the default warning returned to API clients. May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.'}
            name = {'type': 'string', 'descr': 'name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.'}
            schema = {'$ref': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceValidation, 'descr': 'schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource.'}
            served = {'type': 'boolean', 'descr': 'served is a flag enabling/disabling this version from being served via REST APIs'}
            storage = {'type': 'boolean', 'descr': 'storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.'}
            subresources = {'$ref': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresources, 'descr': 'subresources specify what subresources this version of the defined custom resource have.'}
        R.additionalPrinterColumns = [lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceColumnDefinition]
        R.deprecated = True
        R.deprecationWarning = str_dflt
        R.name = name
        R.schema = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceValidation
        R.served = True
        R.storage = True
        R.subresources = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresources
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresourceScale:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale"""
        class R:
            description = 'CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.'
            type = 'object'
            required = ['specReplicasPath', 'statusReplicasPath']
            _attrs = ['labelSelectorPath', 'specReplicasPath', 'statusReplicasPath']
            labelSelectorPath = {'type': 'string', 'descr': 'labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.'}
            specReplicasPath = {'type': 'string', 'descr': 'specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.'}
            statusReplicasPath = {'type': 'string', 'descr': 'statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.'}
        R.labelSelectorPath = str_dflt
        R.specReplicasPath = str_dflt
        R.statusReplicasPath = str_dflt
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresourceStatus:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus"""
        class R:
            _attrs = ['__val__']
            __val__ = {'type': 'object', 'descr': 'CustomResourceSubresourceStatus defines how to serve the status subresource for CustomResources. Status is represented by the `.status` JSON path inside of a CustomResource. When set, * exposes a /status subresource for the custom resource * PUT requests to the /status subresource take a custom resource object, and ignore changes to anything except the status stanza * PUT/POST/PATCH requests to the custom resource ignore changes to the status stanza'}
        R.__val__ = {}
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresources:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources"""
        class R:
            description = 'CustomResourceSubresources defines the status and scale subresources for CustomResources.'
            type = 'object'
            _attrs = ['scale', 'status']
            scale = {'$ref': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresourceScale, 'descr': 'scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresourceStatus, 'descr': 'status indicates the custom resource should serve a `/status` subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object. 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.'}
        R.scale = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresourceScale
        R.status = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresourceStatus
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceValidation:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation"""
        class R:
            description = 'CustomResourceValidation is a list of validation methods for CustomResources.'
            type = 'object'
            _attrs = ['openAPIV3Schema']
            openAPIV3Schema = {'$ref': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaProps, 'descr': 'openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning.'}
        R.openAPIV3Schema = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaProps
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ExternalDocumentation:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation"""
        class R:
            description = 'ExternalDocumentation allows referencing an external resource for extended documentation.'
            type = 'object'
            _attrs = ['description', 'url']
            description = {'type': 'string'}
            url = {'type': 'string'}
        R.description = str_dflt
        R.url = str_dflt
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSON:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON"""
        class R:
            description = 'JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.'
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaProps:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"""
        class R:
            description = 'JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).'
            type = 'object'
            _attrs = ['additionalItems', 'additionalProperties', 'allOf', 'anyOf', 'default', 'definitions', 'dependencies', 'description', 'enum', 'example', 'exclusiveMaximum', 'exclusiveMinimum', 'externalDocs', 'format', 'id', 'items', 'maxItems', 'maxLength', 'maxProperties', 'maximum', 'minItems', 'minLength', 'minProperties', 'minimum', 'multipleOf', 'nullable', 'oneOf', 'pattern', 'patternProperties', 'properties', 'required', 'title', 'type', 'uniqueItems', '_ref', '_schema', 'not__', 'x_kubernetes_embedded_resource', 'x_kubernetes_int_or_string', 'x_kubernetes_list_map_keys', 'x_kubernetes_list_type', 'x_kubernetes_map_type', 'x_kubernetes_preserve_unknown_fields', 'x_kubernetes_validations']
            additionalItems = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsOrBool
            additionalProperties = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsOrBool
            allOf = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaProps}
            anyOf = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaProps}
            default = {'$ref': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSON, 'descr': 'default is a default value for undefined object fields. Defaulting is a beta feature under the CustomResourceDefaulting feature gate. Defaulting requires spec.preserveUnknownFields to be false.'}
            definitions = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaProps}
            dependencies = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsOrStringArray}
            description = {'type': 'string'}
            enum = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSON}
            example = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSON
            exclusiveMaximum = {'type': 'boolean'}
            exclusiveMinimum = {'type': 'boolean'}
            externalDocs = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ExternalDocumentation
            format = {'type': 'string', 'descr': 'format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:\n\n- bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?...'}
            id = {'type': 'string'}
            items = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsOrArray
            maxItems = {'type': 'integer', 'format': 'int64'}
            maxLength = {'type': 'integer', 'format': 'int64'}
            maxProperties = {'type': 'integer', 'format': 'int64'}
            maximum = {'type': 'number', 'format': 'double'}
            minItems = {'type': 'integer', 'format': 'int64'}
            minLength = {'type': 'integer', 'format': 'int64'}
            minProperties = {'type': 'integer', 'format': 'int64'}
            minimum = {'type': 'number', 'format': 'double'}
            multipleOf = {'type': 'number', 'format': 'double'}
            nullable = {'type': 'boolean'}
            oneOf = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaProps}
            pattern = {'type': 'string'}
            patternProperties = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaProps}
            properties = {'type': 'object', 'additionalProperties': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaProps}
            required = {'type': 'array', 'items': {'type': 'string'}}
            title = {'type': 'string'}
            type = {'type': 'string'}
            uniqueItems = {'type': 'boolean'}
            _ref = {'type': 'string'}
            _schema = {'type': 'string'}
            not__ = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaProps
            x_kubernetes_embedded_resource = {'type': 'boolean', 'descr': 'x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).'}
            x_kubernetes_int_or_string = {'type': 'boolean', 'descr': 'x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:\n\n1) anyOf:\n   - type: integer\n   - type: string\n2) allOf:\n   - anyOf:\n     - type: integer\n     - type: string\n   - ... zero or more'}
            x_kubernetes_list_map_keys = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.\n\nThis tag MUST only be used on lists that have the "x-kubernetes-list-type" extension set to "map". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).\n\nThe properties specified must either be required or have a default value, to ensure those properties are present for all list items.'}
            x_kubernetes_list_type = {'type': 'string', 'descr': 'x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:\n\n1) `atomic`: the list is treated as a single entity, like a scalar.\n     Atomic lists will be entirely replaced when updated. This extension\n     may be used on any type of list (struct, scalar, ...).\n2) `set`:\n     Sets are lists that must not have multiple items with the same value. Each\n     value must be a scalar, an object with x-kubernetes-map-type `atomic` or an\n     array with x-kubernetes-list-type `atomic`.\n3) `map`:\n     These lists are like maps in that their elements have a non-index key\n     used to identify them. Order is preserved upon merge. The map tag\n     must only be used on a list with elements of type object.\nDefaults to atomic for arrays.'}
            x_kubernetes_map_type = {'type': 'string', 'descr': 'x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:\n\n1) `granular`:\n     These maps are actual maps (key-value pairs) and each fields are independent\n     from each other (they can each be manipulated by separate actors). This is\n     the default behaviour for all maps.\n2) `atomic`: the list is treated as a single entity, like a scalar.\n     Atomic maps will be entirely replaced when updated.'}
            x_kubernetes_preserve_unknown_fields = {'type': 'boolean', 'descr': 'x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.'}
            x_kubernetes_validations = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ValidationRule, 'x-kubernetes-list-map-keys': ['rule'], 'x-kubernetes-list-type': 'map', 'x-kubernetes-patch-merge-key': 'rule', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'x-kubernetes-validations describes a list of validation rules written in the CEL expression language. This field is an alpha-level. Using this field requires the feature gate `CustomResourceValidationExpressions` to be enabled.'}
        R.additionalItems = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsOrBool
        R.additionalProperties = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsOrBool
        R.allOf = [lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaProps]
        R.anyOf = [lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaProps]
        R.default = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSON
        R.definitions = {}
        R.dependencies = {}
        R.description = str_dflt
        R.enum = [lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSON]
        R.example = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSON
        R.exclusiveMaximum = True
        R.exclusiveMinimum = True
        R.externalDocs = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ExternalDocumentation
        R.format = str_dflt
        R.id = str_dflt
        R.items = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsOrArray
        R.maxItems = 0
        R.maxLength = 0
        R.maxProperties = 0
        R.maximum = 0.0
        R.minItems = 0
        R.minLength = 0
        R.minProperties = 0
        R.minimum = 0.0
        R.multipleOf = 0.0
        R.nullable = True
        R.oneOf = [lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaProps]
        R.pattern = str_dflt
        R.patternProperties = {}
        R.properties = {}
        R.required = [str_dflt]
        R.title = str_dflt
        R.type = str_dflt
        R.uniqueItems = True
        R._ref = str_dflt
        R._schema = str_dflt
        R.not__ = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaProps
        R.x_kubernetes_embedded_resource = True
        R.x_kubernetes_int_or_string = True
        R.x_kubernetes_list_map_keys = [str_dflt]
        R.x_kubernetes_list_type = str_dflt
        R.x_kubernetes_map_type = str_dflt
        R.x_kubernetes_preserve_unknown_fields = True
        R.x_kubernetes_validations = [lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ValidationRule]
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsOrArray:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray"""
        class R:
            description = 'JSONSchemaPropsOrArray represents a value that can either be a JSONSchemaProps or an array of JSONSchemaProps. Mainly here for serialization purposes.'
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsOrBool:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool"""
        class R:
            description = 'JSONSchemaPropsOrBool represents JSONSchemaProps or a boolean value. Defaults to true for the boolean property.'
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsOrStringArray:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray"""
        class R:
            description = 'JSONSchemaPropsOrStringArray represents a JSONSchemaProps or a string array.'
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ServiceReference:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference"""
        class R:
            description = 'ServiceReference holds a reference to Service.legacy.k8s.io'
            type = 'object'
            required = ['namespace', 'name']
            _attrs = ['name', 'namespace', 'path', 'port']
            name = {'type': 'string', 'descr': 'name is the name of the service. Required'}
            namespace = {'type': 'string', 'descr': 'namespace is the namespace of the service. Required'}
            path = {'type': 'string', 'descr': 'path is an optional URL path at which the webhook will be contacted.'}
            port = {'type': 'integer', 'format': 'int32', 'descr': 'port is an optional service port at which the webhook will be contacted. `port` should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.'}
        R.name = name
        R.namespace = namespace
        R.path = path
        R.port = 0
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ValidationRule:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule"""
        class R:
            description = 'ValidationRule describes a validation rule written in the CEL expression language.'
            type = 'object'
            required = ['rule']
            _attrs = ['message', 'rule']
            message = {'type': 'string', 'descr': 'Message represents the message displayed when validation fails. The message is required if the Rule contains line breaks. The message must not contain line breaks. If unset, the message is "failed rule: {Rule}". e.g. "must be a URL with the host matching spec.host"'}
            rule = {'type': 'string', 'descr': 'Rule represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec The Rule is scoped to the location of the x-kubernetes-validations extension in the schema. The `self` variable in the CEL expression is bound to the scoped value. Example: - Rule scoped to the root of a resource with a status subresource: {"rule": "self.status.actual <= self.spec.maxDesired"}\n\nIf the Rule is scoped to an object with properties, the accessible properties of the object are field selectable via `self.field` and field presence can be checked via `has(self.field)`. Null valued fields are treated as absent fields in CEL expressions. If the Rule is scoped to an object with additionalProperties (i.e. a map) the value of the map are accessible via `self[mapKey]`, map containment can be checked via `mapKey in self` and all entries of the map are accessible via CEL macros and functions such as `self.all(...)`. If the Rule is scoped to an array, the elements of the array are acc...'}
        R.message = str_dflt
        R.rule = str_dflt
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_WebhookClientConfig:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig"""
        class R:
            description = 'WebhookClientConfig contains the information to make a TLS connection with the webhook.'
            type = 'object'
            _attrs = ['caBundle', 'service', 'url']
            caBundle = {'type': 'string', 'format': 'byte', 'descr': "caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used."}
            service = {'$ref': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ServiceReference, 'descr': 'service is a reference to the service for this webhook. Either service or url must be specified.\n\nIf the webhook is running within the cluster, then you should use `service`.'}
            url = {'type': 'string', 'descr': 'url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.\n\nThe `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.\n\nPlease note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\n\nThe scheme must be "https"; the URL must begin with "https://".\n\nA path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.\n\nAttempting to use a user or basic ...'}
        R.caBundle = str_dflt
        R.service = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ServiceReference
        R.url = str_dflt
    class definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_WebhookConversion:
        """#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion"""
        class R:
            description = 'WebhookConversion describes how to call a conversion webhook'
            type = 'object'
            required = ['conversionReviewVersions']
            _attrs = ['clientConfig', 'conversionReviewVersions']
            clientConfig = {'$ref': lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_WebhookClientConfig, 'descr': 'clientConfig is the instructions for how to call the webhook if strategy is `Webhook`.'}
            conversionReviewVersions = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail.'}
        R.clientConfig = lambda: Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_WebhookClientConfig
        R.conversionReviewVersions = [str_dflt]
    class definitions_io_k8s_apimachinery_pkg_api_resource_Quantity:
        """#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"""
        class R:
            _attrs = ['__val__']
            __val__ = {'type': 'string', 'descr': 'Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n<quantity>        ::= <signedNumber><suffix>\n  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n<decimalSI>       ::= m | "" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn\'t choose the capitalization.)\n<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>\n\nNo matter which of the three exponent forms is use...'}
        R.__val__ = str_dflt
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"""
        class R:
            description = 'APIGroup contains the name, the supported versions, and the preferred version of a group.'
            type = 'object'
            required = ['name', 'versions']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'APIGroup', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'name', 'preferredVersion', 'serverAddressByClientCIDRs', 'versions']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            name = {'type': 'string', 'descr': 'name is the name of the group.'}
            preferredVersion = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_GroupVersionForDiscovery, 'descr': 'preferredVersion is the version preferred by the API server, which probably is the storage version.'}
            serverAddressByClientCIDRs = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ServerAddressByClientCIDR, 'descr': 'a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.'}
            versions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_GroupVersionForDiscovery, 'descr': 'versions are the versions supported in this group.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.name = name
        R.preferredVersion = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_GroupVersionForDiscovery
        R.serverAddressByClientCIDRs = [lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ServerAddressByClientCIDR]
        R.versions = [lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_GroupVersionForDiscovery]
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupList:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList"""
        class R:
            description = 'APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.'
            type = 'object'
            required = ['groups']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'APIGroupList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'groups', 'kind']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            groups = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup, 'descr': 'groups is a list of APIGroup.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
        R.apiVersion = str_dflt
        R.groups = [lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup]
        R.kind = str_dflt
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResource:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource"""
        class R:
            description = 'APIResource specifies the name of a resource and whether it is namespaced.'
            type = 'object'
            required = ['name', 'singularName', 'namespaced', 'kind', 'verbs']
            _attrs = ['categories', 'group', 'kind', 'name', 'namespaced', 'shortNames', 'singularName', 'storageVersionHash', 'verbs', 'version']
            categories = {'type': 'array', 'items': {'type': 'string'}, 'descr': "categories is a list of the grouped resources this resource belongs to (e.g. 'all')"}
            group = {'type': 'string', 'descr': 'group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale".'}
            kind = {'type': 'string', 'descr': "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')"}
            name = {'type': 'string', 'descr': 'name is the plural name of the resource.'}
            namespaced = {'type': 'boolean', 'descr': 'namespaced indicates if a resource is namespaced or not.'}
            shortNames = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'shortNames is a list of suggested short names of the resource.'}
            singularName = {'type': 'string', 'descr': 'singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.'}
            storageVersionHash = {'type': 'string', 'descr': 'The hash value of the storage version, the version this resource is converted to when written to the data store. Value must be treated as opaque by clients. Only equality comparison on the value is valid. This is an alpha feature and may change or be removed in the future. The field is populated by the apiserver only if the StorageVersionHash feature gate is enabled. This field will remain optional even if it graduates.'}
            verbs = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)'}
            version = {'type': 'string', 'descr': 'version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource\'s group)".'}
        R.categories = [str_dflt]
        R.group = str_dflt
        R.kind = str_dflt
        R.name = name
        R.namespaced = True
        R.shortNames = [str_dflt]
        R.singularName = str_dflt
        R.storageVersionHash = str_dflt
        R.verbs = [str_dflt]
        R.version = str_dflt
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"""
        class R:
            description = 'APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.'
            type = 'object'
            required = ['groupVersion', 'resources']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'APIResourceList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'groupVersion', 'kind', 'resources']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            groupVersion = {'type': 'string', 'descr': 'groupVersion is the group and version this APIResourceList is for.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            resources = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResource, 'descr': 'resources contains the name of the resources and if they are namespaced.'}
        R.apiVersion = str_dflt
        R.groupVersion = str_dflt
        R.kind = str_dflt
        R.resources = [lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResource]
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIVersions:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions"""
        class R:
            description = 'APIVersions lists the versions that are available, to allow clients to discover the API at /api, which is the root path of the legacy v1 API.'
            type = 'object'
            required = ['versions', 'serverAddressByClientCIDRs']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'APIVersions', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'serverAddressByClientCIDRs', 'versions']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            serverAddressByClientCIDRs = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ServerAddressByClientCIDR, 'descr': 'a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.'}
            versions = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'versions are the api versions that are available.'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.serverAddressByClientCIDRs = [lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ServerAddressByClientCIDR]
        R.versions = [str_dflt]
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Condition:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Condition"""
        class R:
            description = 'Condition contains details for one aspect of the current state of this API Resource.'
            type = 'object'
            required = ['type', 'status', 'lastTransitionTime', 'reason', 'message']
            _attrs = ['lastTransitionTime', 'message', 'observedGeneration', 'reason', 'status', 'type']
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.'}
            message = {'type': 'string', 'descr': 'message is a human readable message indicating details about the transition. This may be an empty string.'}
            observedGeneration = {'type': 'integer', 'format': 'int64', 'descr': 'observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.'}
            reason = {'type': 'string', 'descr': "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty."}
            status = {'type': 'string', 'descr': 'status of the condition, one of True, False, Unknown.'}
            type = {'type': 'string', 'descr': 'type of condition in CamelCase or in foo.example.com/CamelCase.'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.observedGeneration = 0
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"""
        class R:
            description = 'DeleteOptions may be provided when deleting an API object.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'admission.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'admission.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'admissionregistration.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'admissionregistration.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'apiextensions.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'apiextensions.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'apiregistration.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'apiregistration.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'apps', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'apps', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'apps', 'kind': 'DeleteOptions', 'version': 'v1beta2'}, {'group': 'authentication.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'authentication.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'authorization.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'authorization.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'autoscaling', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'autoscaling', 'kind': 'DeleteOptions', 'version': 'v2'}, {'group': 'autoscaling', 'kind': 'DeleteOptions', 'version': 'v2beta1'}, {'group': 'autoscaling', 'kind': 'DeleteOptions', 'version': 'v2beta2'}, {'group': 'batch', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'batch', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'certificates.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'certificates.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'coordination.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'coordination.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'discovery.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'discovery.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'events.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'events.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'extensions', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1alpha1'}, {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta2'}, {'group': 'imagepolicy.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1alpha1'}, {'group': 'internal.apiserver.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1alpha1'}, {'group': 'networking.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'networking.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'node.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'node.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1alpha1'}, {'group': 'node.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'policy', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'policy', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'rbac.authorization.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'rbac.authorization.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1alpha1'}, {'group': 'rbac.authorization.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'scheduling.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'scheduling.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1alpha1'}, {'group': 'scheduling.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta1'}, {'group': 'storage.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1'}, {'group': 'storage.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1alpha1'}, {'group': 'storage.k8s.io', 'kind': 'DeleteOptions', 'version': 'v1beta1'}]
            _attrs = ['apiVersion', 'dryRun', 'gracePeriodSeconds', 'kind', 'orphanDependents', 'preconditions', 'propagationPolicy']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            dryRun = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'type': 'integer', 'format': 'int64', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            orphanDependents = {'type': 'boolean', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            preconditions = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Preconditions, 'descr': 'Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.'}
            propagationPolicy = {'type': 'string', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.apiVersion = str_dflt
        R.dryRun = [str_dflt]
        R.gracePeriodSeconds = 0
        R.kind = str_dflt
        R.orphanDependents = True
        R.preconditions = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Preconditions
        R.propagationPolicy = str_dflt
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_FieldsV1:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"""
        class R:
            _attrs = ['__val__']
            __val__ = {'type': 'object', 'descr': "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff"}
        R.__val__ = {}
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_GroupVersionForDiscovery:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"""
        class R:
            description = 'GroupVersion contains the "group/version" and "version" string of a version. It is made a struct to keep extensibility.'
            type = 'object'
            required = ['groupVersion', 'version']
            _attrs = ['groupVersion', 'version']
            groupVersion = {'type': 'string', 'descr': 'groupVersion specifies the API group and version in the form "group/version"'}
            version = {'type': 'string', 'descr': 'version specifies the version in the form of "version". This is to save the clients the trouble of splitting the GroupVersion.'}
        R.groupVersion = str_dflt
        R.version = str_dflt
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"""
        class R:
            description = 'A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.'
            type = 'object'
            x_kubernetes_map_type = 'atomic'
            _attrs = ['matchExpressions', 'matchLabels']
            matchExpressions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirement, 'descr': 'matchExpressions is a list of label selector requirements. The requirements are ANDed.'}
            matchLabels = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'descr': 'matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.'}
        R.matchExpressions = [lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirement]
        R.matchLabels = {}
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirement:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"""
        class R:
            description = 'A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.'
            type = 'object'
            required = ['key', 'operator']
            _attrs = ['key', 'operator', 'values']
            key = {'type': 'string', 'x-kubernetes-patch-merge-key': 'key', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'key is the label key that the selector applies to.'}
            operator = {'type': 'string', 'descr': "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."}
            values = {'type': 'array', 'items': {'type': 'string'}, 'descr': 'values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.'}
        R.key = str_dflt
        R.operator = str_dflt
        R.values = [str_dflt]
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"""
        class R:
            description = 'ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.'
            type = 'object'
            _attrs = ['remainingItemCount', 'resourceVersion', 'selfLink', 'continue__']
            remainingItemCount = {'type': 'integer', 'format': 'int64', 'descr': 'remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.'}
            resourceVersion = {'type': 'string', 'descr': "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"}
            selfLink = {'type': 'string', 'descr': 'selfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.'}
            continue__ = {'type': 'string', 'descr': 'continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.'}
        R.remainingItemCount = 0
        R.resourceVersion = str_dflt
        R.selfLink = str_dflt
        R.continue__ = str_dflt
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ManagedFieldsEntry:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"""
        class R:
            description = 'ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.'
            type = 'object'
            _attrs = ['apiVersion', 'fieldsType', 'fieldsV1', 'manager', 'operation', 'subresource', 'time']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.'}
            fieldsType = {'type': 'string', 'descr': 'FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1"'}
            fieldsV1 = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_FieldsV1, 'descr': 'FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.'}
            manager = {'type': 'string', 'descr': 'Manager is an identifier of the workflow managing these fields.'}
            operation = {'type': 'string', 'descr': "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'."}
            subresource = {'type': 'string', 'descr': 'Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.'}
            time = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'"}
        R.apiVersion = str_dflt
        R.fieldsType = str_dflt
        R.fieldsV1 = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_FieldsV1
        R.manager = str_dflt
        R.operation = str_dflt
        R.subresource = str_dflt
        R.time = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"""
        class R:
            _attrs = ['__val__']
            __val__ = {'type': 'string', 'format': 'date-time', 'descr': 'MicroTime is version of Time with microsecond level precision.'}
        R.__val__ = '2020-12-12T%12:12:12Z'
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"""
        class R:
            description = 'ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.'
            type = 'object'
            _attrs = ['annotations', 'clusterName', 'creationTimestamp', 'deletionGracePeriodSeconds', 'deletionTimestamp', 'finalizers', 'generateName', 'generation', 'labels', 'managedFields', 'name', 'namespace', 'ownerReferences', 'resourceVersion', 'selfLink', 'uid']
            annotations = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'descr': 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'}
            clusterName = {'type': 'string', 'descr': 'The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.'}
            creationTimestamp = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
            deletionGracePeriodSeconds = {'type': 'integer', 'format': 'int64', 'descr': 'Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.'}
            deletionTimestamp = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exis...'}
            finalizers = {'type': 'array', 'items': {'type': 'string'}, 'x-kubernetes-patch-strategy': 'merge', 'descr': 'Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.'}
            generateName = {'type': 'string', 'descr': 'GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency'}
            generation = {'type': 'integer', 'format': 'int64', 'descr': 'A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.'}
            labels = {'type': 'object', 'additionalProperties': {'type': 'string'}, 'descr': 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'}
            managedFields = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ManagedFieldsEntry, 'descr': 'ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn\'t need to set or understand this field. A workflow can be the user\'s name, a controller\'s name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.'}
            name = {'type': 'string', 'descr': 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'}
            namespace = {'type': 'string', 'descr': 'Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces'}
            ownerReferences = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_OwnerReference, 'x-kubernetes-patch-merge-key': 'uid', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.'}
            resourceVersion = {'type': 'string', 'descr': 'An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'}
            selfLink = {'type': 'string', 'descr': 'SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.'}
            uid = {'type': 'string', 'descr': 'UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'}
        R.annotations = {}
        R.clusterName = str_dflt
        R.creationTimestamp = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.deletionGracePeriodSeconds = 0
        R.deletionTimestamp = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.finalizers = [str_dflt]
        R.generateName = str_dflt
        R.generation = 0
        R.labels = {}
        R.managedFields = [lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ManagedFieldsEntry]
        R.name = name
        R.namespace = namespace
        R.ownerReferences = [lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_OwnerReference]
        R.resourceVersion = str_dflt
        R.selfLink = str_dflt
        R.uid = str_dflt
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_OwnerReference:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"""
        class R:
            description = 'OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.'
            type = 'object'
            required = ['apiVersion', 'kind', 'name', 'uid']
            x_kubernetes_map_type = 'atomic'
            _attrs = ['apiVersion', 'blockOwnerDeletion', 'controller', 'kind', 'name', 'uid']
            apiVersion = {'type': 'string', 'descr': 'API version of the referent.'}
            blockOwnerDeletion = {'type': 'boolean', 'descr': 'If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.'}
            controller = {'type': 'boolean', 'descr': 'If true, this reference points to the managing controller.'}
            kind = {'type': 'string', 'descr': 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            name = {'type': 'string', 'descr': 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'}
            uid = {'type': 'string', 'descr': 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'}
        R.apiVersion = str_dflt
        R.blockOwnerDeletion = True
        R.controller = True
        R.kind = str_dflt
        R.name = name
        R.uid = str_dflt
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"""
        class R:
            _attrs = ['__val__']
            __val__ = {'type': 'object', 'descr': 'Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.'}
        R.__val__ = {}
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Preconditions:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions"""
        class R:
            description = 'Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.'
            type = 'object'
            _attrs = ['resourceVersion', 'uid']
            resourceVersion = {'type': 'string', 'descr': 'Specifies the target ResourceVersion'}
            uid = {'type': 'string', 'descr': 'Specifies the target UID.'}
        R.resourceVersion = str_dflt
        R.uid = str_dflt
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ServerAddressByClientCIDR:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"""
        class R:
            description = 'ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.'
            type = 'object'
            required = ['clientCIDR', 'serverAddress']
            _attrs = ['clientCIDR', 'serverAddress']
            clientCIDR = {'type': 'string', 'descr': 'The CIDR with which clients can match their IP to figure out the server address that they should use.'}
            serverAddress = {'type': 'string', 'descr': 'Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.'}
        R.clientCIDR = str_dflt
        R.serverAddress = str_dflt
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"""
        class R:
            description = 'Status is a return value for calls that don"t return other objects.'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'Status', 'version': 'v1'}]
            _attrs = ['apiVersion', 'code', 'details', 'kind', 'message', 'metadata', 'reason', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            code = {'type': 'integer', 'format': 'int32', 'descr': 'Suggested HTTP return code for this status, 0 if not set.'}
            details = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_StatusDetails, 'descr': 'Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            message = {'type': 'string', 'descr': 'A human-readable description of the status of this operation.'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            reason = {'type': 'string', 'descr': 'A machine-readable description of why this operation is in the "Failure" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.'}
            status = {'type': 'string', 'descr': 'Status of the operation. One of: "Success" or "Failure". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'}
        R.apiVersion = str_dflt
        R.code = 0
        R.details = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_StatusDetails
        R.kind = str_dflt
        R.message = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
        R.reason = str_dflt
        R.status = str_dflt
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_StatusCause:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"""
        class R:
            description = 'StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.'
            type = 'object'
            _attrs = ['field', 'message', 'reason']
            field = {'type': 'string', 'descr': 'The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  "name" - the field "name" on the current resource\n  "items[0].name" - the field "name" on the first array entry in "items"'}
            message = {'type': 'string', 'descr': 'A human-readable description of the cause of the error.  This field may be presented as-is to a reader.'}
            reason = {'type': 'string', 'descr': 'A machine-readable description of the cause of the error. If this value is empty there is no information available.'}
        R.field = str_dflt
        R.message = str_dflt
        R.reason = str_dflt
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_StatusDetails:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails"""
        class R:
            description = 'StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.'
            type = 'object'
            _attrs = ['causes', 'group', 'kind', 'name', 'retryAfterSeconds', 'uid']
            causes = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_StatusCause, 'descr': 'The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.'}
            group = {'type': 'string', 'descr': 'The group attribute of the resource associated with the status StatusReason.'}
            kind = {'type': 'string', 'descr': 'The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            name = {'type': 'string', 'descr': 'The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).'}
            retryAfterSeconds = {'type': 'integer', 'format': 'int32', 'descr': 'If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.'}
            uid = {'type': 'string', 'descr': 'UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids'}
        R.causes = [lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_StatusCause]
        R.group = str_dflt
        R.kind = str_dflt
        R.name = name
        R.retryAfterSeconds = 0
        R.uid = str_dflt
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"""
        class R:
            _attrs = ['__val__']
            __val__ = {'type': 'string', 'format': 'date-time', 'descr': 'Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.'}
        R.__val__ = '2020-12-12T%12:12:12Z'
    class definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent:
        """#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"""
        class R:
            description = 'Event represents a single event to a watched resource.'
            type = 'object'
            required = ['type', 'object']
            x_kubernetes_group_version_kind = [{'group': '', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'admission.k8s.io', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'admission.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'admissionregistration.k8s.io', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'admissionregistration.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'apiextensions.k8s.io', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'apiextensions.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'apiregistration.k8s.io', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'apiregistration.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'apps', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'apps', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'apps', 'kind': 'WatchEvent', 'version': 'v1beta2'}, {'group': 'authentication.k8s.io', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'authentication.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'authorization.k8s.io', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'authorization.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'autoscaling', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'autoscaling', 'kind': 'WatchEvent', 'version': 'v2'}, {'group': 'autoscaling', 'kind': 'WatchEvent', 'version': 'v2beta1'}, {'group': 'autoscaling', 'kind': 'WatchEvent', 'version': 'v2beta2'}, {'group': 'batch', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'batch', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'certificates.k8s.io', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'certificates.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'coordination.k8s.io', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'coordination.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'discovery.k8s.io', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'discovery.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'events.k8s.io', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'events.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'extensions', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'WatchEvent', 'version': 'v1alpha1'}, {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta2'}, {'group': 'imagepolicy.k8s.io', 'kind': 'WatchEvent', 'version': 'v1alpha1'}, {'group': 'internal.apiserver.k8s.io', 'kind': 'WatchEvent', 'version': 'v1alpha1'}, {'group': 'networking.k8s.io', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'networking.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'node.k8s.io', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'node.k8s.io', 'kind': 'WatchEvent', 'version': 'v1alpha1'}, {'group': 'node.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'policy', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'policy', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'rbac.authorization.k8s.io', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'rbac.authorization.k8s.io', 'kind': 'WatchEvent', 'version': 'v1alpha1'}, {'group': 'rbac.authorization.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'scheduling.k8s.io', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'scheduling.k8s.io', 'kind': 'WatchEvent', 'version': 'v1alpha1'}, {'group': 'scheduling.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta1'}, {'group': 'storage.k8s.io', 'kind': 'WatchEvent', 'version': 'v1'}, {'group': 'storage.k8s.io', 'kind': 'WatchEvent', 'version': 'v1alpha1'}, {'group': 'storage.k8s.io', 'kind': 'WatchEvent', 'version': 'v1beta1'}]
            _attrs = ['object', 'type']
            object = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_runtime_RawExtension, 'descr': 'Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *Status is recommended; other types may make sense\n   depending on context.'}
            type = {'type': 'string'}
        R.object = lambda: Defs.definitions_io_k8s_apimachinery_pkg_runtime_RawExtension
        R.type = str_dflt
    class definitions_io_k8s_apimachinery_pkg_runtime_RawExtension:
        """#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"""
        class R:
            _attrs = ['__val__']
            __val__ = {'type': 'object', 'descr': 'RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package: type MyAPIObject struct {\n\truntime.TypeMeta `json:",inline"`\n\tMyPlugin runtime.Object `json:"myPlugin"`\n} type PluginA struct {\n\tAOption string `json:"aOption"`\n}\n\n// External package: type MyAPIObject struct {\n\truntime.TypeMeta `json:",inline"`\n\tMyPlugin runtime.RawExtension `json:"myPlugin"`\n} type PluginA struct {\n\tAOption string `json:"aOption"`\n}\n\n// On the wire, the JSON will look something like this: {\n\t"kind":"MyAPIObject",\n\t"apiVersion":"v1",\n\t"myPlugin": {\n\t\t"kind":"PluginA",\n\t\t"aOption":"foo",\n\t},\n}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conver...'}
        R.__val__ = {}
    class definitions_io_k8s_apimachinery_pkg_util_intstr_IntOrString:
        """#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"""
        class R:
            _attrs = ['__val__']
            __val__ = {'type': 'string', 'format': 'int-or-string', 'descr': 'IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.'}
        R.__val__ = str_dflt
    class definitions_io_k8s_apimachinery_pkg_version_Info:
        """#/definitions/io.k8s.apimachinery.pkg.version.Info"""
        class R:
            description = 'Info contains versioning information. how we"ll want to distribute that information.'
            type = 'object'
            required = ['major', 'minor', 'gitVersion', 'gitCommit', 'gitTreeState', 'buildDate', 'goVersion', 'compiler', 'platform']
            _attrs = ['buildDate', 'compiler', 'gitCommit', 'gitTreeState', 'gitVersion', 'goVersion', 'major', 'minor', 'platform']
            buildDate = {'type': 'string'}
            compiler = {'type': 'string'}
            gitCommit = {'type': 'string'}
            gitTreeState = {'type': 'string'}
            gitVersion = {'type': 'string'}
            goVersion = {'type': 'string'}
            major = {'type': 'string'}
            minor = {'type': 'string'}
            platform = {'type': 'string'}
        R.buildDate = str_dflt
        R.compiler = str_dflt
        R.gitCommit = str_dflt
        R.gitTreeState = str_dflt
        R.gitVersion = str_dflt
        R.goVersion = str_dflt
        R.major = str_dflt
        R.minor = str_dflt
        R.platform = str_dflt
    class definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService:
        """#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService"""
        class R:
            description = 'APIService represents a server for a particular GroupVersion. Name must be "version.group".'
            type = 'object'
            x_kubernetes_group_version_kind = [{'group': 'apiregistration.k8s.io', 'kind': 'APIService', 'version': 'v1'}]
            _attrs = ['apiVersion', 'kind', 'metadata', 'spec', 'status']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta, 'descr': "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"}
            spec = {'$ref': lambda: Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceSpec, 'descr': 'Spec contains information for locating and communicating with a server'}
            status = {'$ref': lambda: Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceStatus, 'descr': 'Status contains derived information about an API server'}
        R.apiVersion = str_dflt
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta
        R.spec = lambda: Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceSpec
        R.status = lambda: Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceStatus
    class definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceCondition:
        """#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition"""
        class R:
            description = 'APIServiceCondition describes the state of an APIService at a particular point'
            type = 'object'
            required = ['type', 'status']
            _attrs = ['lastTransitionTime', 'message', 'reason', 'status', 'type']
            lastTransitionTime = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time, 'descr': 'Last time the condition transitioned from one status to another.'}
            message = {'type': 'string', 'descr': 'Human-readable message indicating details about last transition.'}
            reason = {'type': 'string', 'descr': "Unique, one-word, CamelCase reason for the condition's last transition."}
            status = {'type': 'string', 'descr': 'Status is the status of the condition. Can be True, False, Unknown.'}
            type = {'type': 'string', 'descr': 'Type is the type of the condition.'}
        R.lastTransitionTime = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Time
        R.message = str_dflt
        R.reason = str_dflt
        R.status = str_dflt
        R.type = str_dflt
    class definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceList:
        """#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList"""
        class R:
            description = 'APIServiceList is a list of APIService objects.'
            type = 'object'
            required = ['items']
            x_kubernetes_group_version_kind = [{'group': 'apiregistration.k8s.io', 'kind': 'APIServiceList', 'version': 'v1'}]
            _attrs = ['apiVersion', 'items', 'kind', 'metadata']
            apiVersion = {'type': 'string', 'descr': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'}
            items = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService, 'descr': 'Items is the list of APIService'}
            kind = {'type': 'string', 'descr': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'}
            metadata = {'$ref': lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta, 'descr': 'Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'}
        R.apiVersion = str_dflt
        R.items = [lambda: Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService]
        R.kind = str_dflt
        R.metadata = lambda: Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta
    class definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceSpec:
        """#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec"""
        class R:
            description = 'APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.'
            type = 'object'
            required = ['groupPriorityMinimum', 'versionPriority']
            _attrs = ['caBundle', 'group', 'groupPriorityMinimum', 'insecureSkipTLSVerify', 'service', 'version', 'versionPriority']
            caBundle = {'type': 'string', 'format': 'byte', 'x-kubernetes-list-type': 'atomic', 'descr': "CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate. If unspecified, system trust roots on the apiserver are used."}
            group = {'type': 'string', 'descr': 'Group is the API group name this server hosts'}
            groupPriorityMinimum = {'type': 'integer', 'format': 'int32', 'descr': "GroupPriorityMininum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s"}
            insecureSkipTLSVerify = {'type': 'boolean', 'descr': 'InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged.  You should use the CABundle instead.'}
            service = {'$ref': lambda: Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_ServiceReference, 'descr': 'Service is a reference to the service for this API server.  It must communicate on port 443. If the Service is nil, that means the handling for the API groupversion is handled locally on this server. The call will simply delegate to the normal handler chain to be fulfilled.'}
            version = {'type': 'string', 'descr': 'Version is the API version this server hosts.  For example, "v1"'}
            versionPriority = {'type': 'integer', 'format': 'int32', 'descr': 'VersionPriority controls the ordering of this API version inside of its group.  Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it\'s inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.'}
        R.caBundle = str_dflt
        R.group = str_dflt
        R.groupPriorityMinimum = 0
        R.insecureSkipTLSVerify = True
        R.service = lambda: Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_ServiceReference
        R.version = str_dflt
        R.versionPriority = 0
    class definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceStatus:
        """#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus"""
        class R:
            description = 'APIServiceStatus contains derived information about an API server'
            type = 'object'
            _attrs = ['conditions']
            conditions = {'type': 'array', 'items': lambda: Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceCondition, 'x-kubernetes-list-map-keys': ['type'], 'x-kubernetes-list-type': 'map', 'x-kubernetes-patch-merge-key': 'type', 'x-kubernetes-patch-strategy': 'merge', 'descr': 'Current service state of apiService.'}
        R.conditions = [lambda: Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceCondition]
    class definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_ServiceReference:
        """#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference"""
        class R:
            description = 'ServiceReference holds a reference to Service.legacy.k8s.io'
            type = 'object'
            _attrs = ['name', 'namespace', 'port']
            name = {'type': 'string', 'descr': 'Name is the name of the service'}
            namespace = {'type': 'string', 'descr': 'Namespace is the namespace of the service'}
            port = {'type': 'integer', 'format': 'int32', 'descr': 'If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).'}
        R.name = name
        R.namespace = namespace
        R.port = 0

class _well_known__openid_configuration__:
    pth = "/.well-known/openid-configuration/"

    class get:
        """get service account issuer OpenID configuration, also known as the 'OIDC discovery doc' """
        class R:
            # = {'produces': ['application/json'], 'schemes': ['https'], 'tags': ['WellKnown'], 'operationId': 'getServiceAccountIssuerOpenIDConfiguration', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}}
            pass

class api__:
    pth = "/api/"

    class get:
        """get available API versions """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core'], 'operationId': 'getCoreAPIVersions', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIVersions}, '401': {'description': 'Unauthorized'}}}
            pass

class api__v1__:
    pth = "/api/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'getCoreV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class api__v1__componentstatuses:
    pth = "/api/v1/componentstatuses"

    class get:
        """list objects of kind ComponentStatus """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1ComponentStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ComponentStatusList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ComponentStatus', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__componentstatuses___name_:
    pth = "/api/v1/componentstatuses/{name}"

    class get:
        """read the specified ComponentStatus """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1ComponentStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ComponentStatus}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ComponentStatus', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ComponentStatus'}
        R.pretty = str_dflt
        R.name = name

class api__v1__configmaps:
    pth = "/api/v1/configmaps"

    class get:
        """list or watch objects of kind ConfigMap """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1ConfigMapForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ConfigMapList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ConfigMap', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__endpoints:
    pth = "/api/v1/endpoints"

    class get:
        """list or watch objects of kind Endpoints """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1EndpointsForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_EndpointsList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Endpoints', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__events:
    pth = "/api/v1/events"

    class get:
        """list or watch objects of kind Event """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1EventForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_EventList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Event', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__limitranges:
    pth = "/api/v1/limitranges"

    class get:
        """list or watch objects of kind LimitRange """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1LimitRangeForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_LimitRangeList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'LimitRange', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__namespaces:
    pth = "/api/v1/namespaces"

    class get:
        """list or watch objects of kind Namespace """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1Namespace', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_NamespaceList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Namespace', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a Namespace """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1Namespace', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Namespace}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Namespace}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_Namespace}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Namespace', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_core_v1_Namespace
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_core_v1_Namespace
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

class api__v1__namespaces___namespace___bindings:
    pth = "/api/v1/namespaces/{namespace}/bindings"

    class post:
        """create a Binding """
        class R:
            _query = ['pretty', 'fieldManager', 'dryRun']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1NamespacedBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Binding}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Binding}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_Binding}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Binding', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            body = Defs.definitions_io_k8s_api_core_v1_Binding
        R.pretty = str_dflt
        R.namespace = namespace
        R.fieldManager = str_dflt
        R.dryRun = str_dflt
        R.body = Defs.definitions_io_k8s_api_core_v1_Binding

class api__v1__namespaces___namespace___configmaps:
    pth = "/api/v1/namespaces/{namespace}/configmaps"

    class get:
        """list or watch objects of kind ConfigMap """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1NamespacedConfigMap', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ConfigMapList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ConfigMap', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a ConfigMap """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1NamespacedConfigMap', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ConfigMap}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_ConfigMap}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_ConfigMap}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ConfigMap', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_core_v1_ConfigMap
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_core_v1_ConfigMap
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of ConfigMap """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1CollectionNamespacedConfigMap', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ConfigMap', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class api__v1__namespaces___namespace___configmaps___name_:
    pth = "/api/v1/namespaces/{namespace}/configmaps/{name}"

    class get:
        """read the specified ConfigMap """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedConfigMap', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ConfigMap}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ConfigMap', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ConfigMap'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified ConfigMap """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedConfigMap', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ConfigMap}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_ConfigMap}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ConfigMap', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ConfigMap'}
            body = Defs.definitions_io_k8s_api_core_v1_ConfigMap
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_ConfigMap
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a ConfigMap """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1NamespacedConfigMap', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ConfigMap', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ConfigMap'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified ConfigMap """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedConfigMap', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ConfigMap}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_ConfigMap}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ConfigMap', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ConfigMap'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___endpoints:
    pth = "/api/v1/namespaces/{namespace}/endpoints"

    class get:
        """list or watch objects of kind Endpoints """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1NamespacedEndpoints', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_EndpointsList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Endpoints', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create Endpoints """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1NamespacedEndpoints', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Endpoints}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Endpoints}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_Endpoints}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Endpoints', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_core_v1_Endpoints
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_core_v1_Endpoints
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of Endpoints """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1CollectionNamespacedEndpoints', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Endpoints', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class api__v1__namespaces___namespace___endpoints___name_:
    pth = "/api/v1/namespaces/{namespace}/endpoints/{name}"

    class get:
        """read the specified Endpoints """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedEndpoints', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Endpoints}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Endpoints', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Endpoints'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified Endpoints """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedEndpoints', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Endpoints}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Endpoints}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Endpoints', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Endpoints'}
            body = Defs.definitions_io_k8s_api_core_v1_Endpoints
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_Endpoints
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete Endpoints """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1NamespacedEndpoints', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Endpoints', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Endpoints'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified Endpoints """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedEndpoints', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Endpoints}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Endpoints}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Endpoints', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Endpoints'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___events:
    pth = "/api/v1/namespaces/{namespace}/events"

    class get:
        """list or watch objects of kind Event """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_EventList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Event', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create an Event """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Event}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Event}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_Event}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Event', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_core_v1_Event
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_core_v1_Event
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of Event """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1CollectionNamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Event', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class api__v1__namespaces___namespace___events___name_:
    pth = "/api/v1/namespaces/{namespace}/events/{name}"

    class get:
        """read the specified Event """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Event}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Event', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Event'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified Event """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Event}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Event}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Event', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Event'}
            body = Defs.definitions_io_k8s_api_core_v1_Event
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_Event
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete an Event """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Event', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Event'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified Event """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Event}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Event}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Event', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Event'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___limitranges:
    pth = "/api/v1/namespaces/{namespace}/limitranges"

    class get:
        """list or watch objects of kind LimitRange """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1NamespacedLimitRange', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_LimitRangeList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'LimitRange', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a LimitRange """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1NamespacedLimitRange', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_LimitRange}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_LimitRange}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_LimitRange}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'LimitRange', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_core_v1_LimitRange
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_core_v1_LimitRange
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of LimitRange """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1CollectionNamespacedLimitRange', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'LimitRange', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class api__v1__namespaces___namespace___limitranges___name_:
    pth = "/api/v1/namespaces/{namespace}/limitranges/{name}"

    class get:
        """read the specified LimitRange """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedLimitRange', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_LimitRange}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'LimitRange', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the LimitRange'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified LimitRange """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedLimitRange', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_LimitRange}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_LimitRange}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'LimitRange', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the LimitRange'}
            body = Defs.definitions_io_k8s_api_core_v1_LimitRange
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_LimitRange
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a LimitRange """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1NamespacedLimitRange', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'LimitRange', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the LimitRange'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified LimitRange """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedLimitRange', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_LimitRange}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_LimitRange}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'LimitRange', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the LimitRange'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___persistentvolumeclaims:
    pth = "/api/v1/namespaces/{namespace}/persistentvolumeclaims"

    class get:
        """list or watch objects of kind PersistentVolumeClaim """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1NamespacedPersistentVolumeClaim', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaimList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolumeClaim', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a PersistentVolumeClaim """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1NamespacedPersistentVolumeClaim', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolumeClaim', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of PersistentVolumeClaim """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1CollectionNamespacedPersistentVolumeClaim', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolumeClaim', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class api__v1__namespaces___namespace___persistentvolumeclaims___name_:
    pth = "/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}"

    class get:
        """read the specified PersistentVolumeClaim """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedPersistentVolumeClaim', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolumeClaim', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PersistentVolumeClaim'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified PersistentVolumeClaim """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedPersistentVolumeClaim', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolumeClaim', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PersistentVolumeClaim'}
            body = Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a PersistentVolumeClaim """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1NamespacedPersistentVolumeClaim', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolumeClaim', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PersistentVolumeClaim'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified PersistentVolumeClaim """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedPersistentVolumeClaim', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolumeClaim', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PersistentVolumeClaim'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___persistentvolumeclaims___name___status:
    pth = "/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}/status"

    class get:
        """read status of the specified PersistentVolumeClaim """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedPersistentVolumeClaimStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolumeClaim', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PersistentVolumeClaim'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified PersistentVolumeClaim """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedPersistentVolumeClaimStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolumeClaim', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PersistentVolumeClaim'}
            body = Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified PersistentVolumeClaim """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedPersistentVolumeClaimStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaim}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolumeClaim', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PersistentVolumeClaim'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___pods:
    pth = "/api/v1/namespaces/{namespace}/pods"

    class get:
        """list or watch objects of kind Pod """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1NamespacedPod', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PodList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a Pod """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1NamespacedPod', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_core_v1_Pod
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_core_v1_Pod
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of Pod """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1CollectionNamespacedPod', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class api__v1__namespaces___namespace___pods___name_:
    pth = "/api/v1/namespaces/{namespace}/pods/{name}"

    class get:
        """read the specified Pod """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedPod', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Pod'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified Pod """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedPod', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Pod'}
            body = Defs.definitions_io_k8s_api_core_v1_Pod
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_Pod
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a Pod """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1NamespacedPod', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Pod'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified Pod """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedPod', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Pod'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___pods___name___attach:
    pth = "/api/v1/namespaces/{namespace}/pods/{name}/attach"

    class get:
        """connect GET requests to attach of Pod """
        class R:
            _query = ['tty', 'stdout', 'stdin', 'stderr', 'container']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1GetNamespacedPodAttach', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodAttachOptions', 'version': 'v1'}}
            tty = {'uniqueItems': True, 'type': 'boolean', 'name': 'tty', 'in': 'query', 'descr': 'TTY if true indicates that a tty will be allocated for the attach call. This is passed through the container runtime so the tty is allocated on the worker node by the container runtime. Defaults to false.'}
            stdout = {'uniqueItems': True, 'type': 'boolean', 'name': 'stdout', 'in': 'query', 'descr': 'Stdout if true indicates that stdout is to be redirected for the attach call. Defaults to true.'}
            stdin = {'uniqueItems': True, 'type': 'boolean', 'name': 'stdin', 'in': 'query', 'descr': 'Stdin if true, redirects the standard input stream of the pod for this call. Defaults to false.'}
            stderr = {'uniqueItems': True, 'type': 'boolean', 'name': 'stderr', 'in': 'query', 'descr': 'Stderr if true indicates that stderr is to be redirected for the attach call. Defaults to true.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodAttachOptions'}
            container = {'uniqueItems': True, 'type': 'string', 'name': 'container', 'in': 'query', 'descr': 'The container in which to execute the command. Defaults to only container if there is only one container in the pod.'}
        R.tty = True
        R.stdout = True
        R.stdin = True
        R.stderr = True
        R.namespace = namespace
        R.name = name
        R.container = str_dflt

    class post:
        """connect POST requests to attach of Pod """
        class R:
            _query = ['tty', 'stdout', 'stdin', 'stderr', 'container']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PostNamespacedPodAttach', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodAttachOptions', 'version': 'v1'}}
            tty = {'uniqueItems': True, 'type': 'boolean', 'name': 'tty', 'in': 'query', 'descr': 'TTY if true indicates that a tty will be allocated for the attach call. This is passed through the container runtime so the tty is allocated on the worker node by the container runtime. Defaults to false.'}
            stdout = {'uniqueItems': True, 'type': 'boolean', 'name': 'stdout', 'in': 'query', 'descr': 'Stdout if true indicates that stdout is to be redirected for the attach call. Defaults to true.'}
            stdin = {'uniqueItems': True, 'type': 'boolean', 'name': 'stdin', 'in': 'query', 'descr': 'Stdin if true, redirects the standard input stream of the pod for this call. Defaults to false.'}
            stderr = {'uniqueItems': True, 'type': 'boolean', 'name': 'stderr', 'in': 'query', 'descr': 'Stderr if true indicates that stderr is to be redirected for the attach call. Defaults to true.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodAttachOptions'}
            container = {'uniqueItems': True, 'type': 'string', 'name': 'container', 'in': 'query', 'descr': 'The container in which to execute the command. Defaults to only container if there is only one container in the pod.'}
        R.tty = True
        R.stdout = True
        R.stdin = True
        R.stderr = True
        R.namespace = namespace
        R.name = name
        R.container = str_dflt

class api__v1__namespaces___namespace___pods___name___binding:
    pth = "/api/v1/namespaces/{namespace}/pods/{name}/binding"

    class post:
        """create binding of a Pod """
        class R:
            _query = ['pretty', 'fieldManager', 'dryRun']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1NamespacedPodBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Binding}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Binding}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_Binding}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Binding', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Binding'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            body = Defs.definitions_io_k8s_api_core_v1_Binding
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.fieldManager = str_dflt
        R.dryRun = str_dflt
        R.body = Defs.definitions_io_k8s_api_core_v1_Binding

class api__v1__namespaces___namespace___pods___name___ephemeralcontainers:
    pth = "/api/v1/namespaces/{namespace}/pods/{name}/ephemeralcontainers"

    class get:
        """read ephemeralcontainers of the specified Pod """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedPodEphemeralcontainers', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Pod'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace ephemeralcontainers of the specified Pod """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedPodEphemeralcontainers', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Pod'}
            body = Defs.definitions_io_k8s_api_core_v1_Pod
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_Pod
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update ephemeralcontainers of the specified Pod """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedPodEphemeralcontainers', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Pod'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___pods___name___eviction:
    pth = "/api/v1/namespaces/{namespace}/pods/{name}/eviction"

    class post:
        """create eviction of a Pod """
        class R:
            _query = ['pretty', 'fieldManager', 'dryRun']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1NamespacedPodEviction', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1_Eviction}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_policy_v1_Eviction}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_policy_v1_Eviction}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'Eviction', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Eviction'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            body = Defs.definitions_io_k8s_api_policy_v1_Eviction
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.fieldManager = str_dflt
        R.dryRun = str_dflt
        R.body = Defs.definitions_io_k8s_api_policy_v1_Eviction

class api__v1__namespaces___namespace___pods___name___exec:
    pth = "/api/v1/namespaces/{namespace}/pods/{name}/exec"

    class get:
        """connect GET requests to exec of Pod """
        class R:
            _query = ['tty', 'stdout', 'stdin', 'stderr', 'container', 'command']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1GetNamespacedPodExec', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodExecOptions', 'version': 'v1'}}
            tty = {'uniqueItems': True, 'type': 'boolean', 'name': 'tty', 'in': 'query', 'descr': 'TTY if true indicates that a tty will be allocated for the exec call. Defaults to false.'}
            stdout = {'uniqueItems': True, 'type': 'boolean', 'name': 'stdout', 'in': 'query', 'descr': 'Redirect the standard output stream of the pod for this call.'}
            stdin = {'uniqueItems': True, 'type': 'boolean', 'name': 'stdin', 'in': 'query', 'descr': 'Redirect the standard input stream of the pod for this call. Defaults to false.'}
            stderr = {'uniqueItems': True, 'type': 'boolean', 'name': 'stderr', 'in': 'query', 'descr': 'Redirect the standard error stream of the pod for this call.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodExecOptions'}
            container = {'uniqueItems': True, 'type': 'string', 'name': 'container', 'in': 'query', 'descr': 'Container in which to execute the command. Defaults to only container if there is only one container in the pod.'}
            command = {'uniqueItems': True, 'type': 'string', 'name': 'command', 'in': 'query', 'descr': 'Command is the remote command to execute. argv array. Not executed within a shell.'}
        R.tty = True
        R.stdout = True
        R.stdin = True
        R.stderr = True
        R.namespace = namespace
        R.name = name
        R.container = str_dflt
        R.command = str_dflt

    class post:
        """connect POST requests to exec of Pod """
        class R:
            _query = ['tty', 'stdout', 'stdin', 'stderr', 'container', 'command']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PostNamespacedPodExec', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodExecOptions', 'version': 'v1'}}
            tty = {'uniqueItems': True, 'type': 'boolean', 'name': 'tty', 'in': 'query', 'descr': 'TTY if true indicates that a tty will be allocated for the exec call. Defaults to false.'}
            stdout = {'uniqueItems': True, 'type': 'boolean', 'name': 'stdout', 'in': 'query', 'descr': 'Redirect the standard output stream of the pod for this call.'}
            stdin = {'uniqueItems': True, 'type': 'boolean', 'name': 'stdin', 'in': 'query', 'descr': 'Redirect the standard input stream of the pod for this call. Defaults to false.'}
            stderr = {'uniqueItems': True, 'type': 'boolean', 'name': 'stderr', 'in': 'query', 'descr': 'Redirect the standard error stream of the pod for this call.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodExecOptions'}
            container = {'uniqueItems': True, 'type': 'string', 'name': 'container', 'in': 'query', 'descr': 'Container in which to execute the command. Defaults to only container if there is only one container in the pod.'}
            command = {'uniqueItems': True, 'type': 'string', 'name': 'command', 'in': 'query', 'descr': 'Command is the remote command to execute. argv array. Not executed within a shell.'}
        R.tty = True
        R.stdout = True
        R.stdin = True
        R.stderr = True
        R.namespace = namespace
        R.name = name
        R.container = str_dflt
        R.command = str_dflt

class api__v1__namespaces___namespace___pods___name___log:
    pth = "/api/v1/namespaces/{namespace}/pods/{name}/log"

    class get:
        """read log of the specified Pod """
        class R:
            _query = ['timestamps', 'tailLines', 'sinceSeconds', 'previous', 'pretty', 'limitBytes', 'insecureSkipTLSVerifyBackend', 'follow', 'container']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['text/plain', 'application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedPodLog', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            timestamps = {'uniqueItems': True, 'type': 'boolean', 'name': 'timestamps', 'in': 'query', 'descr': 'If true, add an RFC3339 or RFC3339Nano timestamp at the beginning of every line of log output. Defaults to false.'}
            tailLines = {'uniqueItems': True, 'type': 'integer', 'name': 'tailLines', 'in': 'query', 'descr': 'If set, the number of lines from the end of the logs to show. If not specified, logs are shown from the creation of the container or sinceSeconds or sinceTime'}
            sinceSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'sinceSeconds', 'in': 'query', 'descr': 'A relative time in seconds before the current time from which to show logs. If this value precedes the time a pod was started, only logs since the pod start will be returned. If this value is in the future, no logs will be returned. Only one of sinceSeconds or sinceTime may be specified.'}
            previous = {'uniqueItems': True, 'type': 'boolean', 'name': 'previous', 'in': 'query', 'descr': 'Return previous terminated container logs. Defaults to false.'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Pod'}
            limitBytes = {'uniqueItems': True, 'type': 'integer', 'name': 'limitBytes', 'in': 'query', 'descr': 'If set, the number of bytes to read from the server before terminating the log output. This may not display a complete final line of logging, and may return slightly more or slightly less than the specified limit.'}
            insecureSkipTLSVerifyBackend = {'uniqueItems': True, 'type': 'boolean', 'name': 'insecureSkipTLSVerifyBackend', 'in': 'query', 'descr': "insecureSkipTLSVerifyBackend indicates that the apiserver should not confirm the validity of the serving certificate of the backend it is connecting to.  This will make the HTTPS connection between the apiserver and the backend insecure. This means the apiserver cannot verify the log data it is receiving came from the real kubelet.  If the kubelet is configured to verify the apiserver's TLS credentials, it does not mean the connection to the real kubelet is vulnerable to a man in the middle attack (e.g. an attacker could not intercept the actual log data coming from the real kubelet)."}
            follow = {'uniqueItems': True, 'type': 'boolean', 'name': 'follow', 'in': 'query', 'descr': 'Follow the log stream of the pod. Defaults to false.'}
            container = {'uniqueItems': True, 'type': 'string', 'name': 'container', 'in': 'query', 'descr': 'The container for which to stream logs. Defaults to only container if there is one container in the pod.'}
        R.timestamps = True
        R.tailLines = 0
        R.sinceSeconds = 0
        R.previous = True
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limitBytes = 0
        R.insecureSkipTLSVerifyBackend = True
        R.follow = True
        R.container = str_dflt

class api__v1__namespaces___namespace___pods___name___portforward:
    pth = "/api/v1/namespaces/{namespace}/pods/{name}/portforward"

    class get:
        """connect GET requests to portforward of Pod """
        class R:
            _query = ['ports']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1GetNamespacedPodPortforward', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodPortForwardOptions', 'version': 'v1'}}
            ports = {'uniqueItems': True, 'type': 'integer', 'name': 'ports', 'in': 'query', 'descr': 'List of ports to forward Required when using WebSockets'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodPortForwardOptions'}
        R.ports = 0
        R.namespace = namespace
        R.name = name

    class post:
        """connect POST requests to portforward of Pod """
        class R:
            _query = ['ports']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PostNamespacedPodPortforward', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodPortForwardOptions', 'version': 'v1'}}
            ports = {'uniqueItems': True, 'type': 'integer', 'name': 'ports', 'in': 'query', 'descr': 'List of ports to forward Required when using WebSockets'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodPortForwardOptions'}
        R.ports = 0
        R.namespace = namespace
        R.name = name

class api__v1__namespaces___namespace___pods___name___proxy:
    pth = "/api/v1/namespaces/{namespace}/pods/{name}/proxy"

    class get:
        """connect GET requests to proxy of Pod """
        class R:
            _query = ['path']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1GetNamespacedPodProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to pod.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodProxyOptions'}
        R.path = path
        R.namespace = namespace
        R.name = name

    class put:
        """connect PUT requests to proxy of Pod """
        class R:
            _query = ['path']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PutNamespacedPodProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to pod.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodProxyOptions'}
        R.path = path
        R.namespace = namespace
        R.name = name

    class post:
        """connect POST requests to proxy of Pod """
        class R:
            _query = ['path']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PostNamespacedPodProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to pod.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodProxyOptions'}
        R.path = path
        R.namespace = namespace
        R.name = name

    class delete:
        """connect DELETE requests to proxy of Pod """
        class R:
            _query = ['path']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1DeleteNamespacedPodProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to pod.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodProxyOptions'}
        R.path = path
        R.namespace = namespace
        R.name = name

    class options:
        """connect OPTIONS requests to proxy of Pod """
        class R:
            _query = ['path']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1OptionsNamespacedPodProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to pod.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodProxyOptions'}
        R.path = path
        R.namespace = namespace
        R.name = name

    class head:
        """connect HEAD requests to proxy of Pod """
        class R:
            _query = ['path']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1HeadNamespacedPodProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to pod.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodProxyOptions'}
        R.path = path
        R.namespace = namespace
        R.name = name

    class patch:
        """connect PATCH requests to proxy of Pod """
        class R:
            _query = ['path']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PatchNamespacedPodProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to pod.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodProxyOptions'}
        R.path = path
        R.namespace = namespace
        R.name = name

class api__v1__namespaces___namespace___pods___name___proxy___path_:
    pth = "/api/v1/namespaces/{namespace}/pods/{name}/proxy/{path}"

    class get:
        """connect GET requests to proxy of Pod """
        class R:
            _query = ['path']; _path = ['path', 'namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1GetNamespacedPodProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to pod.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodProxyOptions'}
        R.path = path
        R.path = path
        R.namespace = namespace
        R.name = name

    class put:
        """connect PUT requests to proxy of Pod """
        class R:
            _query = ['path']; _path = ['path', 'namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PutNamespacedPodProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to pod.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodProxyOptions'}
        R.path = path
        R.path = path
        R.namespace = namespace
        R.name = name

    class post:
        """connect POST requests to proxy of Pod """
        class R:
            _query = ['path']; _path = ['path', 'namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PostNamespacedPodProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to pod.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodProxyOptions'}
        R.path = path
        R.path = path
        R.namespace = namespace
        R.name = name

    class delete:
        """connect DELETE requests to proxy of Pod """
        class R:
            _query = ['path']; _path = ['path', 'namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1DeleteNamespacedPodProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to pod.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodProxyOptions'}
        R.path = path
        R.path = path
        R.namespace = namespace
        R.name = name

    class options:
        """connect OPTIONS requests to proxy of Pod """
        class R:
            _query = ['path']; _path = ['path', 'namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1OptionsNamespacedPodProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to pod.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodProxyOptions'}
        R.path = path
        R.path = path
        R.namespace = namespace
        R.name = name

    class head:
        """connect HEAD requests to proxy of Pod """
        class R:
            _query = ['path']; _path = ['path', 'namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1HeadNamespacedPodProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to pod.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodProxyOptions'}
        R.path = path
        R.path = path
        R.namespace = namespace
        R.name = name

    class patch:
        """connect PATCH requests to proxy of Pod """
        class R:
            _query = ['path']; _path = ['path', 'namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PatchNamespacedPodProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to pod.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodProxyOptions'}
        R.path = path
        R.path = path
        R.namespace = namespace
        R.name = name

class api__v1__namespaces___namespace___pods___name___status:
    pth = "/api/v1/namespaces/{namespace}/pods/{name}/status"

    class get:
        """read status of the specified Pod """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedPodStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Pod'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified Pod """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedPodStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Pod'}
            body = Defs.definitions_io_k8s_api_core_v1_Pod
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_Pod
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified Pod """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedPodStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Pod}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Pod'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___podtemplates:
    pth = "/api/v1/namespaces/{namespace}/podtemplates"

    class get:
        """list or watch objects of kind PodTemplate """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1NamespacedPodTemplate', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PodTemplateList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodTemplate', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a PodTemplate """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1NamespacedPodTemplate', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PodTemplate}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_PodTemplate}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_PodTemplate}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodTemplate', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_core_v1_PodTemplate
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_core_v1_PodTemplate
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of PodTemplate """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1CollectionNamespacedPodTemplate', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodTemplate', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class api__v1__namespaces___namespace___podtemplates___name_:
    pth = "/api/v1/namespaces/{namespace}/podtemplates/{name}"

    class get:
        """read the specified PodTemplate """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedPodTemplate', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PodTemplate}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodTemplate', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodTemplate'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified PodTemplate """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedPodTemplate', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PodTemplate}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_PodTemplate}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodTemplate', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodTemplate'}
            body = Defs.definitions_io_k8s_api_core_v1_PodTemplate
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_PodTemplate
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a PodTemplate """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1NamespacedPodTemplate', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PodTemplate}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_PodTemplate}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodTemplate', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodTemplate'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified PodTemplate """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedPodTemplate', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PodTemplate}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_PodTemplate}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodTemplate', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodTemplate'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___replicationcontrollers:
    pth = "/api/v1/namespaces/{namespace}/replicationcontrollers"

    class get:
        """list or watch objects of kind ReplicationController """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1NamespacedReplicationController', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ReplicationControllerList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ReplicationController', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a ReplicationController """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1NamespacedReplicationController', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ReplicationController}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_ReplicationController}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_ReplicationController}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ReplicationController', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_core_v1_ReplicationController
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_core_v1_ReplicationController
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of ReplicationController """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1CollectionNamespacedReplicationController', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ReplicationController', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class api__v1__namespaces___namespace___replicationcontrollers___name_:
    pth = "/api/v1/namespaces/{namespace}/replicationcontrollers/{name}"

    class get:
        """read the specified ReplicationController """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedReplicationController', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ReplicationController}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ReplicationController', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ReplicationController'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified ReplicationController """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedReplicationController', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ReplicationController}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_ReplicationController}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ReplicationController', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ReplicationController'}
            body = Defs.definitions_io_k8s_api_core_v1_ReplicationController
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_ReplicationController
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a ReplicationController """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1NamespacedReplicationController', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ReplicationController', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ReplicationController'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified ReplicationController """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedReplicationController', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ReplicationController}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_ReplicationController}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ReplicationController', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ReplicationController'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___replicationcontrollers___name___scale:
    pth = "/api/v1/namespaces/{namespace}/replicationcontrollers/{name}/scale"

    class get:
        """read scale of the specified ReplicationController """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedReplicationControllerScale', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'Scale', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Scale'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace scale of the specified ReplicationController """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedReplicationControllerScale', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'Scale', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Scale'}
            body = Defs.definitions_io_k8s_api_autoscaling_v1_Scale
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_autoscaling_v1_Scale
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update scale of the specified ReplicationController """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedReplicationControllerScale', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'Scale', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Scale'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___replicationcontrollers___name___status:
    pth = "/api/v1/namespaces/{namespace}/replicationcontrollers/{name}/status"

    class get:
        """read status of the specified ReplicationController """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedReplicationControllerStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ReplicationController}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ReplicationController', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ReplicationController'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified ReplicationController """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedReplicationControllerStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ReplicationController}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_ReplicationController}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ReplicationController', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ReplicationController'}
            body = Defs.definitions_io_k8s_api_core_v1_ReplicationController
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_ReplicationController
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified ReplicationController """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedReplicationControllerStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ReplicationController}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_ReplicationController}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ReplicationController', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ReplicationController'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___resourcequotas:
    pth = "/api/v1/namespaces/{namespace}/resourcequotas"

    class get:
        """list or watch objects of kind ResourceQuota """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1NamespacedResourceQuota', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuotaList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ResourceQuota', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a ResourceQuota """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1NamespacedResourceQuota', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuota}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuota}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuota}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ResourceQuota', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_core_v1_ResourceQuota
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_core_v1_ResourceQuota
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of ResourceQuota """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1CollectionNamespacedResourceQuota', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ResourceQuota', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class api__v1__namespaces___namespace___resourcequotas___name_:
    pth = "/api/v1/namespaces/{namespace}/resourcequotas/{name}"

    class get:
        """read the specified ResourceQuota """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedResourceQuota', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuota}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ResourceQuota', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ResourceQuota'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified ResourceQuota """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedResourceQuota', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuota}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuota}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ResourceQuota', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ResourceQuota'}
            body = Defs.definitions_io_k8s_api_core_v1_ResourceQuota
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_ResourceQuota
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a ResourceQuota """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1NamespacedResourceQuota', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuota}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuota}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ResourceQuota', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ResourceQuota'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified ResourceQuota """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedResourceQuota', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuota}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuota}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ResourceQuota', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ResourceQuota'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___resourcequotas___name___status:
    pth = "/api/v1/namespaces/{namespace}/resourcequotas/{name}/status"

    class get:
        """read status of the specified ResourceQuota """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedResourceQuotaStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuota}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ResourceQuota', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ResourceQuota'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified ResourceQuota """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedResourceQuotaStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuota}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuota}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ResourceQuota', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ResourceQuota'}
            body = Defs.definitions_io_k8s_api_core_v1_ResourceQuota
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_ResourceQuota
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified ResourceQuota """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedResourceQuotaStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuota}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuota}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ResourceQuota', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ResourceQuota'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___secrets:
    pth = "/api/v1/namespaces/{namespace}/secrets"

    class get:
        """list or watch objects of kind Secret """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1NamespacedSecret', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_SecretList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Secret', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a Secret """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1NamespacedSecret', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Secret}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Secret}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_Secret}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Secret', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_core_v1_Secret
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_core_v1_Secret
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of Secret """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1CollectionNamespacedSecret', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Secret', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class api__v1__namespaces___namespace___secrets___name_:
    pth = "/api/v1/namespaces/{namespace}/secrets/{name}"

    class get:
        """read the specified Secret """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedSecret', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Secret}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Secret', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Secret'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified Secret """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedSecret', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Secret}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Secret}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Secret', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Secret'}
            body = Defs.definitions_io_k8s_api_core_v1_Secret
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_Secret
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a Secret """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1NamespacedSecret', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Secret', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Secret'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified Secret """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedSecret', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Secret}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Secret}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Secret', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Secret'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___serviceaccounts:
    pth = "/api/v1/namespaces/{namespace}/serviceaccounts"

    class get:
        """list or watch objects of kind ServiceAccount """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1NamespacedServiceAccount', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ServiceAccountList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceAccount', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a ServiceAccount """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1NamespacedServiceAccount', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ServiceAccount}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_ServiceAccount}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_ServiceAccount}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceAccount', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_core_v1_ServiceAccount
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_core_v1_ServiceAccount
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of ServiceAccount """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1CollectionNamespacedServiceAccount', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceAccount', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class api__v1__namespaces___namespace___serviceaccounts___name_:
    pth = "/api/v1/namespaces/{namespace}/serviceaccounts/{name}"

    class get:
        """read the specified ServiceAccount """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedServiceAccount', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ServiceAccount}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceAccount', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceAccount'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified ServiceAccount """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedServiceAccount', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ServiceAccount}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_ServiceAccount}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceAccount', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceAccount'}
            body = Defs.definitions_io_k8s_api_core_v1_ServiceAccount
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_ServiceAccount
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a ServiceAccount """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1NamespacedServiceAccount', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ServiceAccount}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_ServiceAccount}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceAccount', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceAccount'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified ServiceAccount """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedServiceAccount', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ServiceAccount}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_ServiceAccount}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceAccount', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceAccount'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___serviceaccounts___name___token:
    pth = "/api/v1/namespaces/{namespace}/serviceaccounts/{name}/token"

    class post:
        """create token of a ServiceAccount """
        class R:
            _query = ['pretty', 'fieldManager', 'dryRun']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1NamespacedServiceAccountToken', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_authentication_v1_TokenRequest}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_authentication_v1_TokenRequest}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_authentication_v1_TokenRequest}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'authentication.k8s.io', 'kind': 'TokenRequest', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the TokenRequest'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            body = Defs.definitions_io_k8s_api_authentication_v1_TokenRequest
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.fieldManager = str_dflt
        R.dryRun = str_dflt
        R.body = Defs.definitions_io_k8s_api_authentication_v1_TokenRequest

class api__v1__namespaces___namespace___services:
    pth = "/api/v1/namespaces/{namespace}/services"

    class get:
        """list or watch objects of kind Service """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1NamespacedService', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ServiceList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Service', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a Service """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1NamespacedService', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Service}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Service}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_Service}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Service', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_core_v1_Service
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_core_v1_Service
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of Service """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1CollectionNamespacedService', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Service', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class api__v1__namespaces___namespace___services___name_:
    pth = "/api/v1/namespaces/{namespace}/services/{name}"

    class get:
        """read the specified Service """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedService', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Service}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Service', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Service'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified Service """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedService', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Service}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Service}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Service', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Service'}
            body = Defs.definitions_io_k8s_api_core_v1_Service
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_Service
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a Service """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1NamespacedService', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Service}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_Service}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Service', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Service'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified Service """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedService', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Service}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Service}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Service', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Service'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___namespace___services___name___proxy:
    pth = "/api/v1/namespaces/{namespace}/services/{name}/proxy"

    class get:
        """connect GET requests to proxy of Service """
        class R:
            _query = ['path']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1GetNamespacedServiceProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceProxyOptions'}
        R.path = path
        R.namespace = namespace
        R.name = name

    class put:
        """connect PUT requests to proxy of Service """
        class R:
            _query = ['path']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PutNamespacedServiceProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceProxyOptions'}
        R.path = path
        R.namespace = namespace
        R.name = name

    class post:
        """connect POST requests to proxy of Service """
        class R:
            _query = ['path']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PostNamespacedServiceProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceProxyOptions'}
        R.path = path
        R.namespace = namespace
        R.name = name

    class delete:
        """connect DELETE requests to proxy of Service """
        class R:
            _query = ['path']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1DeleteNamespacedServiceProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceProxyOptions'}
        R.path = path
        R.namespace = namespace
        R.name = name

    class options:
        """connect OPTIONS requests to proxy of Service """
        class R:
            _query = ['path']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1OptionsNamespacedServiceProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceProxyOptions'}
        R.path = path
        R.namespace = namespace
        R.name = name

    class head:
        """connect HEAD requests to proxy of Service """
        class R:
            _query = ['path']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1HeadNamespacedServiceProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceProxyOptions'}
        R.path = path
        R.namespace = namespace
        R.name = name

    class patch:
        """connect PATCH requests to proxy of Service """
        class R:
            _query = ['path']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PatchNamespacedServiceProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceProxyOptions'}
        R.path = path
        R.namespace = namespace
        R.name = name

class api__v1__namespaces___namespace___services___name___proxy___path_:
    pth = "/api/v1/namespaces/{namespace}/services/{name}/proxy/{path}"

    class get:
        """connect GET requests to proxy of Service """
        class R:
            _query = ['path']; _path = ['path', 'namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1GetNamespacedServiceProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceProxyOptions'}
        R.path = path
        R.path = path
        R.namespace = namespace
        R.name = name

    class put:
        """connect PUT requests to proxy of Service """
        class R:
            _query = ['path']; _path = ['path', 'namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PutNamespacedServiceProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceProxyOptions'}
        R.path = path
        R.path = path
        R.namespace = namespace
        R.name = name

    class post:
        """connect POST requests to proxy of Service """
        class R:
            _query = ['path']; _path = ['path', 'namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PostNamespacedServiceProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceProxyOptions'}
        R.path = path
        R.path = path
        R.namespace = namespace
        R.name = name

    class delete:
        """connect DELETE requests to proxy of Service """
        class R:
            _query = ['path']; _path = ['path', 'namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1DeleteNamespacedServiceProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceProxyOptions'}
        R.path = path
        R.path = path
        R.namespace = namespace
        R.name = name

    class options:
        """connect OPTIONS requests to proxy of Service """
        class R:
            _query = ['path']; _path = ['path', 'namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1OptionsNamespacedServiceProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceProxyOptions'}
        R.path = path
        R.path = path
        R.namespace = namespace
        R.name = name

    class head:
        """connect HEAD requests to proxy of Service """
        class R:
            _query = ['path']; _path = ['path', 'namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1HeadNamespacedServiceProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceProxyOptions'}
        R.path = path
        R.path = path
        R.namespace = namespace
        R.name = name

    class patch:
        """connect PATCH requests to proxy of Service """
        class R:
            _query = ['path']; _path = ['path', 'namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PatchNamespacedServiceProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceProxyOptions'}
        R.path = path
        R.path = path
        R.namespace = namespace
        R.name = name

class api__v1__namespaces___namespace___services___name___status:
    pth = "/api/v1/namespaces/{namespace}/services/{name}/status"

    class get:
        """read status of the specified Service """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespacedServiceStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Service}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Service', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Service'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified Service """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespacedServiceStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Service}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Service}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Service', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Service'}
            body = Defs.definitions_io_k8s_api_core_v1_Service
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_Service
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified Service """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespacedServiceStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Service}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Service}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Service', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Service'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___name_:
    pth = "/api/v1/namespaces/{name}"

    class get:
        """read the specified Namespace """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1Namespace', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Namespace}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Namespace', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Namespace'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified Namespace """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1Namespace', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Namespace}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Namespace}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Namespace', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Namespace'}
            body = Defs.definitions_io_k8s_api_core_v1_Namespace
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_Namespace
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a Namespace """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1Namespace', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Namespace', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Namespace'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified Namespace """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1Namespace', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Namespace}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Namespace}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Namespace', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Namespace'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__namespaces___name___finalize:
    pth = "/api/v1/namespaces/{name}/finalize"

    class put:
        """replace finalize of the specified Namespace """
        class R:
            _query = ['pretty', 'fieldManager', 'dryRun']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespaceFinalize', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Namespace}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Namespace}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Namespace', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Namespace'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            body = Defs.definitions_io_k8s_api_core_v1_Namespace
        R.pretty = str_dflt
        R.name = name
        R.fieldManager = str_dflt
        R.dryRun = str_dflt
        R.body = Defs.definitions_io_k8s_api_core_v1_Namespace

class api__v1__namespaces___name___status:
    pth = "/api/v1/namespaces/{name}/status"

    class get:
        """read status of the specified Namespace """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NamespaceStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Namespace}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Namespace', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Namespace'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace status of the specified Namespace """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NamespaceStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Namespace}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Namespace}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Namespace', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Namespace'}
            body = Defs.definitions_io_k8s_api_core_v1_Namespace
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_Namespace
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified Namespace """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NamespaceStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Namespace}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Namespace}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Namespace', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Namespace'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__nodes:
    pth = "/api/v1/nodes"

    class get:
        """list or watch objects of kind Node """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1Node', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_NodeList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Node', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a Node """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1Node', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Node}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Node}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_Node}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Node', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_core_v1_Node
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_core_v1_Node
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of Node """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1CollectionNode', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Node', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class api__v1__nodes___name_:
    pth = "/api/v1/nodes/{name}"

    class get:
        """read the specified Node """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1Node', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Node}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Node', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Node'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified Node """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1Node', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Node}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Node}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Node', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Node'}
            body = Defs.definitions_io_k8s_api_core_v1_Node
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_Node
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a Node """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1Node', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Node', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Node'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified Node """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1Node', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Node}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Node}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Node', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Node'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__nodes___name___proxy:
    pth = "/api/v1/nodes/{name}/proxy"

    class get:
        """connect GET requests to proxy of Node """
        class R:
            _query = ['path']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1GetNodeProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'NodeProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to node.'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NodeProxyOptions'}
        R.path = path
        R.name = name

    class put:
        """connect PUT requests to proxy of Node """
        class R:
            _query = ['path']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PutNodeProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'NodeProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to node.'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NodeProxyOptions'}
        R.path = path
        R.name = name

    class post:
        """connect POST requests to proxy of Node """
        class R:
            _query = ['path']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PostNodeProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'NodeProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to node.'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NodeProxyOptions'}
        R.path = path
        R.name = name

    class delete:
        """connect DELETE requests to proxy of Node """
        class R:
            _query = ['path']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1DeleteNodeProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'NodeProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to node.'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NodeProxyOptions'}
        R.path = path
        R.name = name

    class options:
        """connect OPTIONS requests to proxy of Node """
        class R:
            _query = ['path']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1OptionsNodeProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'NodeProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to node.'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NodeProxyOptions'}
        R.path = path
        R.name = name

    class head:
        """connect HEAD requests to proxy of Node """
        class R:
            _query = ['path']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1HeadNodeProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'NodeProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to node.'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NodeProxyOptions'}
        R.path = path
        R.name = name

    class patch:
        """connect PATCH requests to proxy of Node """
        class R:
            _query = ['path']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PatchNodeProxy', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'NodeProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to node.'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NodeProxyOptions'}
        R.path = path
        R.name = name

class api__v1__nodes___name___proxy___path_:
    pth = "/api/v1/nodes/{name}/proxy/{path}"

    class get:
        """connect GET requests to proxy of Node """
        class R:
            _query = ['path']; _path = ['path', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1GetNodeProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'NodeProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to node.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NodeProxyOptions'}
        R.path = path
        R.path = path
        R.name = name

    class put:
        """connect PUT requests to proxy of Node """
        class R:
            _query = ['path']; _path = ['path', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PutNodeProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'NodeProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to node.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NodeProxyOptions'}
        R.path = path
        R.path = path
        R.name = name

    class post:
        """connect POST requests to proxy of Node """
        class R:
            _query = ['path']; _path = ['path', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PostNodeProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'NodeProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to node.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NodeProxyOptions'}
        R.path = path
        R.path = path
        R.name = name

    class delete:
        """connect DELETE requests to proxy of Node """
        class R:
            _query = ['path']; _path = ['path', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1DeleteNodeProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'NodeProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to node.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NodeProxyOptions'}
        R.path = path
        R.path = path
        R.name = name

    class options:
        """connect OPTIONS requests to proxy of Node """
        class R:
            _query = ['path']; _path = ['path', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1OptionsNodeProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'NodeProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to node.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NodeProxyOptions'}
        R.path = path
        R.path = path
        R.name = name

    class head:
        """connect HEAD requests to proxy of Node """
        class R:
            _query = ['path']; _path = ['path', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1HeadNodeProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'NodeProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to node.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NodeProxyOptions'}
        R.path = path
        R.path = path
        R.name = name

    class patch:
        """connect PATCH requests to proxy of Node """
        class R:
            _query = ['path']; _path = ['path', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['*/*'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'connectCoreV1PatchNodeProxyWithPath', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'connect', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'NodeProxyOptions', 'version': 'v1'}}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'query', 'descr': 'Path is the URL path to use for the current proxy request to node.'}
            path = {'uniqueItems': True, 'type': 'string', 'name': 'path', 'in': 'path', 'required': True, 'descr': 'path to the resource'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NodeProxyOptions'}
        R.path = path
        R.path = path
        R.name = name

class api__v1__nodes___name___status:
    pth = "/api/v1/nodes/{name}/status"

    class get:
        """read status of the specified Node """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1NodeStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Node}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Node', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Node'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace status of the specified Node """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1NodeStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Node}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Node}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Node', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Node'}
            body = Defs.definitions_io_k8s_api_core_v1_Node
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_Node
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified Node """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1NodeStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_Node}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_Node}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Node', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Node'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__persistentvolumeclaims:
    pth = "/api/v1/persistentvolumeclaims"

    class get:
        """list or watch objects of kind PersistentVolumeClaim """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1PersistentVolumeClaimForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeClaimList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolumeClaim', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__persistentvolumes:
    pth = "/api/v1/persistentvolumes"

    class get:
        """list or watch objects of kind PersistentVolume """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1PersistentVolume', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolumeList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolume', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a PersistentVolume """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'createCoreV1PersistentVolume', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolume}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolume}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolume}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolume', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_core_v1_PersistentVolume
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_core_v1_PersistentVolume
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of PersistentVolume """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1CollectionPersistentVolume', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolume', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class api__v1__persistentvolumes___name_:
    pth = "/api/v1/persistentvolumes/{name}"

    class get:
        """read the specified PersistentVolume """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1PersistentVolume', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolume}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolume', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PersistentVolume'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified PersistentVolume """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1PersistentVolume', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolume}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolume}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolume', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PersistentVolume'}
            body = Defs.definitions_io_k8s_api_core_v1_PersistentVolume
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_PersistentVolume
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a PersistentVolume """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'deleteCoreV1PersistentVolume', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolume}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolume}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolume', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PersistentVolume'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified PersistentVolume """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1PersistentVolume', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolume}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolume}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolume', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PersistentVolume'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__persistentvolumes___name___status:
    pth = "/api/v1/persistentvolumes/{name}/status"

    class get:
        """read status of the specified PersistentVolume """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'readCoreV1PersistentVolumeStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolume}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolume', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PersistentVolume'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace status of the specified PersistentVolume """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'replaceCoreV1PersistentVolumeStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolume}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolume}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolume', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PersistentVolume'}
            body = Defs.definitions_io_k8s_api_core_v1_PersistentVolume
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_core_v1_PersistentVolume
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified PersistentVolume """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'patchCoreV1PersistentVolumeStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolume}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_core_v1_PersistentVolume}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolume', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PersistentVolume'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class api__v1__pods:
    pth = "/api/v1/pods"

    class get:
        """list or watch objects of kind Pod """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1PodForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PodList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__podtemplates:
    pth = "/api/v1/podtemplates"

    class get:
        """list or watch objects of kind PodTemplate """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1PodTemplateForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_PodTemplateList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodTemplate', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__replicationcontrollers:
    pth = "/api/v1/replicationcontrollers"

    class get:
        """list or watch objects of kind ReplicationController """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1ReplicationControllerForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ReplicationControllerList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ReplicationController', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__resourcequotas:
    pth = "/api/v1/resourcequotas"

    class get:
        """list or watch objects of kind ResourceQuota """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1ResourceQuotaForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ResourceQuotaList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ResourceQuota', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__secrets:
    pth = "/api/v1/secrets"

    class get:
        """list or watch objects of kind Secret """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1SecretForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_SecretList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Secret', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__serviceaccounts:
    pth = "/api/v1/serviceaccounts"

    class get:
        """list or watch objects of kind ServiceAccount """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1ServiceAccountForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ServiceAccountList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceAccount', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__services:
    pth = "/api/v1/services"

    class get:
        """list or watch objects of kind Service """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'listCoreV1ServiceForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_core_v1_ServiceList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Service', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__configmaps:
    pth = "/api/v1/watch/configmaps"

    class get:
        """watch individual changes to a list of ConfigMap. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1ConfigMapListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ConfigMap', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__endpoints:
    pth = "/api/v1/watch/endpoints"

    class get:
        """watch individual changes to a list of Endpoints. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1EndpointsListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Endpoints', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__events:
    pth = "/api/v1/watch/events"

    class get:
        """watch individual changes to a list of Event. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1EventListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Event', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__limitranges:
    pth = "/api/v1/watch/limitranges"

    class get:
        """watch individual changes to a list of LimitRange. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1LimitRangeListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'LimitRange', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces:
    pth = "/api/v1/watch/namespaces"

    class get:
        """watch individual changes to a list of Namespace. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespaceList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Namespace', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___configmaps:
    pth = "/api/v1/watch/namespaces/{namespace}/configmaps"

    class get:
        """watch individual changes to a list of ConfigMap. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedConfigMapList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ConfigMap', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___configmaps___name_:
    pth = "/api/v1/watch/namespaces/{namespace}/configmaps/{name}"

    class get:
        """watch changes to an object of kind ConfigMap. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedConfigMap', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ConfigMap', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ConfigMap'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___endpoints:
    pth = "/api/v1/watch/namespaces/{namespace}/endpoints"

    class get:
        """watch individual changes to a list of Endpoints. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedEndpointsList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Endpoints', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___endpoints___name_:
    pth = "/api/v1/watch/namespaces/{namespace}/endpoints/{name}"

    class get:
        """watch changes to an object of kind Endpoints. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedEndpoints', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Endpoints', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Endpoints'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___events:
    pth = "/api/v1/watch/namespaces/{namespace}/events"

    class get:
        """watch individual changes to a list of Event. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedEventList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Event', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___events___name_:
    pth = "/api/v1/watch/namespaces/{namespace}/events/{name}"

    class get:
        """watch changes to an object of kind Event. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Event', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Event'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___limitranges:
    pth = "/api/v1/watch/namespaces/{namespace}/limitranges"

    class get:
        """watch individual changes to a list of LimitRange. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedLimitRangeList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'LimitRange', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___limitranges___name_:
    pth = "/api/v1/watch/namespaces/{namespace}/limitranges/{name}"

    class get:
        """watch changes to an object of kind LimitRange. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedLimitRange', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'LimitRange', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the LimitRange'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___persistentvolumeclaims:
    pth = "/api/v1/watch/namespaces/{namespace}/persistentvolumeclaims"

    class get:
        """watch individual changes to a list of PersistentVolumeClaim. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedPersistentVolumeClaimList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolumeClaim', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___persistentvolumeclaims___name_:
    pth = "/api/v1/watch/namespaces/{namespace}/persistentvolumeclaims/{name}"

    class get:
        """watch changes to an object of kind PersistentVolumeClaim. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedPersistentVolumeClaim', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolumeClaim', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PersistentVolumeClaim'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___pods:
    pth = "/api/v1/watch/namespaces/{namespace}/pods"

    class get:
        """watch individual changes to a list of Pod. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedPodList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___pods___name_:
    pth = "/api/v1/watch/namespaces/{namespace}/pods/{name}"

    class get:
        """watch changes to an object of kind Pod. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedPod', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Pod'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___podtemplates:
    pth = "/api/v1/watch/namespaces/{namespace}/podtemplates"

    class get:
        """watch individual changes to a list of PodTemplate. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedPodTemplateList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodTemplate', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___podtemplates___name_:
    pth = "/api/v1/watch/namespaces/{namespace}/podtemplates/{name}"

    class get:
        """watch changes to an object of kind PodTemplate. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedPodTemplate', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodTemplate', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodTemplate'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___replicationcontrollers:
    pth = "/api/v1/watch/namespaces/{namespace}/replicationcontrollers"

    class get:
        """watch individual changes to a list of ReplicationController. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedReplicationControllerList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ReplicationController', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___replicationcontrollers___name_:
    pth = "/api/v1/watch/namespaces/{namespace}/replicationcontrollers/{name}"

    class get:
        """watch changes to an object of kind ReplicationController. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedReplicationController', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ReplicationController', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ReplicationController'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___resourcequotas:
    pth = "/api/v1/watch/namespaces/{namespace}/resourcequotas"

    class get:
        """watch individual changes to a list of ResourceQuota. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedResourceQuotaList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ResourceQuota', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___resourcequotas___name_:
    pth = "/api/v1/watch/namespaces/{namespace}/resourcequotas/{name}"

    class get:
        """watch changes to an object of kind ResourceQuota. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedResourceQuota', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ResourceQuota', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ResourceQuota'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___secrets:
    pth = "/api/v1/watch/namespaces/{namespace}/secrets"

    class get:
        """watch individual changes to a list of Secret. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedSecretList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Secret', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___secrets___name_:
    pth = "/api/v1/watch/namespaces/{namespace}/secrets/{name}"

    class get:
        """watch changes to an object of kind Secret. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedSecret', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Secret', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Secret'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___serviceaccounts:
    pth = "/api/v1/watch/namespaces/{namespace}/serviceaccounts"

    class get:
        """watch individual changes to a list of ServiceAccount. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedServiceAccountList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceAccount', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___serviceaccounts___name_:
    pth = "/api/v1/watch/namespaces/{namespace}/serviceaccounts/{name}"

    class get:
        """watch changes to an object of kind ServiceAccount. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedServiceAccount', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceAccount', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ServiceAccount'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___services:
    pth = "/api/v1/watch/namespaces/{namespace}/services"

    class get:
        """watch individual changes to a list of Service. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedServiceList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Service', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___namespace___services___name_:
    pth = "/api/v1/watch/namespaces/{namespace}/services/{name}"

    class get:
        """watch changes to an object of kind Service. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NamespacedService', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Service', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Service'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__namespaces___name_:
    pth = "/api/v1/watch/namespaces/{name}"

    class get:
        """watch changes to an object of kind Namespace. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1Namespace', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Namespace', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Namespace'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__nodes:
    pth = "/api/v1/watch/nodes"

    class get:
        """watch individual changes to a list of Node. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1NodeList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Node', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__nodes___name_:
    pth = "/api/v1/watch/nodes/{name}"

    class get:
        """watch changes to an object of kind Node. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1Node', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Node', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Node'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__persistentvolumeclaims:
    pth = "/api/v1/watch/persistentvolumeclaims"

    class get:
        """watch individual changes to a list of PersistentVolumeClaim. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1PersistentVolumeClaimListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolumeClaim', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__persistentvolumes:
    pth = "/api/v1/watch/persistentvolumes"

    class get:
        """watch individual changes to a list of PersistentVolume. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1PersistentVolumeList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolume', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__persistentvolumes___name_:
    pth = "/api/v1/watch/persistentvolumes/{name}"

    class get:
        """watch changes to an object of kind PersistentVolume. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1PersistentVolume', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PersistentVolume', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PersistentVolume'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__pods:
    pth = "/api/v1/watch/pods"

    class get:
        """watch individual changes to a list of Pod. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1PodListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Pod', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__podtemplates:
    pth = "/api/v1/watch/podtemplates"

    class get:
        """watch individual changes to a list of PodTemplate. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1PodTemplateListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'PodTemplate', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__replicationcontrollers:
    pth = "/api/v1/watch/replicationcontrollers"

    class get:
        """watch individual changes to a list of ReplicationController. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1ReplicationControllerListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ReplicationController', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__resourcequotas:
    pth = "/api/v1/watch/resourcequotas"

    class get:
        """watch individual changes to a list of ResourceQuota. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1ResourceQuotaListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ResourceQuota', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__secrets:
    pth = "/api/v1/watch/secrets"

    class get:
        """watch individual changes to a list of Secret. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1SecretListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Secret', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__serviceaccounts:
    pth = "/api/v1/watch/serviceaccounts"

    class get:
        """watch individual changes to a list of ServiceAccount. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1ServiceAccountListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'ServiceAccount', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class api__v1__watch__services:
    pth = "/api/v1/watch/services"

    class get:
        """watch individual changes to a list of Service. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['core_v1'], 'operationId': 'watchCoreV1ServiceListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': '', 'kind': 'Service', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__:
    pth = "/apis/"

    class get:
        """get available API versions """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apis'], 'operationId': 'getAPIVersions', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__admissionregistration_k8s_io__:
    pth = "/apis/admissionregistration.k8s.io/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['admissionregistration'], 'operationId': 'getAdmissionregistrationAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__admissionregistration_k8s_io__v1__:
    pth = "/apis/admissionregistration.k8s.io/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'getAdmissionregistrationV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__admissionregistration_k8s_io__v1__mutatingwebhookconfigurations:
    pth = "/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations"

    class get:
        """list or watch objects of kind MutatingWebhookConfiguration """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'listAdmissionregistrationV1MutatingWebhookConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfigurationList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'MutatingWebhookConfiguration', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a MutatingWebhookConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'createAdmissionregistrationV1MutatingWebhookConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfiguration}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfiguration}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'MutatingWebhookConfiguration', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfiguration
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfiguration
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of MutatingWebhookConfiguration """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'deleteAdmissionregistrationV1CollectionMutatingWebhookConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'MutatingWebhookConfiguration', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__admissionregistration_k8s_io__v1__mutatingwebhookconfigurations___name_:
    pth = "/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/{name}"

    class get:
        """read the specified MutatingWebhookConfiguration """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'readAdmissionregistrationV1MutatingWebhookConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'MutatingWebhookConfiguration', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the MutatingWebhookConfiguration'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified MutatingWebhookConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'replaceAdmissionregistrationV1MutatingWebhookConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfiguration}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'MutatingWebhookConfiguration', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the MutatingWebhookConfiguration'}
            body = Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfiguration
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfiguration
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a MutatingWebhookConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'deleteAdmissionregistrationV1MutatingWebhookConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'MutatingWebhookConfiguration', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the MutatingWebhookConfiguration'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified MutatingWebhookConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'patchAdmissionregistrationV1MutatingWebhookConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfiguration}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_MutatingWebhookConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'MutatingWebhookConfiguration', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the MutatingWebhookConfiguration'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__admissionregistration_k8s_io__v1__validatingwebhookconfigurations:
    pth = "/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations"

    class get:
        """list or watch objects of kind ValidatingWebhookConfiguration """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'listAdmissionregistrationV1ValidatingWebhookConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfigurationList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'ValidatingWebhookConfiguration', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a ValidatingWebhookConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'createAdmissionregistrationV1ValidatingWebhookConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfiguration}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfiguration}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'ValidatingWebhookConfiguration', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfiguration
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfiguration
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of ValidatingWebhookConfiguration """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'deleteAdmissionregistrationV1CollectionValidatingWebhookConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'ValidatingWebhookConfiguration', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__admissionregistration_k8s_io__v1__validatingwebhookconfigurations___name_:
    pth = "/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/{name}"

    class get:
        """read the specified ValidatingWebhookConfiguration """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'readAdmissionregistrationV1ValidatingWebhookConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'ValidatingWebhookConfiguration', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ValidatingWebhookConfiguration'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified ValidatingWebhookConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'replaceAdmissionregistrationV1ValidatingWebhookConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfiguration}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'ValidatingWebhookConfiguration', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ValidatingWebhookConfiguration'}
            body = Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfiguration
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfiguration
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a ValidatingWebhookConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'deleteAdmissionregistrationV1ValidatingWebhookConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'ValidatingWebhookConfiguration', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ValidatingWebhookConfiguration'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified ValidatingWebhookConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'patchAdmissionregistrationV1ValidatingWebhookConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfiguration}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_admissionregistration_v1_ValidatingWebhookConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'ValidatingWebhookConfiguration', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ValidatingWebhookConfiguration'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__admissionregistration_k8s_io__v1__watch__mutatingwebhookconfigurations:
    pth = "/apis/admissionregistration.k8s.io/v1/watch/mutatingwebhookconfigurations"

    class get:
        """watch individual changes to a list of MutatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'watchAdmissionregistrationV1MutatingWebhookConfigurationList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'MutatingWebhookConfiguration', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__admissionregistration_k8s_io__v1__watch__mutatingwebhookconfigurations___name_:
    pth = "/apis/admissionregistration.k8s.io/v1/watch/mutatingwebhookconfigurations/{name}"

    class get:
        """watch changes to an object of kind MutatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'watchAdmissionregistrationV1MutatingWebhookConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'MutatingWebhookConfiguration', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the MutatingWebhookConfiguration'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__admissionregistration_k8s_io__v1__watch__validatingwebhookconfigurations:
    pth = "/apis/admissionregistration.k8s.io/v1/watch/validatingwebhookconfigurations"

    class get:
        """watch individual changes to a list of ValidatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'watchAdmissionregistrationV1ValidatingWebhookConfigurationList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'ValidatingWebhookConfiguration', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__admissionregistration_k8s_io__v1__watch__validatingwebhookconfigurations___name_:
    pth = "/apis/admissionregistration.k8s.io/v1/watch/validatingwebhookconfigurations/{name}"

    class get:
        """watch changes to an object of kind ValidatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['admissionregistration_v1'], 'operationId': 'watchAdmissionregistrationV1ValidatingWebhookConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'admissionregistration.k8s.io', 'kind': 'ValidatingWebhookConfiguration', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ValidatingWebhookConfiguration'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apiextensions_k8s_io__:
    pth = "/apis/apiextensions.k8s.io/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiextensions'], 'operationId': 'getApiextensionsAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__apiextensions_k8s_io__v1__:
    pth = "/apis/apiextensions.k8s.io/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiextensions_v1'], 'operationId': 'getApiextensionsV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__apiextensions_k8s_io__v1__customresourcedefinitions:
    pth = "/apis/apiextensions.k8s.io/v1/customresourcedefinitions"

    class get:
        """list or watch objects of kind CustomResourceDefinition """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apiextensions_v1'], 'operationId': 'listApiextensionsV1CustomResourceDefinition', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'apiextensions.k8s.io', 'kind': 'CustomResourceDefinition', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a CustomResourceDefinition """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiextensions_v1'], 'operationId': 'createApiextensionsV1CustomResourceDefinition', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'apiextensions.k8s.io', 'kind': 'CustomResourceDefinition', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of CustomResourceDefinition """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiextensions_v1'], 'operationId': 'deleteApiextensionsV1CollectionCustomResourceDefinition', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'apiextensions.k8s.io', 'kind': 'CustomResourceDefinition', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__apiextensions_k8s_io__v1__customresourcedefinitions___name_:
    pth = "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/{name}"

    class get:
        """read the specified CustomResourceDefinition """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiextensions_v1'], 'operationId': 'readApiextensionsV1CustomResourceDefinition', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'apiextensions.k8s.io', 'kind': 'CustomResourceDefinition', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CustomResourceDefinition'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified CustomResourceDefinition """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiextensions_v1'], 'operationId': 'replaceApiextensionsV1CustomResourceDefinition', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'apiextensions.k8s.io', 'kind': 'CustomResourceDefinition', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CustomResourceDefinition'}
            body = Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a CustomResourceDefinition """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiextensions_v1'], 'operationId': 'deleteApiextensionsV1CustomResourceDefinition', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'apiextensions.k8s.io', 'kind': 'CustomResourceDefinition', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CustomResourceDefinition'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified CustomResourceDefinition """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiextensions_v1'], 'operationId': 'patchApiextensionsV1CustomResourceDefinition', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'apiextensions.k8s.io', 'kind': 'CustomResourceDefinition', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CustomResourceDefinition'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__apiextensions_k8s_io__v1__customresourcedefinitions___name___status:
    pth = "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/{name}/status"

    class get:
        """read status of the specified CustomResourceDefinition """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiextensions_v1'], 'operationId': 'readApiextensionsV1CustomResourceDefinitionStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'apiextensions.k8s.io', 'kind': 'CustomResourceDefinition', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CustomResourceDefinition'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace status of the specified CustomResourceDefinition """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiextensions_v1'], 'operationId': 'replaceApiextensionsV1CustomResourceDefinitionStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'apiextensions.k8s.io', 'kind': 'CustomResourceDefinition', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CustomResourceDefinition'}
            body = Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified CustomResourceDefinition """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiextensions_v1'], 'operationId': 'patchApiextensionsV1CustomResourceDefinitionStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'apiextensions.k8s.io', 'kind': 'CustomResourceDefinition', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CustomResourceDefinition'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__apiextensions_k8s_io__v1__watch__customresourcedefinitions:
    pth = "/apis/apiextensions.k8s.io/v1/watch/customresourcedefinitions"

    class get:
        """watch individual changes to a list of CustomResourceDefinition. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apiextensions_v1'], 'operationId': 'watchApiextensionsV1CustomResourceDefinitionList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'apiextensions.k8s.io', 'kind': 'CustomResourceDefinition', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apiextensions_k8s_io__v1__watch__customresourcedefinitions___name_:
    pth = "/apis/apiextensions.k8s.io/v1/watch/customresourcedefinitions/{name}"

    class get:
        """watch changes to an object of kind CustomResourceDefinition. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apiextensions_v1'], 'operationId': 'watchApiextensionsV1CustomResourceDefinition', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'apiextensions.k8s.io', 'kind': 'CustomResourceDefinition', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CustomResourceDefinition'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apiregistration_k8s_io__:
    pth = "/apis/apiregistration.k8s.io/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiregistration'], 'operationId': 'getApiregistrationAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__apiregistration_k8s_io__v1__:
    pth = "/apis/apiregistration.k8s.io/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiregistration_v1'], 'operationId': 'getApiregistrationV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__apiregistration_k8s_io__v1__apiservices:
    pth = "/apis/apiregistration.k8s.io/v1/apiservices"

    class get:
        """list or watch objects of kind APIService """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apiregistration_v1'], 'operationId': 'listApiregistrationV1APIService', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'apiregistration.k8s.io', 'version': 'v1', 'kind': 'APIService'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create an APIService """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiregistration_v1'], 'operationId': 'createApiregistrationV1APIService', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'apiregistration.k8s.io', 'version': 'v1', 'kind': 'APIService'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of APIService """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiregistration_v1'], 'operationId': 'deleteApiregistrationV1CollectionAPIService', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'apiregistration.k8s.io', 'version': 'v1', 'kind': 'APIService'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__apiregistration_k8s_io__v1__apiservices___name_:
    pth = "/apis/apiregistration.k8s.io/v1/apiservices/{name}"

    class get:
        """read the specified APIService """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiregistration_v1'], 'operationId': 'readApiregistrationV1APIService', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'apiregistration.k8s.io', 'version': 'v1', 'kind': 'APIService'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the APIService'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified APIService """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiregistration_v1'], 'operationId': 'replaceApiregistrationV1APIService', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'apiregistration.k8s.io', 'version': 'v1', 'kind': 'APIService'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the APIService'}
            body = Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete an APIService """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiregistration_v1'], 'operationId': 'deleteApiregistrationV1APIService', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'apiregistration.k8s.io', 'version': 'v1', 'kind': 'APIService'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the APIService'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified APIService """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiregistration_v1'], 'operationId': 'patchApiregistrationV1APIService', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'apiregistration.k8s.io', 'version': 'v1', 'kind': 'APIService'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the APIService'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__apiregistration_k8s_io__v1__apiservices___name___status:
    pth = "/apis/apiregistration.k8s.io/v1/apiservices/{name}/status"

    class get:
        """read status of the specified APIService """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiregistration_v1'], 'operationId': 'readApiregistrationV1APIServiceStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'apiregistration.k8s.io', 'version': 'v1', 'kind': 'APIService'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the APIService'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace status of the specified APIService """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiregistration_v1'], 'operationId': 'replaceApiregistrationV1APIServiceStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'apiregistration.k8s.io', 'version': 'v1', 'kind': 'APIService'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the APIService'}
            body = Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified APIService """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apiregistration_v1'], 'operationId': 'patchApiregistrationV1APIServiceStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'apiregistration.k8s.io', 'version': 'v1', 'kind': 'APIService'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the APIService'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__apiregistration_k8s_io__v1__watch__apiservices:
    pth = "/apis/apiregistration.k8s.io/v1/watch/apiservices"

    class get:
        """watch individual changes to a list of APIService. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apiregistration_v1'], 'operationId': 'watchApiregistrationV1APIServiceList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'apiregistration.k8s.io', 'version': 'v1', 'kind': 'APIService'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apiregistration_k8s_io__v1__watch__apiservices___name_:
    pth = "/apis/apiregistration.k8s.io/v1/watch/apiservices/{name}"

    class get:
        """watch changes to an object of kind APIService. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apiregistration_v1'], 'operationId': 'watchApiregistrationV1APIService', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'apiregistration.k8s.io', 'version': 'v1', 'kind': 'APIService'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the APIService'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__:
    pth = "/apis/apps/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps'], 'operationId': 'getAppsAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__apps__v1__:
    pth = "/apis/apps/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'getAppsV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__apps__v1__controllerrevisions:
    pth = "/apis/apps/v1/controllerrevisions"

    class get:
        """list or watch objects of kind ControllerRevision """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'listAppsV1ControllerRevisionForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_ControllerRevisionList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ControllerRevision', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__daemonsets:
    pth = "/apis/apps/v1/daemonsets"

    class get:
        """list or watch objects of kind DaemonSet """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'listAppsV1DaemonSetForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_DaemonSetList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'DaemonSet', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__deployments:
    pth = "/apis/apps/v1/deployments"

    class get:
        """list or watch objects of kind Deployment """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'listAppsV1DeploymentForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_DeploymentList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'Deployment', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__namespaces___namespace___controllerrevisions:
    pth = "/apis/apps/v1/namespaces/{namespace}/controllerrevisions"

    class get:
        """list or watch objects of kind ControllerRevision """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'listAppsV1NamespacedControllerRevision', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_ControllerRevisionList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ControllerRevision', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a ControllerRevision """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'createAppsV1NamespacedControllerRevision', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_ControllerRevision}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_ControllerRevision}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_apps_v1_ControllerRevision}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ControllerRevision', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_apps_v1_ControllerRevision
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_apps_v1_ControllerRevision
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of ControllerRevision """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'deleteAppsV1CollectionNamespacedControllerRevision', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ControllerRevision', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__apps__v1__namespaces___namespace___controllerrevisions___name_:
    pth = "/apis/apps/v1/namespaces/{namespace}/controllerrevisions/{name}"

    class get:
        """read the specified ControllerRevision """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'readAppsV1NamespacedControllerRevision', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_ControllerRevision}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ControllerRevision', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ControllerRevision'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified ControllerRevision """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'replaceAppsV1NamespacedControllerRevision', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_ControllerRevision}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_ControllerRevision}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ControllerRevision', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ControllerRevision'}
            body = Defs.definitions_io_k8s_api_apps_v1_ControllerRevision
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_apps_v1_ControllerRevision
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a ControllerRevision """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'deleteAppsV1NamespacedControllerRevision', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ControllerRevision', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ControllerRevision'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified ControllerRevision """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'patchAppsV1NamespacedControllerRevision', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_ControllerRevision}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_ControllerRevision}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ControllerRevision', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ControllerRevision'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__apps__v1__namespaces___namespace___daemonsets:
    pth = "/apis/apps/v1/namespaces/{namespace}/daemonsets"

    class get:
        """list or watch objects of kind DaemonSet """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'listAppsV1NamespacedDaemonSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_DaemonSetList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'DaemonSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a DaemonSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'createAppsV1NamespacedDaemonSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_DaemonSet}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_DaemonSet}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_apps_v1_DaemonSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'DaemonSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_apps_v1_DaemonSet
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_apps_v1_DaemonSet
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of DaemonSet """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'deleteAppsV1CollectionNamespacedDaemonSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'DaemonSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__apps__v1__namespaces___namespace___daemonsets___name_:
    pth = "/apis/apps/v1/namespaces/{namespace}/daemonsets/{name}"

    class get:
        """read the specified DaemonSet """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'readAppsV1NamespacedDaemonSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_DaemonSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'DaemonSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the DaemonSet'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified DaemonSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'replaceAppsV1NamespacedDaemonSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_DaemonSet}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_DaemonSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'DaemonSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the DaemonSet'}
            body = Defs.definitions_io_k8s_api_apps_v1_DaemonSet
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_apps_v1_DaemonSet
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a DaemonSet """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'deleteAppsV1NamespacedDaemonSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'DaemonSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the DaemonSet'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified DaemonSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'patchAppsV1NamespacedDaemonSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_DaemonSet}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_DaemonSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'DaemonSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the DaemonSet'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__apps__v1__namespaces___namespace___daemonsets___name___status:
    pth = "/apis/apps/v1/namespaces/{namespace}/daemonsets/{name}/status"

    class get:
        """read status of the specified DaemonSet """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'readAppsV1NamespacedDaemonSetStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_DaemonSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'DaemonSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the DaemonSet'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified DaemonSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'replaceAppsV1NamespacedDaemonSetStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_DaemonSet}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_DaemonSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'DaemonSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the DaemonSet'}
            body = Defs.definitions_io_k8s_api_apps_v1_DaemonSet
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_apps_v1_DaemonSet
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified DaemonSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'patchAppsV1NamespacedDaemonSetStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_DaemonSet}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_DaemonSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'DaemonSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the DaemonSet'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__apps__v1__namespaces___namespace___deployments:
    pth = "/apis/apps/v1/namespaces/{namespace}/deployments"

    class get:
        """list or watch objects of kind Deployment """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'listAppsV1NamespacedDeployment', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_DeploymentList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'Deployment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a Deployment """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'createAppsV1NamespacedDeployment', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_Deployment}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_Deployment}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_apps_v1_Deployment}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'Deployment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_apps_v1_Deployment
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_apps_v1_Deployment
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of Deployment """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'deleteAppsV1CollectionNamespacedDeployment', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'Deployment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__apps__v1__namespaces___namespace___deployments___name_:
    pth = "/apis/apps/v1/namespaces/{namespace}/deployments/{name}"

    class get:
        """read the specified Deployment """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'readAppsV1NamespacedDeployment', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_Deployment}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'Deployment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Deployment'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified Deployment """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'replaceAppsV1NamespacedDeployment', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_Deployment}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_Deployment}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'Deployment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Deployment'}
            body = Defs.definitions_io_k8s_api_apps_v1_Deployment
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_apps_v1_Deployment
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a Deployment """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'deleteAppsV1NamespacedDeployment', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'Deployment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Deployment'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified Deployment """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'patchAppsV1NamespacedDeployment', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_Deployment}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_Deployment}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'Deployment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Deployment'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__apps__v1__namespaces___namespace___deployments___name___scale:
    pth = "/apis/apps/v1/namespaces/{namespace}/deployments/{name}/scale"

    class get:
        """read scale of the specified Deployment """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'readAppsV1NamespacedDeploymentScale', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'Scale', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Scale'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace scale of the specified Deployment """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'replaceAppsV1NamespacedDeploymentScale', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'Scale', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Scale'}
            body = Defs.definitions_io_k8s_api_autoscaling_v1_Scale
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_autoscaling_v1_Scale
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update scale of the specified Deployment """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'patchAppsV1NamespacedDeploymentScale', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'Scale', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Scale'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__apps__v1__namespaces___namespace___deployments___name___status:
    pth = "/apis/apps/v1/namespaces/{namespace}/deployments/{name}/status"

    class get:
        """read status of the specified Deployment """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'readAppsV1NamespacedDeploymentStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_Deployment}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'Deployment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Deployment'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified Deployment """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'replaceAppsV1NamespacedDeploymentStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_Deployment}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_Deployment}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'Deployment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Deployment'}
            body = Defs.definitions_io_k8s_api_apps_v1_Deployment
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_apps_v1_Deployment
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified Deployment """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'patchAppsV1NamespacedDeploymentStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_Deployment}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_Deployment}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'Deployment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Deployment'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__apps__v1__namespaces___namespace___replicasets:
    pth = "/apis/apps/v1/namespaces/{namespace}/replicasets"

    class get:
        """list or watch objects of kind ReplicaSet """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'listAppsV1NamespacedReplicaSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_ReplicaSetList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ReplicaSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a ReplicaSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'createAppsV1NamespacedReplicaSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_ReplicaSet}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_ReplicaSet}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_apps_v1_ReplicaSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ReplicaSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_apps_v1_ReplicaSet
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_apps_v1_ReplicaSet
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of ReplicaSet """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'deleteAppsV1CollectionNamespacedReplicaSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ReplicaSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__apps__v1__namespaces___namespace___replicasets___name_:
    pth = "/apis/apps/v1/namespaces/{namespace}/replicasets/{name}"

    class get:
        """read the specified ReplicaSet """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'readAppsV1NamespacedReplicaSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_ReplicaSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ReplicaSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ReplicaSet'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified ReplicaSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'replaceAppsV1NamespacedReplicaSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_ReplicaSet}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_ReplicaSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ReplicaSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ReplicaSet'}
            body = Defs.definitions_io_k8s_api_apps_v1_ReplicaSet
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_apps_v1_ReplicaSet
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a ReplicaSet """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'deleteAppsV1NamespacedReplicaSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ReplicaSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ReplicaSet'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified ReplicaSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'patchAppsV1NamespacedReplicaSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_ReplicaSet}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_ReplicaSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ReplicaSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ReplicaSet'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__apps__v1__namespaces___namespace___replicasets___name___scale:
    pth = "/apis/apps/v1/namespaces/{namespace}/replicasets/{name}/scale"

    class get:
        """read scale of the specified ReplicaSet """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'readAppsV1NamespacedReplicaSetScale', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'Scale', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Scale'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace scale of the specified ReplicaSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'replaceAppsV1NamespacedReplicaSetScale', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'Scale', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Scale'}
            body = Defs.definitions_io_k8s_api_autoscaling_v1_Scale
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_autoscaling_v1_Scale
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update scale of the specified ReplicaSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'patchAppsV1NamespacedReplicaSetScale', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'Scale', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Scale'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__apps__v1__namespaces___namespace___replicasets___name___status:
    pth = "/apis/apps/v1/namespaces/{namespace}/replicasets/{name}/status"

    class get:
        """read status of the specified ReplicaSet """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'readAppsV1NamespacedReplicaSetStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_ReplicaSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ReplicaSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ReplicaSet'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified ReplicaSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'replaceAppsV1NamespacedReplicaSetStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_ReplicaSet}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_ReplicaSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ReplicaSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ReplicaSet'}
            body = Defs.definitions_io_k8s_api_apps_v1_ReplicaSet
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_apps_v1_ReplicaSet
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified ReplicaSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'patchAppsV1NamespacedReplicaSetStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_ReplicaSet}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_ReplicaSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ReplicaSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ReplicaSet'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__apps__v1__namespaces___namespace___statefulsets:
    pth = "/apis/apps/v1/namespaces/{namespace}/statefulsets"

    class get:
        """list or watch objects of kind StatefulSet """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'listAppsV1NamespacedStatefulSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_StatefulSetList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'StatefulSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a StatefulSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'createAppsV1NamespacedStatefulSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_StatefulSet}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_StatefulSet}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_apps_v1_StatefulSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'StatefulSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_apps_v1_StatefulSet
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_apps_v1_StatefulSet
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of StatefulSet """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'deleteAppsV1CollectionNamespacedStatefulSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'StatefulSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__apps__v1__namespaces___namespace___statefulsets___name_:
    pth = "/apis/apps/v1/namespaces/{namespace}/statefulsets/{name}"

    class get:
        """read the specified StatefulSet """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'readAppsV1NamespacedStatefulSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_StatefulSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'StatefulSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the StatefulSet'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified StatefulSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'replaceAppsV1NamespacedStatefulSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_StatefulSet}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_StatefulSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'StatefulSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the StatefulSet'}
            body = Defs.definitions_io_k8s_api_apps_v1_StatefulSet
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_apps_v1_StatefulSet
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a StatefulSet """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'deleteAppsV1NamespacedStatefulSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'StatefulSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the StatefulSet'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified StatefulSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'patchAppsV1NamespacedStatefulSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_StatefulSet}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_StatefulSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'StatefulSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the StatefulSet'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__apps__v1__namespaces___namespace___statefulsets___name___scale:
    pth = "/apis/apps/v1/namespaces/{namespace}/statefulsets/{name}/scale"

    class get:
        """read scale of the specified StatefulSet """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'readAppsV1NamespacedStatefulSetScale', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'Scale', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Scale'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace scale of the specified StatefulSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'replaceAppsV1NamespacedStatefulSetScale', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'Scale', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Scale'}
            body = Defs.definitions_io_k8s_api_autoscaling_v1_Scale
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_autoscaling_v1_Scale
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update scale of the specified StatefulSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'patchAppsV1NamespacedStatefulSetScale', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_Scale}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'Scale', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Scale'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__apps__v1__namespaces___namespace___statefulsets___name___status:
    pth = "/apis/apps/v1/namespaces/{namespace}/statefulsets/{name}/status"

    class get:
        """read status of the specified StatefulSet """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'readAppsV1NamespacedStatefulSetStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_StatefulSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'StatefulSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the StatefulSet'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified StatefulSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'replaceAppsV1NamespacedStatefulSetStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_StatefulSet}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_StatefulSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'StatefulSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the StatefulSet'}
            body = Defs.definitions_io_k8s_api_apps_v1_StatefulSet
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_apps_v1_StatefulSet
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified StatefulSet """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'patchAppsV1NamespacedStatefulSetStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_StatefulSet}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_apps_v1_StatefulSet}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'StatefulSet', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the StatefulSet'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__apps__v1__replicasets:
    pth = "/apis/apps/v1/replicasets"

    class get:
        """list or watch objects of kind ReplicaSet """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'listAppsV1ReplicaSetForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_ReplicaSetList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ReplicaSet', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__statefulsets:
    pth = "/apis/apps/v1/statefulsets"

    class get:
        """list or watch objects of kind StatefulSet """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'listAppsV1StatefulSetForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_apps_v1_StatefulSetList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'StatefulSet', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__watch__controllerrevisions:
    pth = "/apis/apps/v1/watch/controllerrevisions"

    class get:
        """watch individual changes to a list of ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'watchAppsV1ControllerRevisionListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ControllerRevision', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__watch__daemonsets:
    pth = "/apis/apps/v1/watch/daemonsets"

    class get:
        """watch individual changes to a list of DaemonSet. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'watchAppsV1DaemonSetListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'DaemonSet', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__watch__deployments:
    pth = "/apis/apps/v1/watch/deployments"

    class get:
        """watch individual changes to a list of Deployment. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'watchAppsV1DeploymentListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'Deployment', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__watch__namespaces___namespace___controllerrevisions:
    pth = "/apis/apps/v1/watch/namespaces/{namespace}/controllerrevisions"

    class get:
        """watch individual changes to a list of ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'watchAppsV1NamespacedControllerRevisionList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ControllerRevision', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__watch__namespaces___namespace___controllerrevisions___name_:
    pth = "/apis/apps/v1/watch/namespaces/{namespace}/controllerrevisions/{name}"

    class get:
        """watch changes to an object of kind ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'watchAppsV1NamespacedControllerRevision', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ControllerRevision', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ControllerRevision'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__watch__namespaces___namespace___daemonsets:
    pth = "/apis/apps/v1/watch/namespaces/{namespace}/daemonsets"

    class get:
        """watch individual changes to a list of DaemonSet. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'watchAppsV1NamespacedDaemonSetList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'DaemonSet', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__watch__namespaces___namespace___daemonsets___name_:
    pth = "/apis/apps/v1/watch/namespaces/{namespace}/daemonsets/{name}"

    class get:
        """watch changes to an object of kind DaemonSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'watchAppsV1NamespacedDaemonSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'DaemonSet', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the DaemonSet'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__watch__namespaces___namespace___deployments:
    pth = "/apis/apps/v1/watch/namespaces/{namespace}/deployments"

    class get:
        """watch individual changes to a list of Deployment. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'watchAppsV1NamespacedDeploymentList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'Deployment', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__watch__namespaces___namespace___deployments___name_:
    pth = "/apis/apps/v1/watch/namespaces/{namespace}/deployments/{name}"

    class get:
        """watch changes to an object of kind Deployment. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'watchAppsV1NamespacedDeployment', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'Deployment', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Deployment'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__watch__namespaces___namespace___replicasets:
    pth = "/apis/apps/v1/watch/namespaces/{namespace}/replicasets"

    class get:
        """watch individual changes to a list of ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'watchAppsV1NamespacedReplicaSetList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ReplicaSet', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__watch__namespaces___namespace___replicasets___name_:
    pth = "/apis/apps/v1/watch/namespaces/{namespace}/replicasets/{name}"

    class get:
        """watch changes to an object of kind ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'watchAppsV1NamespacedReplicaSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ReplicaSet', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ReplicaSet'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__watch__namespaces___namespace___statefulsets:
    pth = "/apis/apps/v1/watch/namespaces/{namespace}/statefulsets"

    class get:
        """watch individual changes to a list of StatefulSet. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'watchAppsV1NamespacedStatefulSetList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'StatefulSet', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__watch__namespaces___namespace___statefulsets___name_:
    pth = "/apis/apps/v1/watch/namespaces/{namespace}/statefulsets/{name}"

    class get:
        """watch changes to an object of kind StatefulSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'watchAppsV1NamespacedStatefulSet', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'StatefulSet', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the StatefulSet'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__watch__replicasets:
    pth = "/apis/apps/v1/watch/replicasets"

    class get:
        """watch individual changes to a list of ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'watchAppsV1ReplicaSetListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'ReplicaSet', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__apps__v1__watch__statefulsets:
    pth = "/apis/apps/v1/watch/statefulsets"

    class get:
        """watch individual changes to a list of StatefulSet. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['apps_v1'], 'operationId': 'watchAppsV1StatefulSetListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'apps', 'kind': 'StatefulSet', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__authentication_k8s_io__:
    pth = "/apis/authentication.k8s.io/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['authentication'], 'operationId': 'getAuthenticationAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__authentication_k8s_io__v1__:
    pth = "/apis/authentication.k8s.io/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['authentication_v1'], 'operationId': 'getAuthenticationV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__authentication_k8s_io__v1__tokenreviews:
    pth = "/apis/authentication.k8s.io/v1/tokenreviews"

    class post:
        """create a TokenReview """
        class R:
            _query = ['pretty', 'fieldManager', 'dryRun']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['authentication_v1'], 'operationId': 'createAuthenticationV1TokenReview', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_authentication_v1_TokenReview}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_authentication_v1_TokenReview}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_authentication_v1_TokenReview}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'authentication.k8s.io', 'kind': 'TokenReview', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            body = Defs.definitions_io_k8s_api_authentication_v1_TokenReview
        R.pretty = str_dflt
        R.fieldManager = str_dflt
        R.dryRun = str_dflt
        R.body = Defs.definitions_io_k8s_api_authentication_v1_TokenReview

class apis__authorization_k8s_io__:
    pth = "/apis/authorization.k8s.io/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['authorization'], 'operationId': 'getAuthorizationAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__authorization_k8s_io__v1__:
    pth = "/apis/authorization.k8s.io/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['authorization_v1'], 'operationId': 'getAuthorizationV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__authorization_k8s_io__v1__namespaces___namespace___localsubjectaccessreviews:
    pth = "/apis/authorization.k8s.io/v1/namespaces/{namespace}/localsubjectaccessreviews"

    class post:
        """create a LocalSubjectAccessReview """
        class R:
            _query = ['pretty', 'fieldManager', 'dryRun']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['authorization_v1'], 'operationId': 'createAuthorizationV1NamespacedLocalSubjectAccessReview', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_authorization_v1_LocalSubjectAccessReview}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_authorization_v1_LocalSubjectAccessReview}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_authorization_v1_LocalSubjectAccessReview}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'authorization.k8s.io', 'kind': 'LocalSubjectAccessReview', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            body = Defs.definitions_io_k8s_api_authorization_v1_LocalSubjectAccessReview
        R.pretty = str_dflt
        R.namespace = namespace
        R.fieldManager = str_dflt
        R.dryRun = str_dflt
        R.body = Defs.definitions_io_k8s_api_authorization_v1_LocalSubjectAccessReview

class apis__authorization_k8s_io__v1__selfsubjectaccessreviews:
    pth = "/apis/authorization.k8s.io/v1/selfsubjectaccessreviews"

    class post:
        """create a SelfSubjectAccessReview """
        class R:
            _query = ['pretty', 'fieldManager', 'dryRun']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['authorization_v1'], 'operationId': 'createAuthorizationV1SelfSubjectAccessReview', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_authorization_v1_SelfSubjectAccessReview}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_authorization_v1_SelfSubjectAccessReview}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_authorization_v1_SelfSubjectAccessReview}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'authorization.k8s.io', 'kind': 'SelfSubjectAccessReview', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            body = Defs.definitions_io_k8s_api_authorization_v1_SelfSubjectAccessReview
        R.pretty = str_dflt
        R.fieldManager = str_dflt
        R.dryRun = str_dflt
        R.body = Defs.definitions_io_k8s_api_authorization_v1_SelfSubjectAccessReview

class apis__authorization_k8s_io__v1__selfsubjectrulesreviews:
    pth = "/apis/authorization.k8s.io/v1/selfsubjectrulesreviews"

    class post:
        """create a SelfSubjectRulesReview """
        class R:
            _query = ['pretty', 'fieldManager', 'dryRun']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['authorization_v1'], 'operationId': 'createAuthorizationV1SelfSubjectRulesReview', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_authorization_v1_SelfSubjectRulesReview}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_authorization_v1_SelfSubjectRulesReview}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_authorization_v1_SelfSubjectRulesReview}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'authorization.k8s.io', 'kind': 'SelfSubjectRulesReview', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            body = Defs.definitions_io_k8s_api_authorization_v1_SelfSubjectRulesReview
        R.pretty = str_dflt
        R.fieldManager = str_dflt
        R.dryRun = str_dflt
        R.body = Defs.definitions_io_k8s_api_authorization_v1_SelfSubjectRulesReview

class apis__authorization_k8s_io__v1__subjectaccessreviews:
    pth = "/apis/authorization.k8s.io/v1/subjectaccessreviews"

    class post:
        """create a SubjectAccessReview """
        class R:
            _query = ['pretty', 'fieldManager', 'dryRun']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['authorization_v1'], 'operationId': 'createAuthorizationV1SubjectAccessReview', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_authorization_v1_SubjectAccessReview}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_authorization_v1_SubjectAccessReview}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_authorization_v1_SubjectAccessReview}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'authorization.k8s.io', 'kind': 'SubjectAccessReview', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            body = Defs.definitions_io_k8s_api_authorization_v1_SubjectAccessReview
        R.pretty = str_dflt
        R.fieldManager = str_dflt
        R.dryRun = str_dflt
        R.body = Defs.definitions_io_k8s_api_authorization_v1_SubjectAccessReview

class apis__autoscaling__:
    pth = "/apis/autoscaling/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling'], 'operationId': 'getAutoscalingAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__autoscaling__v1__:
    pth = "/apis/autoscaling/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v1'], 'operationId': 'getAutoscalingV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__autoscaling__v1__horizontalpodautoscalers:
    pth = "/apis/autoscaling/v1/horizontalpodautoscalers"

    class get:
        """list or watch objects of kind HorizontalPodAutoscaler """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v1'], 'operationId': 'listAutoscalingV1HorizontalPodAutoscalerForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__autoscaling__v1__namespaces___namespace___horizontalpodautoscalers:
    pth = "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers"

    class get:
        """list or watch objects of kind HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v1'], 'operationId': 'listAutoscalingV1NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v1'], 'operationId': 'createAutoscalingV1NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v1'], 'operationId': 'deleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__autoscaling__v1__namespaces___namespace___horizontalpodautoscalers___name_:
    pth = "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}"

    class get:
        """read the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v1'], 'operationId': 'readAutoscalingV1NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v1'], 'operationId': 'replaceAutoscalingV1NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v1'], 'operationId': 'deleteAutoscalingV1NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v1'], 'operationId': 'patchAutoscalingV1NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__autoscaling__v1__namespaces___namespace___horizontalpodautoscalers___name___status:
    pth = "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status"

    class get:
        """read status of the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v1'], 'operationId': 'readAutoscalingV1NamespacedHorizontalPodAutoscalerStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v1'], 'operationId': 'replaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v1'], 'operationId': 'patchAutoscalingV1NamespacedHorizontalPodAutoscalerStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__autoscaling__v1__watch__horizontalpodautoscalers:
    pth = "/apis/autoscaling/v1/watch/horizontalpodautoscalers"

    class get:
        """watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v1'], 'operationId': 'watchAutoscalingV1HorizontalPodAutoscalerListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__autoscaling__v1__watch__namespaces___namespace___horizontalpodautoscalers:
    pth = "/apis/autoscaling/v1/watch/namespaces/{namespace}/horizontalpodautoscalers"

    class get:
        """watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v1'], 'operationId': 'watchAutoscalingV1NamespacedHorizontalPodAutoscalerList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__autoscaling__v1__watch__namespaces___namespace___horizontalpodautoscalers___name_:
    pth = "/apis/autoscaling/v1/watch/namespaces/{namespace}/horizontalpodautoscalers/{name}"

    class get:
        """watch changes to an object of kind HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v1'], 'operationId': 'watchAutoscalingV1NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__autoscaling__v2__:
    pth = "/apis/autoscaling/v2/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2'], 'operationId': 'getAutoscalingV2APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__autoscaling__v2__horizontalpodautoscalers:
    pth = "/apis/autoscaling/v2/horizontalpodautoscalers"

    class get:
        """list or watch objects of kind HorizontalPodAutoscaler """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v2'], 'operationId': 'listAutoscalingV2HorizontalPodAutoscalerForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__autoscaling__v2__namespaces___namespace___horizontalpodautoscalers:
    pth = "/apis/autoscaling/v2/namespaces/{namespace}/horizontalpodautoscalers"

    class get:
        """list or watch objects of kind HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v2'], 'operationId': 'listAutoscalingV2NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2'], 'operationId': 'createAutoscalingV2NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2'], 'operationId': 'deleteAutoscalingV2CollectionNamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__autoscaling__v2__namespaces___namespace___horizontalpodautoscalers___name_:
    pth = "/apis/autoscaling/v2/namespaces/{namespace}/horizontalpodautoscalers/{name}"

    class get:
        """read the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2'], 'operationId': 'readAutoscalingV2NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2'], 'operationId': 'replaceAutoscalingV2NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2'], 'operationId': 'deleteAutoscalingV2NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2'], 'operationId': 'patchAutoscalingV2NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__autoscaling__v2__namespaces___namespace___horizontalpodautoscalers___name___status:
    pth = "/apis/autoscaling/v2/namespaces/{namespace}/horizontalpodautoscalers/{name}/status"

    class get:
        """read status of the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2'], 'operationId': 'readAutoscalingV2NamespacedHorizontalPodAutoscalerStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2'], 'operationId': 'replaceAutoscalingV2NamespacedHorizontalPodAutoscalerStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2'], 'operationId': 'patchAutoscalingV2NamespacedHorizontalPodAutoscalerStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__autoscaling__v2__watch__horizontalpodautoscalers:
    pth = "/apis/autoscaling/v2/watch/horizontalpodautoscalers"

    class get:
        """watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v2'], 'operationId': 'watchAutoscalingV2HorizontalPodAutoscalerListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__autoscaling__v2__watch__namespaces___namespace___horizontalpodautoscalers:
    pth = "/apis/autoscaling/v2/watch/namespaces/{namespace}/horizontalpodautoscalers"

    class get:
        """watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v2'], 'operationId': 'watchAutoscalingV2NamespacedHorizontalPodAutoscalerList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__autoscaling__v2__watch__namespaces___namespace___horizontalpodautoscalers___name_:
    pth = "/apis/autoscaling/v2/watch/namespaces/{namespace}/horizontalpodautoscalers/{name}"

    class get:
        """watch changes to an object of kind HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v2'], 'operationId': 'watchAutoscalingV2NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__autoscaling__v2beta1__:
    pth = "/apis/autoscaling/v2beta1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta1'], 'operationId': 'getAutoscalingV2beta1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__autoscaling__v2beta1__horizontalpodautoscalers:
    pth = "/apis/autoscaling/v2beta1/horizontalpodautoscalers"

    class get:
        """list or watch objects of kind HorizontalPodAutoscaler """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta1'], 'operationId': 'listAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__autoscaling__v2beta1__namespaces___namespace___horizontalpodautoscalers:
    pth = "/apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers"

    class get:
        """list or watch objects of kind HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta1'], 'operationId': 'listAutoscalingV2beta1NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta1'], 'operationId': 'createAutoscalingV2beta1NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta1'], 'operationId': 'deleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__autoscaling__v2beta1__namespaces___namespace___horizontalpodautoscalers___name_:
    pth = "/apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}"

    class get:
        """read the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta1'], 'operationId': 'readAutoscalingV2beta1NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta1'], 'operationId': 'replaceAutoscalingV2beta1NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta1'], 'operationId': 'deleteAutoscalingV2beta1NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta1'], 'operationId': 'patchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__autoscaling__v2beta1__namespaces___namespace___horizontalpodautoscalers___name___status:
    pth = "/apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status"

    class get:
        """read status of the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta1'], 'operationId': 'readAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta1'], 'operationId': 'replaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta1'], 'operationId': 'patchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__autoscaling__v2beta1__watch__horizontalpodautoscalers:
    pth = "/apis/autoscaling/v2beta1/watch/horizontalpodautoscalers"

    class get:
        """watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta1'], 'operationId': 'watchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__autoscaling__v2beta1__watch__namespaces___namespace___horizontalpodautoscalers:
    pth = "/apis/autoscaling/v2beta1/watch/namespaces/{namespace}/horizontalpodautoscalers"

    class get:
        """watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta1'], 'operationId': 'watchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__autoscaling__v2beta1__watch__namespaces___namespace___horizontalpodautoscalers___name_:
    pth = "/apis/autoscaling/v2beta1/watch/namespaces/{namespace}/horizontalpodautoscalers/{name}"

    class get:
        """watch changes to an object of kind HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta1'], 'operationId': 'watchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__autoscaling__v2beta2__:
    pth = "/apis/autoscaling/v2beta2/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta2'], 'operationId': 'getAutoscalingV2beta2APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__autoscaling__v2beta2__horizontalpodautoscalers:
    pth = "/apis/autoscaling/v2beta2/horizontalpodautoscalers"

    class get:
        """list or watch objects of kind HorizontalPodAutoscaler """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta2'], 'operationId': 'listAutoscalingV2beta2HorizontalPodAutoscalerForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta2'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__autoscaling__v2beta2__namespaces___namespace___horizontalpodautoscalers:
    pth = "/apis/autoscaling/v2beta2/namespaces/{namespace}/horizontalpodautoscalers"

    class get:
        """list or watch objects of kind HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta2'], 'operationId': 'listAutoscalingV2beta2NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta2'], 'operationId': 'createAutoscalingV2beta2NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta2'], 'operationId': 'deleteAutoscalingV2beta2CollectionNamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__autoscaling__v2beta2__namespaces___namespace___horizontalpodautoscalers___name_:
    pth = "/apis/autoscaling/v2beta2/namespaces/{namespace}/horizontalpodautoscalers/{name}"

    class get:
        """read the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta2'], 'operationId': 'readAutoscalingV2beta2NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta2'], 'operationId': 'replaceAutoscalingV2beta2NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta2'], 'operationId': 'deleteAutoscalingV2beta2NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta2'], 'operationId': 'patchAutoscalingV2beta2NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__autoscaling__v2beta2__namespaces___namespace___horizontalpodautoscalers___name___status:
    pth = "/apis/autoscaling/v2beta2/namespaces/{namespace}/horizontalpodautoscalers/{name}/status"

    class get:
        """read status of the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta2'], 'operationId': 'readAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta2'], 'operationId': 'replaceAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified HorizontalPodAutoscaler """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta2'], 'operationId': 'patchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscaler}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__autoscaling__v2beta2__watch__horizontalpodautoscalers:
    pth = "/apis/autoscaling/v2beta2/watch/horizontalpodautoscalers"

    class get:
        """watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta2'], 'operationId': 'watchAutoscalingV2beta2HorizontalPodAutoscalerListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta2'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__autoscaling__v2beta2__watch__namespaces___namespace___horizontalpodautoscalers:
    pth = "/apis/autoscaling/v2beta2/watch/namespaces/{namespace}/horizontalpodautoscalers"

    class get:
        """watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta2'], 'operationId': 'watchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta2'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__autoscaling__v2beta2__watch__namespaces___namespace___horizontalpodautoscalers___name_:
    pth = "/apis/autoscaling/v2beta2/watch/namespaces/{namespace}/horizontalpodautoscalers/{name}"

    class get:
        """watch changes to an object of kind HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['autoscaling_v2beta2'], 'operationId': 'watchAutoscalingV2beta2NamespacedHorizontalPodAutoscaler', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'autoscaling', 'kind': 'HorizontalPodAutoscaler', 'version': 'v2beta2'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the HorizontalPodAutoscaler'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__batch__:
    pth = "/apis/batch/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch'], 'operationId': 'getBatchAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__batch__v1__:
    pth = "/apis/batch/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'getBatchV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__batch__v1__cronjobs:
    pth = "/apis/batch/v1/cronjobs"

    class get:
        """list or watch objects of kind CronJob """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'listBatchV1CronJobForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_CronJobList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__batch__v1__jobs:
    pth = "/apis/batch/v1/jobs"

    class get:
        """list or watch objects of kind Job """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'listBatchV1JobForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_JobList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'Job', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__batch__v1__namespaces___namespace___cronjobs:
    pth = "/apis/batch/v1/namespaces/{namespace}/cronjobs"

    class get:
        """list or watch objects of kind CronJob """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'listBatchV1NamespacedCronJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_CronJobList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a CronJob """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'createBatchV1NamespacedCronJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_CronJob}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_batch_v1_CronJob}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_batch_v1_CronJob}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_batch_v1_CronJob
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_batch_v1_CronJob
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of CronJob """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'deleteBatchV1CollectionNamespacedCronJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__batch__v1__namespaces___namespace___cronjobs___name_:
    pth = "/apis/batch/v1/namespaces/{namespace}/cronjobs/{name}"

    class get:
        """read the specified CronJob """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'readBatchV1NamespacedCronJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_CronJob}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CronJob'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified CronJob """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'replaceBatchV1NamespacedCronJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_CronJob}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_batch_v1_CronJob}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CronJob'}
            body = Defs.definitions_io_k8s_api_batch_v1_CronJob
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_batch_v1_CronJob
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a CronJob """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'deleteBatchV1NamespacedCronJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CronJob'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified CronJob """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'patchBatchV1NamespacedCronJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_CronJob}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_batch_v1_CronJob}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CronJob'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__batch__v1__namespaces___namespace___cronjobs___name___status:
    pth = "/apis/batch/v1/namespaces/{namespace}/cronjobs/{name}/status"

    class get:
        """read status of the specified CronJob """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'readBatchV1NamespacedCronJobStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_CronJob}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CronJob'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified CronJob """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'replaceBatchV1NamespacedCronJobStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_CronJob}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_batch_v1_CronJob}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CronJob'}
            body = Defs.definitions_io_k8s_api_batch_v1_CronJob
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_batch_v1_CronJob
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified CronJob """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'patchBatchV1NamespacedCronJobStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_CronJob}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_batch_v1_CronJob}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CronJob'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__batch__v1__namespaces___namespace___jobs:
    pth = "/apis/batch/v1/namespaces/{namespace}/jobs"

    class get:
        """list or watch objects of kind Job """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'listBatchV1NamespacedJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_JobList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'Job', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a Job """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'createBatchV1NamespacedJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_Job}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_batch_v1_Job}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_batch_v1_Job}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'Job', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_batch_v1_Job
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_batch_v1_Job
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of Job """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'deleteBatchV1CollectionNamespacedJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'Job', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__batch__v1__namespaces___namespace___jobs___name_:
    pth = "/apis/batch/v1/namespaces/{namespace}/jobs/{name}"

    class get:
        """read the specified Job """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'readBatchV1NamespacedJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_Job}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'Job', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Job'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified Job """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'replaceBatchV1NamespacedJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_Job}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_batch_v1_Job}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'Job', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Job'}
            body = Defs.definitions_io_k8s_api_batch_v1_Job
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_batch_v1_Job
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a Job """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'deleteBatchV1NamespacedJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'Job', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Job'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified Job """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'patchBatchV1NamespacedJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_Job}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_batch_v1_Job}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'Job', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Job'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__batch__v1__namespaces___namespace___jobs___name___status:
    pth = "/apis/batch/v1/namespaces/{namespace}/jobs/{name}/status"

    class get:
        """read status of the specified Job """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'readBatchV1NamespacedJobStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_Job}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'Job', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Job'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified Job """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'replaceBatchV1NamespacedJobStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_Job}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_batch_v1_Job}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'Job', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Job'}
            body = Defs.definitions_io_k8s_api_batch_v1_Job
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_batch_v1_Job
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified Job """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'patchBatchV1NamespacedJobStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1_Job}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_batch_v1_Job}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'Job', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Job'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__batch__v1__watch__cronjobs:
    pth = "/apis/batch/v1/watch/cronjobs"

    class get:
        """watch individual changes to a list of CronJob. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'watchBatchV1CronJobListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__batch__v1__watch__jobs:
    pth = "/apis/batch/v1/watch/jobs"

    class get:
        """watch individual changes to a list of Job. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'watchBatchV1JobListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'Job', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__batch__v1__watch__namespaces___namespace___cronjobs:
    pth = "/apis/batch/v1/watch/namespaces/{namespace}/cronjobs"

    class get:
        """watch individual changes to a list of CronJob. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'watchBatchV1NamespacedCronJobList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__batch__v1__watch__namespaces___namespace___cronjobs___name_:
    pth = "/apis/batch/v1/watch/namespaces/{namespace}/cronjobs/{name}"

    class get:
        """watch changes to an object of kind CronJob. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'watchBatchV1NamespacedCronJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CronJob'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__batch__v1__watch__namespaces___namespace___jobs:
    pth = "/apis/batch/v1/watch/namespaces/{namespace}/jobs"

    class get:
        """watch individual changes to a list of Job. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'watchBatchV1NamespacedJobList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'Job', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__batch__v1__watch__namespaces___namespace___jobs___name_:
    pth = "/apis/batch/v1/watch/namespaces/{namespace}/jobs/{name}"

    class get:
        """watch changes to an object of kind Job. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['batch_v1'], 'operationId': 'watchBatchV1NamespacedJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'Job', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Job'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__batch__v1beta1__:
    pth = "/apis/batch/v1beta1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1beta1'], 'operationId': 'getBatchV1beta1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__batch__v1beta1__cronjobs:
    pth = "/apis/batch/v1beta1/cronjobs"

    class get:
        """list or watch objects of kind CronJob """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['batch_v1beta1'], 'operationId': 'listBatchV1beta1CronJobForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1beta1_CronJobList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__batch__v1beta1__namespaces___namespace___cronjobs:
    pth = "/apis/batch/v1beta1/namespaces/{namespace}/cronjobs"

    class get:
        """list or watch objects of kind CronJob """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['batch_v1beta1'], 'operationId': 'listBatchV1beta1NamespacedCronJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1beta1_CronJobList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a CronJob """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1beta1'], 'operationId': 'createBatchV1beta1NamespacedCronJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1beta1_CronJob}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_batch_v1beta1_CronJob}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_batch_v1beta1_CronJob}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_batch_v1beta1_CronJob
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_batch_v1beta1_CronJob
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of CronJob """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1beta1'], 'operationId': 'deleteBatchV1beta1CollectionNamespacedCronJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__batch__v1beta1__namespaces___namespace___cronjobs___name_:
    pth = "/apis/batch/v1beta1/namespaces/{namespace}/cronjobs/{name}"

    class get:
        """read the specified CronJob """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1beta1'], 'operationId': 'readBatchV1beta1NamespacedCronJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1beta1_CronJob}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CronJob'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified CronJob """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1beta1'], 'operationId': 'replaceBatchV1beta1NamespacedCronJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1beta1_CronJob}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_batch_v1beta1_CronJob}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CronJob'}
            body = Defs.definitions_io_k8s_api_batch_v1beta1_CronJob
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_batch_v1beta1_CronJob
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a CronJob """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1beta1'], 'operationId': 'deleteBatchV1beta1NamespacedCronJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CronJob'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified CronJob """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1beta1'], 'operationId': 'patchBatchV1beta1NamespacedCronJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1beta1_CronJob}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_batch_v1beta1_CronJob}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CronJob'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__batch__v1beta1__namespaces___namespace___cronjobs___name___status:
    pth = "/apis/batch/v1beta1/namespaces/{namespace}/cronjobs/{name}/status"

    class get:
        """read status of the specified CronJob """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1beta1'], 'operationId': 'readBatchV1beta1NamespacedCronJobStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1beta1_CronJob}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CronJob'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified CronJob """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1beta1'], 'operationId': 'replaceBatchV1beta1NamespacedCronJobStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1beta1_CronJob}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_batch_v1beta1_CronJob}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CronJob'}
            body = Defs.definitions_io_k8s_api_batch_v1beta1_CronJob
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_batch_v1beta1_CronJob
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified CronJob """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['batch_v1beta1'], 'operationId': 'patchBatchV1beta1NamespacedCronJobStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_batch_v1beta1_CronJob}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_batch_v1beta1_CronJob}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CronJob'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__batch__v1beta1__watch__cronjobs:
    pth = "/apis/batch/v1beta1/watch/cronjobs"

    class get:
        """watch individual changes to a list of CronJob. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['batch_v1beta1'], 'operationId': 'watchBatchV1beta1CronJobListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__batch__v1beta1__watch__namespaces___namespace___cronjobs:
    pth = "/apis/batch/v1beta1/watch/namespaces/{namespace}/cronjobs"

    class get:
        """watch individual changes to a list of CronJob. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['batch_v1beta1'], 'operationId': 'watchBatchV1beta1NamespacedCronJobList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__batch__v1beta1__watch__namespaces___namespace___cronjobs___name_:
    pth = "/apis/batch/v1beta1/watch/namespaces/{namespace}/cronjobs/{name}"

    class get:
        """watch changes to an object of kind CronJob. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['batch_v1beta1'], 'operationId': 'watchBatchV1beta1NamespacedCronJob', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'batch', 'kind': 'CronJob', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CronJob'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__certificates_k8s_io__:
    pth = "/apis/certificates.k8s.io/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['certificates'], 'operationId': 'getCertificatesAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__certificates_k8s_io__v1__:
    pth = "/apis/certificates.k8s.io/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['certificates_v1'], 'operationId': 'getCertificatesV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__certificates_k8s_io__v1__certificatesigningrequests:
    pth = "/apis/certificates.k8s.io/v1/certificatesigningrequests"

    class get:
        """list or watch objects of kind CertificateSigningRequest """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['certificates_v1'], 'operationId': 'listCertificatesV1CertificateSigningRequest', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequestList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequest', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a CertificateSigningRequest """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['certificates_v1'], 'operationId': 'createCertificatesV1CertificateSigningRequest', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequest', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of CertificateSigningRequest """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['certificates_v1'], 'operationId': 'deleteCertificatesV1CollectionCertificateSigningRequest', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequest', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__certificates_k8s_io__v1__certificatesigningrequests___name_:
    pth = "/apis/certificates.k8s.io/v1/certificatesigningrequests/{name}"

    class get:
        """read the specified CertificateSigningRequest """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['certificates_v1'], 'operationId': 'readCertificatesV1CertificateSigningRequest', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequest', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CertificateSigningRequest'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified CertificateSigningRequest """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['certificates_v1'], 'operationId': 'replaceCertificatesV1CertificateSigningRequest', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequest', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CertificateSigningRequest'}
            body = Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a CertificateSigningRequest """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['certificates_v1'], 'operationId': 'deleteCertificatesV1CertificateSigningRequest', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequest', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CertificateSigningRequest'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified CertificateSigningRequest """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['certificates_v1'], 'operationId': 'patchCertificatesV1CertificateSigningRequest', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequest', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CertificateSigningRequest'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__certificates_k8s_io__v1__certificatesigningrequests___name___approval:
    pth = "/apis/certificates.k8s.io/v1/certificatesigningrequests/{name}/approval"

    class get:
        """read approval of the specified CertificateSigningRequest """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['certificates_v1'], 'operationId': 'readCertificatesV1CertificateSigningRequestApproval', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequest', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CertificateSigningRequest'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace approval of the specified CertificateSigningRequest """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['certificates_v1'], 'operationId': 'replaceCertificatesV1CertificateSigningRequestApproval', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequest', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CertificateSigningRequest'}
            body = Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update approval of the specified CertificateSigningRequest """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['certificates_v1'], 'operationId': 'patchCertificatesV1CertificateSigningRequestApproval', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequest', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CertificateSigningRequest'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__certificates_k8s_io__v1__certificatesigningrequests___name___status:
    pth = "/apis/certificates.k8s.io/v1/certificatesigningrequests/{name}/status"

    class get:
        """read status of the specified CertificateSigningRequest """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['certificates_v1'], 'operationId': 'readCertificatesV1CertificateSigningRequestStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequest', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CertificateSigningRequest'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace status of the specified CertificateSigningRequest """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['certificates_v1'], 'operationId': 'replaceCertificatesV1CertificateSigningRequestStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequest', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CertificateSigningRequest'}
            body = Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified CertificateSigningRequest """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['certificates_v1'], 'operationId': 'patchCertificatesV1CertificateSigningRequestStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_certificates_v1_CertificateSigningRequest}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequest', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CertificateSigningRequest'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__certificates_k8s_io__v1__watch__certificatesigningrequests:
    pth = "/apis/certificates.k8s.io/v1/watch/certificatesigningrequests"

    class get:
        """watch individual changes to a list of CertificateSigningRequest. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['certificates_v1'], 'operationId': 'watchCertificatesV1CertificateSigningRequestList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequest', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__certificates_k8s_io__v1__watch__certificatesigningrequests___name_:
    pth = "/apis/certificates.k8s.io/v1/watch/certificatesigningrequests/{name}"

    class get:
        """watch changes to an object of kind CertificateSigningRequest. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['certificates_v1'], 'operationId': 'watchCertificatesV1CertificateSigningRequest', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'certificates.k8s.io', 'kind': 'CertificateSigningRequest', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CertificateSigningRequest'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__coordination_k8s_io__:
    pth = "/apis/coordination.k8s.io/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['coordination'], 'operationId': 'getCoordinationAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__coordination_k8s_io__v1__:
    pth = "/apis/coordination.k8s.io/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['coordination_v1'], 'operationId': 'getCoordinationV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__coordination_k8s_io__v1__leases:
    pth = "/apis/coordination.k8s.io/v1/leases"

    class get:
        """list or watch objects of kind Lease """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['coordination_v1'], 'operationId': 'listCoordinationV1LeaseForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_coordination_v1_LeaseList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'coordination.k8s.io', 'kind': 'Lease', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__coordination_k8s_io__v1__namespaces___namespace___leases:
    pth = "/apis/coordination.k8s.io/v1/namespaces/{namespace}/leases"

    class get:
        """list or watch objects of kind Lease """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['coordination_v1'], 'operationId': 'listCoordinationV1NamespacedLease', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_coordination_v1_LeaseList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'coordination.k8s.io', 'kind': 'Lease', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a Lease """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['coordination_v1'], 'operationId': 'createCoordinationV1NamespacedLease', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_coordination_v1_Lease}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_coordination_v1_Lease}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_coordination_v1_Lease}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'coordination.k8s.io', 'kind': 'Lease', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_coordination_v1_Lease
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_coordination_v1_Lease
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of Lease """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['coordination_v1'], 'operationId': 'deleteCoordinationV1CollectionNamespacedLease', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'coordination.k8s.io', 'kind': 'Lease', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__coordination_k8s_io__v1__namespaces___namespace___leases___name_:
    pth = "/apis/coordination.k8s.io/v1/namespaces/{namespace}/leases/{name}"

    class get:
        """read the specified Lease """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['coordination_v1'], 'operationId': 'readCoordinationV1NamespacedLease', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_coordination_v1_Lease}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'coordination.k8s.io', 'kind': 'Lease', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Lease'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified Lease """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['coordination_v1'], 'operationId': 'replaceCoordinationV1NamespacedLease', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_coordination_v1_Lease}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_coordination_v1_Lease}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'coordination.k8s.io', 'kind': 'Lease', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Lease'}
            body = Defs.definitions_io_k8s_api_coordination_v1_Lease
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_coordination_v1_Lease
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a Lease """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['coordination_v1'], 'operationId': 'deleteCoordinationV1NamespacedLease', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'coordination.k8s.io', 'kind': 'Lease', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Lease'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified Lease """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['coordination_v1'], 'operationId': 'patchCoordinationV1NamespacedLease', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_coordination_v1_Lease}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_coordination_v1_Lease}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'coordination.k8s.io', 'kind': 'Lease', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Lease'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__coordination_k8s_io__v1__watch__leases:
    pth = "/apis/coordination.k8s.io/v1/watch/leases"

    class get:
        """watch individual changes to a list of Lease. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['coordination_v1'], 'operationId': 'watchCoordinationV1LeaseListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'coordination.k8s.io', 'kind': 'Lease', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__coordination_k8s_io__v1__watch__namespaces___namespace___leases:
    pth = "/apis/coordination.k8s.io/v1/watch/namespaces/{namespace}/leases"

    class get:
        """watch individual changes to a list of Lease. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['coordination_v1'], 'operationId': 'watchCoordinationV1NamespacedLeaseList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'coordination.k8s.io', 'kind': 'Lease', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__coordination_k8s_io__v1__watch__namespaces___namespace___leases___name_:
    pth = "/apis/coordination.k8s.io/v1/watch/namespaces/{namespace}/leases/{name}"

    class get:
        """watch changes to an object of kind Lease. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['coordination_v1'], 'operationId': 'watchCoordinationV1NamespacedLease', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'coordination.k8s.io', 'kind': 'Lease', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Lease'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__discovery_k8s_io__:
    pth = "/apis/discovery.k8s.io/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['discovery'], 'operationId': 'getDiscoveryAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__discovery_k8s_io__v1__:
    pth = "/apis/discovery.k8s.io/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['discovery_v1'], 'operationId': 'getDiscoveryV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__discovery_k8s_io__v1__endpointslices:
    pth = "/apis/discovery.k8s.io/v1/endpointslices"

    class get:
        """list or watch objects of kind EndpointSlice """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['discovery_v1'], 'operationId': 'listDiscoveryV1EndpointSliceForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_discovery_v1_EndpointSliceList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__discovery_k8s_io__v1__namespaces___namespace___endpointslices:
    pth = "/apis/discovery.k8s.io/v1/namespaces/{namespace}/endpointslices"

    class get:
        """list or watch objects of kind EndpointSlice """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['discovery_v1'], 'operationId': 'listDiscoveryV1NamespacedEndpointSlice', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_discovery_v1_EndpointSliceList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create an EndpointSlice """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['discovery_v1'], 'operationId': 'createDiscoveryV1NamespacedEndpointSlice', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_discovery_v1_EndpointSlice}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_discovery_v1_EndpointSlice}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_discovery_v1_EndpointSlice}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_discovery_v1_EndpointSlice
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_discovery_v1_EndpointSlice
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of EndpointSlice """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['discovery_v1'], 'operationId': 'deleteDiscoveryV1CollectionNamespacedEndpointSlice', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__discovery_k8s_io__v1__namespaces___namespace___endpointslices___name_:
    pth = "/apis/discovery.k8s.io/v1/namespaces/{namespace}/endpointslices/{name}"

    class get:
        """read the specified EndpointSlice """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['discovery_v1'], 'operationId': 'readDiscoveryV1NamespacedEndpointSlice', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_discovery_v1_EndpointSlice}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the EndpointSlice'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified EndpointSlice """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['discovery_v1'], 'operationId': 'replaceDiscoveryV1NamespacedEndpointSlice', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_discovery_v1_EndpointSlice}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_discovery_v1_EndpointSlice}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the EndpointSlice'}
            body = Defs.definitions_io_k8s_api_discovery_v1_EndpointSlice
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_discovery_v1_EndpointSlice
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete an EndpointSlice """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['discovery_v1'], 'operationId': 'deleteDiscoveryV1NamespacedEndpointSlice', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the EndpointSlice'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified EndpointSlice """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['discovery_v1'], 'operationId': 'patchDiscoveryV1NamespacedEndpointSlice', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_discovery_v1_EndpointSlice}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_discovery_v1_EndpointSlice}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the EndpointSlice'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__discovery_k8s_io__v1__watch__endpointslices:
    pth = "/apis/discovery.k8s.io/v1/watch/endpointslices"

    class get:
        """watch individual changes to a list of EndpointSlice. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['discovery_v1'], 'operationId': 'watchDiscoveryV1EndpointSliceListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__discovery_k8s_io__v1__watch__namespaces___namespace___endpointslices:
    pth = "/apis/discovery.k8s.io/v1/watch/namespaces/{namespace}/endpointslices"

    class get:
        """watch individual changes to a list of EndpointSlice. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['discovery_v1'], 'operationId': 'watchDiscoveryV1NamespacedEndpointSliceList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__discovery_k8s_io__v1__watch__namespaces___namespace___endpointslices___name_:
    pth = "/apis/discovery.k8s.io/v1/watch/namespaces/{namespace}/endpointslices/{name}"

    class get:
        """watch changes to an object of kind EndpointSlice. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['discovery_v1'], 'operationId': 'watchDiscoveryV1NamespacedEndpointSlice', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the EndpointSlice'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__discovery_k8s_io__v1beta1__:
    pth = "/apis/discovery.k8s.io/v1beta1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['discovery_v1beta1'], 'operationId': 'getDiscoveryV1beta1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__discovery_k8s_io__v1beta1__endpointslices:
    pth = "/apis/discovery.k8s.io/v1beta1/endpointslices"

    class get:
        """list or watch objects of kind EndpointSlice """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['discovery_v1beta1'], 'operationId': 'listDiscoveryV1beta1EndpointSliceForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointSliceList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__discovery_k8s_io__v1beta1__namespaces___namespace___endpointslices:
    pth = "/apis/discovery.k8s.io/v1beta1/namespaces/{namespace}/endpointslices"

    class get:
        """list or watch objects of kind EndpointSlice """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['discovery_v1beta1'], 'operationId': 'listDiscoveryV1beta1NamespacedEndpointSlice', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointSliceList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create an EndpointSlice """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['discovery_v1beta1'], 'operationId': 'createDiscoveryV1beta1NamespacedEndpointSlice', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointSlice}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointSlice}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointSlice}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointSlice
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointSlice
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of EndpointSlice """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['discovery_v1beta1'], 'operationId': 'deleteDiscoveryV1beta1CollectionNamespacedEndpointSlice', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__discovery_k8s_io__v1beta1__namespaces___namespace___endpointslices___name_:
    pth = "/apis/discovery.k8s.io/v1beta1/namespaces/{namespace}/endpointslices/{name}"

    class get:
        """read the specified EndpointSlice """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['discovery_v1beta1'], 'operationId': 'readDiscoveryV1beta1NamespacedEndpointSlice', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointSlice}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the EndpointSlice'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified EndpointSlice """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['discovery_v1beta1'], 'operationId': 'replaceDiscoveryV1beta1NamespacedEndpointSlice', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointSlice}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointSlice}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the EndpointSlice'}
            body = Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointSlice
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointSlice
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete an EndpointSlice """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['discovery_v1beta1'], 'operationId': 'deleteDiscoveryV1beta1NamespacedEndpointSlice', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the EndpointSlice'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified EndpointSlice """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['discovery_v1beta1'], 'operationId': 'patchDiscoveryV1beta1NamespacedEndpointSlice', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointSlice}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_discovery_v1beta1_EndpointSlice}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the EndpointSlice'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__discovery_k8s_io__v1beta1__watch__endpointslices:
    pth = "/apis/discovery.k8s.io/v1beta1/watch/endpointslices"

    class get:
        """watch individual changes to a list of EndpointSlice. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['discovery_v1beta1'], 'operationId': 'watchDiscoveryV1beta1EndpointSliceListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__discovery_k8s_io__v1beta1__watch__namespaces___namespace___endpointslices:
    pth = "/apis/discovery.k8s.io/v1beta1/watch/namespaces/{namespace}/endpointslices"

    class get:
        """watch individual changes to a list of EndpointSlice. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['discovery_v1beta1'], 'operationId': 'watchDiscoveryV1beta1NamespacedEndpointSliceList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__discovery_k8s_io__v1beta1__watch__namespaces___namespace___endpointslices___name_:
    pth = "/apis/discovery.k8s.io/v1beta1/watch/namespaces/{namespace}/endpointslices/{name}"

    class get:
        """watch changes to an object of kind EndpointSlice. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['discovery_v1beta1'], 'operationId': 'watchDiscoveryV1beta1NamespacedEndpointSlice', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'discovery.k8s.io', 'kind': 'EndpointSlice', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the EndpointSlice'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__events_k8s_io__:
    pth = "/apis/events.k8s.io/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['events'], 'operationId': 'getEventsAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__events_k8s_io__v1__:
    pth = "/apis/events.k8s.io/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['events_v1'], 'operationId': 'getEventsV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__events_k8s_io__v1__events:
    pth = "/apis/events.k8s.io/v1/events"

    class get:
        """list or watch objects of kind Event """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['events_v1'], 'operationId': 'listEventsV1EventForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_events_v1_EventList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__events_k8s_io__v1__namespaces___namespace___events:
    pth = "/apis/events.k8s.io/v1/namespaces/{namespace}/events"

    class get:
        """list or watch objects of kind Event """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['events_v1'], 'operationId': 'listEventsV1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_events_v1_EventList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create an Event """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['events_v1'], 'operationId': 'createEventsV1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_events_v1_Event}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_events_v1_Event}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_events_v1_Event}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_events_v1_Event
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_events_v1_Event
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of Event """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['events_v1'], 'operationId': 'deleteEventsV1CollectionNamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__events_k8s_io__v1__namespaces___namespace___events___name_:
    pth = "/apis/events.k8s.io/v1/namespaces/{namespace}/events/{name}"

    class get:
        """read the specified Event """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['events_v1'], 'operationId': 'readEventsV1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_events_v1_Event}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Event'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified Event """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['events_v1'], 'operationId': 'replaceEventsV1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_events_v1_Event}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_events_v1_Event}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Event'}
            body = Defs.definitions_io_k8s_api_events_v1_Event
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_events_v1_Event
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete an Event """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['events_v1'], 'operationId': 'deleteEventsV1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Event'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified Event """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['events_v1'], 'operationId': 'patchEventsV1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_events_v1_Event}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_events_v1_Event}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Event'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__events_k8s_io__v1__watch__events:
    pth = "/apis/events.k8s.io/v1/watch/events"

    class get:
        """watch individual changes to a list of Event. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['events_v1'], 'operationId': 'watchEventsV1EventListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__events_k8s_io__v1__watch__namespaces___namespace___events:
    pth = "/apis/events.k8s.io/v1/watch/namespaces/{namespace}/events"

    class get:
        """watch individual changes to a list of Event. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['events_v1'], 'operationId': 'watchEventsV1NamespacedEventList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__events_k8s_io__v1__watch__namespaces___namespace___events___name_:
    pth = "/apis/events.k8s.io/v1/watch/namespaces/{namespace}/events/{name}"

    class get:
        """watch changes to an object of kind Event. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['events_v1'], 'operationId': 'watchEventsV1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Event'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__events_k8s_io__v1beta1__:
    pth = "/apis/events.k8s.io/v1beta1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['events_v1beta1'], 'operationId': 'getEventsV1beta1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__events_k8s_io__v1beta1__events:
    pth = "/apis/events.k8s.io/v1beta1/events"

    class get:
        """list or watch objects of kind Event """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['events_v1beta1'], 'operationId': 'listEventsV1beta1EventForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_events_v1beta1_EventList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__events_k8s_io__v1beta1__namespaces___namespace___events:
    pth = "/apis/events.k8s.io/v1beta1/namespaces/{namespace}/events"

    class get:
        """list or watch objects of kind Event """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['events_v1beta1'], 'operationId': 'listEventsV1beta1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_events_v1beta1_EventList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create an Event """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['events_v1beta1'], 'operationId': 'createEventsV1beta1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_events_v1beta1_Event}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_events_v1beta1_Event}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_events_v1beta1_Event}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_events_v1beta1_Event
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_events_v1beta1_Event
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of Event """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['events_v1beta1'], 'operationId': 'deleteEventsV1beta1CollectionNamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__events_k8s_io__v1beta1__namespaces___namespace___events___name_:
    pth = "/apis/events.k8s.io/v1beta1/namespaces/{namespace}/events/{name}"

    class get:
        """read the specified Event """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['events_v1beta1'], 'operationId': 'readEventsV1beta1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_events_v1beta1_Event}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Event'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified Event """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['events_v1beta1'], 'operationId': 'replaceEventsV1beta1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_events_v1beta1_Event}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_events_v1beta1_Event}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Event'}
            body = Defs.definitions_io_k8s_api_events_v1beta1_Event
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_events_v1beta1_Event
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete an Event """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['events_v1beta1'], 'operationId': 'deleteEventsV1beta1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Event'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified Event """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['events_v1beta1'], 'operationId': 'patchEventsV1beta1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_events_v1beta1_Event}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_events_v1beta1_Event}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Event'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__events_k8s_io__v1beta1__watch__events:
    pth = "/apis/events.k8s.io/v1beta1/watch/events"

    class get:
        """watch individual changes to a list of Event. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['events_v1beta1'], 'operationId': 'watchEventsV1beta1EventListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__events_k8s_io__v1beta1__watch__namespaces___namespace___events:
    pth = "/apis/events.k8s.io/v1beta1/watch/namespaces/{namespace}/events"

    class get:
        """watch individual changes to a list of Event. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['events_v1beta1'], 'operationId': 'watchEventsV1beta1NamespacedEventList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__events_k8s_io__v1beta1__watch__namespaces___namespace___events___name_:
    pth = "/apis/events.k8s.io/v1beta1/watch/namespaces/{namespace}/events/{name}"

    class get:
        """watch changes to an object of kind Event. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['events_v1beta1'], 'operationId': 'watchEventsV1beta1NamespacedEvent', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'events.k8s.io', 'kind': 'Event', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Event'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__flowcontrol_apiserver_k8s_io__:
    pth = "/apis/flowcontrol.apiserver.k8s.io/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver'], 'operationId': 'getFlowcontrolApiserverAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__flowcontrol_apiserver_k8s_io__v1beta1__:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'getFlowcontrolApiserverV1beta1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__flowcontrol_apiserver_k8s_io__v1beta1__flowschemas:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta1/flowschemas"

    class get:
        """list or watch objects of kind FlowSchema """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'listFlowcontrolApiserverV1beta1FlowSchema', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchemaList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a FlowSchema """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'createFlowcontrolApiserverV1beta1FlowSchema', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of FlowSchema """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'deleteFlowcontrolApiserverV1beta1CollectionFlowSchema', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__flowcontrol_apiserver_k8s_io__v1beta1__flowschemas___name_:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta1/flowschemas/{name}"

    class get:
        """read the specified FlowSchema """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'readFlowcontrolApiserverV1beta1FlowSchema', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the FlowSchema'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified FlowSchema """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'replaceFlowcontrolApiserverV1beta1FlowSchema', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the FlowSchema'}
            body = Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a FlowSchema """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'deleteFlowcontrolApiserverV1beta1FlowSchema', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the FlowSchema'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified FlowSchema """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'patchFlowcontrolApiserverV1beta1FlowSchema', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the FlowSchema'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__flowcontrol_apiserver_k8s_io__v1beta1__flowschemas___name___status:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta1/flowschemas/{name}/status"

    class get:
        """read status of the specified FlowSchema """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'readFlowcontrolApiserverV1beta1FlowSchemaStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the FlowSchema'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace status of the specified FlowSchema """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'replaceFlowcontrolApiserverV1beta1FlowSchemaStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the FlowSchema'}
            body = Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified FlowSchema """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'patchFlowcontrolApiserverV1beta1FlowSchemaStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_FlowSchema}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the FlowSchema'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__flowcontrol_apiserver_k8s_io__v1beta1__prioritylevelconfigurations:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta1/prioritylevelconfigurations"

    class get:
        """list or watch objects of kind PriorityLevelConfiguration """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'listFlowcontrolApiserverV1beta1PriorityLevelConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfigurationList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a PriorityLevelConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'createFlowcontrolApiserverV1beta1PriorityLevelConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of PriorityLevelConfiguration """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'deleteFlowcontrolApiserverV1beta1CollectionPriorityLevelConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__flowcontrol_apiserver_k8s_io__v1beta1__prioritylevelconfigurations___name_:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta1/prioritylevelconfigurations/{name}"

    class get:
        """read the specified PriorityLevelConfiguration """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'readFlowcontrolApiserverV1beta1PriorityLevelConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityLevelConfiguration'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified PriorityLevelConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'replaceFlowcontrolApiserverV1beta1PriorityLevelConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityLevelConfiguration'}
            body = Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a PriorityLevelConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'deleteFlowcontrolApiserverV1beta1PriorityLevelConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityLevelConfiguration'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified PriorityLevelConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'patchFlowcontrolApiserverV1beta1PriorityLevelConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityLevelConfiguration'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__flowcontrol_apiserver_k8s_io__v1beta1__prioritylevelconfigurations___name___status:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta1/prioritylevelconfigurations/{name}/status"

    class get:
        """read status of the specified PriorityLevelConfiguration """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'readFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityLevelConfiguration'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace status of the specified PriorityLevelConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'replaceFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityLevelConfiguration'}
            body = Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified PriorityLevelConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'patchFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta1_PriorityLevelConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityLevelConfiguration'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__flowcontrol_apiserver_k8s_io__v1beta1__watch__flowschemas:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta1/watch/flowschemas"

    class get:
        """watch individual changes to a list of FlowSchema. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'watchFlowcontrolApiserverV1beta1FlowSchemaList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__flowcontrol_apiserver_k8s_io__v1beta1__watch__flowschemas___name_:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta1/watch/flowschemas/{name}"

    class get:
        """watch changes to an object of kind FlowSchema. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'watchFlowcontrolApiserverV1beta1FlowSchema', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the FlowSchema'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__flowcontrol_apiserver_k8s_io__v1beta1__watch__prioritylevelconfigurations:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta1/watch/prioritylevelconfigurations"

    class get:
        """watch individual changes to a list of PriorityLevelConfiguration. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'watchFlowcontrolApiserverV1beta1PriorityLevelConfigurationList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__flowcontrol_apiserver_k8s_io__v1beta1__watch__prioritylevelconfigurations___name_:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta1/watch/prioritylevelconfigurations/{name}"

    class get:
        """watch changes to an object of kind PriorityLevelConfiguration. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta1'], 'operationId': 'watchFlowcontrolApiserverV1beta1PriorityLevelConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityLevelConfiguration'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__flowcontrol_apiserver_k8s_io__v1beta2__:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta2/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'getFlowcontrolApiserverV1beta2APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__flowcontrol_apiserver_k8s_io__v1beta2__flowschemas:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta2/flowschemas"

    class get:
        """list or watch objects of kind FlowSchema """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'listFlowcontrolApiserverV1beta2FlowSchema', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchemaList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a FlowSchema """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'createFlowcontrolApiserverV1beta2FlowSchema', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of FlowSchema """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'deleteFlowcontrolApiserverV1beta2CollectionFlowSchema', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__flowcontrol_apiserver_k8s_io__v1beta2__flowschemas___name_:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta2/flowschemas/{name}"

    class get:
        """read the specified FlowSchema """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'readFlowcontrolApiserverV1beta2FlowSchema', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the FlowSchema'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified FlowSchema """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'replaceFlowcontrolApiserverV1beta2FlowSchema', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the FlowSchema'}
            body = Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a FlowSchema """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'deleteFlowcontrolApiserverV1beta2FlowSchema', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the FlowSchema'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified FlowSchema """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'patchFlowcontrolApiserverV1beta2FlowSchema', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the FlowSchema'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__flowcontrol_apiserver_k8s_io__v1beta2__flowschemas___name___status:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta2/flowschemas/{name}/status"

    class get:
        """read status of the specified FlowSchema """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'readFlowcontrolApiserverV1beta2FlowSchemaStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the FlowSchema'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace status of the specified FlowSchema """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'replaceFlowcontrolApiserverV1beta2FlowSchemaStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the FlowSchema'}
            body = Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified FlowSchema """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'patchFlowcontrolApiserverV1beta2FlowSchemaStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_FlowSchema}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the FlowSchema'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__flowcontrol_apiserver_k8s_io__v1beta2__prioritylevelconfigurations:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta2/prioritylevelconfigurations"

    class get:
        """list or watch objects of kind PriorityLevelConfiguration """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'listFlowcontrolApiserverV1beta2PriorityLevelConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfigurationList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a PriorityLevelConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'createFlowcontrolApiserverV1beta2PriorityLevelConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of PriorityLevelConfiguration """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'deleteFlowcontrolApiserverV1beta2CollectionPriorityLevelConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__flowcontrol_apiserver_k8s_io__v1beta2__prioritylevelconfigurations___name_:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta2/prioritylevelconfigurations/{name}"

    class get:
        """read the specified PriorityLevelConfiguration """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'readFlowcontrolApiserverV1beta2PriorityLevelConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityLevelConfiguration'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified PriorityLevelConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'replaceFlowcontrolApiserverV1beta2PriorityLevelConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityLevelConfiguration'}
            body = Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a PriorityLevelConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'deleteFlowcontrolApiserverV1beta2PriorityLevelConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityLevelConfiguration'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified PriorityLevelConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'patchFlowcontrolApiserverV1beta2PriorityLevelConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityLevelConfiguration'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__flowcontrol_apiserver_k8s_io__v1beta2__prioritylevelconfigurations___name___status:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta2/prioritylevelconfigurations/{name}/status"

    class get:
        """read status of the specified PriorityLevelConfiguration """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'readFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityLevelConfiguration'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace status of the specified PriorityLevelConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'replaceFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityLevelConfiguration'}
            body = Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified PriorityLevelConfiguration """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'patchFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_flowcontrol_v1beta2_PriorityLevelConfiguration}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta2'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityLevelConfiguration'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__flowcontrol_apiserver_k8s_io__v1beta2__watch__flowschemas:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta2/watch/flowschemas"

    class get:
        """watch individual changes to a list of FlowSchema. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'watchFlowcontrolApiserverV1beta2FlowSchemaList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta2'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__flowcontrol_apiserver_k8s_io__v1beta2__watch__flowschemas___name_:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta2/watch/flowschemas/{name}"

    class get:
        """watch changes to an object of kind FlowSchema. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'watchFlowcontrolApiserverV1beta2FlowSchema', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'FlowSchema', 'version': 'v1beta2'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the FlowSchema'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__flowcontrol_apiserver_k8s_io__v1beta2__watch__prioritylevelconfigurations:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta2/watch/prioritylevelconfigurations"

    class get:
        """watch individual changes to a list of PriorityLevelConfiguration. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'watchFlowcontrolApiserverV1beta2PriorityLevelConfigurationList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta2'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__flowcontrol_apiserver_k8s_io__v1beta2__watch__prioritylevelconfigurations___name_:
    pth = "/apis/flowcontrol.apiserver.k8s.io/v1beta2/watch/prioritylevelconfigurations/{name}"

    class get:
        """watch changes to an object of kind PriorityLevelConfiguration. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['flowcontrolApiserver_v1beta2'], 'operationId': 'watchFlowcontrolApiserverV1beta2PriorityLevelConfiguration', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'flowcontrol.apiserver.k8s.io', 'kind': 'PriorityLevelConfiguration', 'version': 'v1beta2'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityLevelConfiguration'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__networking_k8s_io__:
    pth = "/apis/networking.k8s.io/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking'], 'operationId': 'getNetworkingAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__networking_k8s_io__v1__:
    pth = "/apis/networking.k8s.io/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'getNetworkingV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__networking_k8s_io__v1__ingressclasses:
    pth = "/apis/networking.k8s.io/v1/ingressclasses"

    class get:
        """list or watch objects of kind IngressClass """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'listNetworkingV1IngressClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_IngressClassList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'IngressClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create an IngressClass """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'createNetworkingV1IngressClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_IngressClass}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_networking_v1_IngressClass}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_networking_v1_IngressClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'IngressClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_networking_v1_IngressClass
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_networking_v1_IngressClass
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of IngressClass """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'deleteNetworkingV1CollectionIngressClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'IngressClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__networking_k8s_io__v1__ingressclasses___name_:
    pth = "/apis/networking.k8s.io/v1/ingressclasses/{name}"

    class get:
        """read the specified IngressClass """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'readNetworkingV1IngressClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_IngressClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'IngressClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the IngressClass'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified IngressClass """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'replaceNetworkingV1IngressClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_IngressClass}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_networking_v1_IngressClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'IngressClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the IngressClass'}
            body = Defs.definitions_io_k8s_api_networking_v1_IngressClass
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_networking_v1_IngressClass
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete an IngressClass """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'deleteNetworkingV1IngressClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'IngressClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the IngressClass'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified IngressClass """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'patchNetworkingV1IngressClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_IngressClass}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_networking_v1_IngressClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'IngressClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the IngressClass'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__networking_k8s_io__v1__ingresses:
    pth = "/apis/networking.k8s.io/v1/ingresses"

    class get:
        """list or watch objects of kind Ingress """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'listNetworkingV1IngressForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_IngressList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'Ingress', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__networking_k8s_io__v1__namespaces___namespace___ingresses:
    pth = "/apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses"

    class get:
        """list or watch objects of kind Ingress """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'listNetworkingV1NamespacedIngress', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_IngressList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'Ingress', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create an Ingress """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'createNetworkingV1NamespacedIngress', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_Ingress}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_networking_v1_Ingress}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_networking_v1_Ingress}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'Ingress', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_networking_v1_Ingress
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_networking_v1_Ingress
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of Ingress """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'deleteNetworkingV1CollectionNamespacedIngress', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'Ingress', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__networking_k8s_io__v1__namespaces___namespace___ingresses___name_:
    pth = "/apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses/{name}"

    class get:
        """read the specified Ingress """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'readNetworkingV1NamespacedIngress', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_Ingress}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'Ingress', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Ingress'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified Ingress """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'replaceNetworkingV1NamespacedIngress', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_Ingress}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_networking_v1_Ingress}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'Ingress', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Ingress'}
            body = Defs.definitions_io_k8s_api_networking_v1_Ingress
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_networking_v1_Ingress
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete an Ingress """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'deleteNetworkingV1NamespacedIngress', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'Ingress', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Ingress'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified Ingress """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'patchNetworkingV1NamespacedIngress', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_Ingress}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_networking_v1_Ingress}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'Ingress', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Ingress'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__networking_k8s_io__v1__namespaces___namespace___ingresses___name___status:
    pth = "/apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses/{name}/status"

    class get:
        """read status of the specified Ingress """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'readNetworkingV1NamespacedIngressStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_Ingress}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'Ingress', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Ingress'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified Ingress """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'replaceNetworkingV1NamespacedIngressStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_Ingress}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_networking_v1_Ingress}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'Ingress', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Ingress'}
            body = Defs.definitions_io_k8s_api_networking_v1_Ingress
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_networking_v1_Ingress
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified Ingress """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'patchNetworkingV1NamespacedIngressStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_Ingress}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_networking_v1_Ingress}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'Ingress', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Ingress'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__networking_k8s_io__v1__namespaces___namespace___networkpolicies:
    pth = "/apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies"

    class get:
        """list or watch objects of kind NetworkPolicy """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'listNetworkingV1NamespacedNetworkPolicy', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_NetworkPolicyList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'NetworkPolicy', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a NetworkPolicy """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'createNetworkingV1NamespacedNetworkPolicy', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_NetworkPolicy}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_networking_v1_NetworkPolicy}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_networking_v1_NetworkPolicy}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'NetworkPolicy', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_networking_v1_NetworkPolicy
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_networking_v1_NetworkPolicy
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of NetworkPolicy """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'deleteNetworkingV1CollectionNamespacedNetworkPolicy', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'NetworkPolicy', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__networking_k8s_io__v1__namespaces___namespace___networkpolicies___name_:
    pth = "/apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies/{name}"

    class get:
        """read the specified NetworkPolicy """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'readNetworkingV1NamespacedNetworkPolicy', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_NetworkPolicy}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'NetworkPolicy', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NetworkPolicy'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified NetworkPolicy """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'replaceNetworkingV1NamespacedNetworkPolicy', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_NetworkPolicy}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_networking_v1_NetworkPolicy}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'NetworkPolicy', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NetworkPolicy'}
            body = Defs.definitions_io_k8s_api_networking_v1_NetworkPolicy
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_networking_v1_NetworkPolicy
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a NetworkPolicy """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'deleteNetworkingV1NamespacedNetworkPolicy', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'NetworkPolicy', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NetworkPolicy'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified NetworkPolicy """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'patchNetworkingV1NamespacedNetworkPolicy', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_NetworkPolicy}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_networking_v1_NetworkPolicy}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'NetworkPolicy', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NetworkPolicy'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__networking_k8s_io__v1__networkpolicies:
    pth = "/apis/networking.k8s.io/v1/networkpolicies"

    class get:
        """list or watch objects of kind NetworkPolicy """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'listNetworkingV1NetworkPolicyForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_networking_v1_NetworkPolicyList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'NetworkPolicy', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__networking_k8s_io__v1__watch__ingressclasses:
    pth = "/apis/networking.k8s.io/v1/watch/ingressclasses"

    class get:
        """watch individual changes to a list of IngressClass. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'watchNetworkingV1IngressClassList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'IngressClass', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__networking_k8s_io__v1__watch__ingressclasses___name_:
    pth = "/apis/networking.k8s.io/v1/watch/ingressclasses/{name}"

    class get:
        """watch changes to an object of kind IngressClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'watchNetworkingV1IngressClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'IngressClass', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the IngressClass'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__networking_k8s_io__v1__watch__ingresses:
    pth = "/apis/networking.k8s.io/v1/watch/ingresses"

    class get:
        """watch individual changes to a list of Ingress. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'watchNetworkingV1IngressListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'Ingress', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__networking_k8s_io__v1__watch__namespaces___namespace___ingresses:
    pth = "/apis/networking.k8s.io/v1/watch/namespaces/{namespace}/ingresses"

    class get:
        """watch individual changes to a list of Ingress. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'watchNetworkingV1NamespacedIngressList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'Ingress', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__networking_k8s_io__v1__watch__namespaces___namespace___ingresses___name_:
    pth = "/apis/networking.k8s.io/v1/watch/namespaces/{namespace}/ingresses/{name}"

    class get:
        """watch changes to an object of kind Ingress. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'watchNetworkingV1NamespacedIngress', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'Ingress', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Ingress'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__networking_k8s_io__v1__watch__namespaces___namespace___networkpolicies:
    pth = "/apis/networking.k8s.io/v1/watch/namespaces/{namespace}/networkpolicies"

    class get:
        """watch individual changes to a list of NetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'watchNetworkingV1NamespacedNetworkPolicyList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'NetworkPolicy', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__networking_k8s_io__v1__watch__namespaces___namespace___networkpolicies___name_:
    pth = "/apis/networking.k8s.io/v1/watch/namespaces/{namespace}/networkpolicies/{name}"

    class get:
        """watch changes to an object of kind NetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'watchNetworkingV1NamespacedNetworkPolicy', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'NetworkPolicy', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the NetworkPolicy'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__networking_k8s_io__v1__watch__networkpolicies:
    pth = "/apis/networking.k8s.io/v1/watch/networkpolicies"

    class get:
        """watch individual changes to a list of NetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['networking_v1'], 'operationId': 'watchNetworkingV1NetworkPolicyListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'networking.k8s.io', 'kind': 'NetworkPolicy', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__node_k8s_io__:
    pth = "/apis/node.k8s.io/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['node'], 'operationId': 'getNodeAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__node_k8s_io__v1__:
    pth = "/apis/node.k8s.io/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['node_v1'], 'operationId': 'getNodeV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__node_k8s_io__v1__runtimeclasses:
    pth = "/apis/node.k8s.io/v1/runtimeclasses"

    class get:
        """list or watch objects of kind RuntimeClass """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['node_v1'], 'operationId': 'listNodeV1RuntimeClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_node_v1_RuntimeClassList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a RuntimeClass """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['node_v1'], 'operationId': 'createNodeV1RuntimeClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_node_v1_RuntimeClass}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_node_v1_RuntimeClass}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_node_v1_RuntimeClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_node_v1_RuntimeClass
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_node_v1_RuntimeClass
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of RuntimeClass """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['node_v1'], 'operationId': 'deleteNodeV1CollectionRuntimeClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__node_k8s_io__v1__runtimeclasses___name_:
    pth = "/apis/node.k8s.io/v1/runtimeclasses/{name}"

    class get:
        """read the specified RuntimeClass """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['node_v1'], 'operationId': 'readNodeV1RuntimeClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_node_v1_RuntimeClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the RuntimeClass'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified RuntimeClass """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['node_v1'], 'operationId': 'replaceNodeV1RuntimeClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_node_v1_RuntimeClass}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_node_v1_RuntimeClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the RuntimeClass'}
            body = Defs.definitions_io_k8s_api_node_v1_RuntimeClass
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_node_v1_RuntimeClass
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a RuntimeClass """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['node_v1'], 'operationId': 'deleteNodeV1RuntimeClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the RuntimeClass'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified RuntimeClass """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['node_v1'], 'operationId': 'patchNodeV1RuntimeClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_node_v1_RuntimeClass}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_node_v1_RuntimeClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the RuntimeClass'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__node_k8s_io__v1__watch__runtimeclasses:
    pth = "/apis/node.k8s.io/v1/watch/runtimeclasses"

    class get:
        """watch individual changes to a list of RuntimeClass. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['node_v1'], 'operationId': 'watchNodeV1RuntimeClassList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__node_k8s_io__v1__watch__runtimeclasses___name_:
    pth = "/apis/node.k8s.io/v1/watch/runtimeclasses/{name}"

    class get:
        """watch changes to an object of kind RuntimeClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['node_v1'], 'operationId': 'watchNodeV1RuntimeClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the RuntimeClass'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__node_k8s_io__v1beta1__:
    pth = "/apis/node.k8s.io/v1beta1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['node_v1beta1'], 'operationId': 'getNodeV1beta1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__node_k8s_io__v1beta1__runtimeclasses:
    pth = "/apis/node.k8s.io/v1beta1/runtimeclasses"

    class get:
        """list or watch objects of kind RuntimeClass """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['node_v1beta1'], 'operationId': 'listNodeV1beta1RuntimeClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_node_v1beta1_RuntimeClassList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a RuntimeClass """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['node_v1beta1'], 'operationId': 'createNodeV1beta1RuntimeClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_node_v1beta1_RuntimeClass}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_node_v1beta1_RuntimeClass}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_node_v1beta1_RuntimeClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_node_v1beta1_RuntimeClass
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_node_v1beta1_RuntimeClass
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of RuntimeClass """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['node_v1beta1'], 'operationId': 'deleteNodeV1beta1CollectionRuntimeClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__node_k8s_io__v1beta1__runtimeclasses___name_:
    pth = "/apis/node.k8s.io/v1beta1/runtimeclasses/{name}"

    class get:
        """read the specified RuntimeClass """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['node_v1beta1'], 'operationId': 'readNodeV1beta1RuntimeClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_node_v1beta1_RuntimeClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the RuntimeClass'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified RuntimeClass """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['node_v1beta1'], 'operationId': 'replaceNodeV1beta1RuntimeClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_node_v1beta1_RuntimeClass}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_node_v1beta1_RuntimeClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the RuntimeClass'}
            body = Defs.definitions_io_k8s_api_node_v1beta1_RuntimeClass
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_node_v1beta1_RuntimeClass
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a RuntimeClass """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['node_v1beta1'], 'operationId': 'deleteNodeV1beta1RuntimeClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the RuntimeClass'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified RuntimeClass """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['node_v1beta1'], 'operationId': 'patchNodeV1beta1RuntimeClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_node_v1beta1_RuntimeClass}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_node_v1beta1_RuntimeClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the RuntimeClass'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__node_k8s_io__v1beta1__watch__runtimeclasses:
    pth = "/apis/node.k8s.io/v1beta1/watch/runtimeclasses"

    class get:
        """watch individual changes to a list of RuntimeClass. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['node_v1beta1'], 'operationId': 'watchNodeV1beta1RuntimeClassList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__node_k8s_io__v1beta1__watch__runtimeclasses___name_:
    pth = "/apis/node.k8s.io/v1beta1/watch/runtimeclasses/{name}"

    class get:
        """watch changes to an object of kind RuntimeClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['node_v1beta1'], 'operationId': 'watchNodeV1beta1RuntimeClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'node.k8s.io', 'kind': 'RuntimeClass', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the RuntimeClass'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__policy__:
    pth = "/apis/policy/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy'], 'operationId': 'getPolicyAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__policy__v1__:
    pth = "/apis/policy/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1'], 'operationId': 'getPolicyV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__policy__v1__namespaces___namespace___poddisruptionbudgets:
    pth = "/apis/policy/v1/namespaces/{namespace}/poddisruptionbudgets"

    class get:
        """list or watch objects of kind PodDisruptionBudget """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['policy_v1'], 'operationId': 'listPolicyV1NamespacedPodDisruptionBudget', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudgetList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a PodDisruptionBudget """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1'], 'operationId': 'createPolicyV1NamespacedPodDisruptionBudget', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of PodDisruptionBudget """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1'], 'operationId': 'deletePolicyV1CollectionNamespacedPodDisruptionBudget', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__policy__v1__namespaces___namespace___poddisruptionbudgets___name_:
    pth = "/apis/policy/v1/namespaces/{namespace}/poddisruptionbudgets/{name}"

    class get:
        """read the specified PodDisruptionBudget """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1'], 'operationId': 'readPolicyV1NamespacedPodDisruptionBudget', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodDisruptionBudget'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified PodDisruptionBudget """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1'], 'operationId': 'replacePolicyV1NamespacedPodDisruptionBudget', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodDisruptionBudget'}
            body = Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a PodDisruptionBudget """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1'], 'operationId': 'deletePolicyV1NamespacedPodDisruptionBudget', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodDisruptionBudget'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified PodDisruptionBudget """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1'], 'operationId': 'patchPolicyV1NamespacedPodDisruptionBudget', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodDisruptionBudget'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__policy__v1__namespaces___namespace___poddisruptionbudgets___name___status:
    pth = "/apis/policy/v1/namespaces/{namespace}/poddisruptionbudgets/{name}/status"

    class get:
        """read status of the specified PodDisruptionBudget """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1'], 'operationId': 'readPolicyV1NamespacedPodDisruptionBudgetStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodDisruptionBudget'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified PodDisruptionBudget """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1'], 'operationId': 'replacePolicyV1NamespacedPodDisruptionBudgetStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodDisruptionBudget'}
            body = Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified PodDisruptionBudget """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1'], 'operationId': 'patchPolicyV1NamespacedPodDisruptionBudgetStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudget}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodDisruptionBudget'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__policy__v1__poddisruptionbudgets:
    pth = "/apis/policy/v1/poddisruptionbudgets"

    class get:
        """list or watch objects of kind PodDisruptionBudget """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['policy_v1'], 'operationId': 'listPolicyV1PodDisruptionBudgetForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1_PodDisruptionBudgetList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__policy__v1__watch__namespaces___namespace___poddisruptionbudgets:
    pth = "/apis/policy/v1/watch/namespaces/{namespace}/poddisruptionbudgets"

    class get:
        """watch individual changes to a list of PodDisruptionBudget. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['policy_v1'], 'operationId': 'watchPolicyV1NamespacedPodDisruptionBudgetList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__policy__v1__watch__namespaces___namespace___poddisruptionbudgets___name_:
    pth = "/apis/policy/v1/watch/namespaces/{namespace}/poddisruptionbudgets/{name}"

    class get:
        """watch changes to an object of kind PodDisruptionBudget. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['policy_v1'], 'operationId': 'watchPolicyV1NamespacedPodDisruptionBudget', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodDisruptionBudget'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__policy__v1__watch__poddisruptionbudgets:
    pth = "/apis/policy/v1/watch/poddisruptionbudgets"

    class get:
        """watch individual changes to a list of PodDisruptionBudget. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['policy_v1'], 'operationId': 'watchPolicyV1PodDisruptionBudgetListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__policy__v1beta1__:
    pth = "/apis/policy/v1beta1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'getPolicyV1beta1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__policy__v1beta1__namespaces___namespace___poddisruptionbudgets:
    pth = "/apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets"

    class get:
        """list or watch objects of kind PodDisruptionBudget """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'listPolicyV1beta1NamespacedPodDisruptionBudget', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudgetList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a PodDisruptionBudget """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'createPolicyV1beta1NamespacedPodDisruptionBudget', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of PodDisruptionBudget """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'deletePolicyV1beta1CollectionNamespacedPodDisruptionBudget', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__policy__v1beta1__namespaces___namespace___poddisruptionbudgets___name_:
    pth = "/apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets/{name}"

    class get:
        """read the specified PodDisruptionBudget """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'readPolicyV1beta1NamespacedPodDisruptionBudget', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodDisruptionBudget'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified PodDisruptionBudget """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'replacePolicyV1beta1NamespacedPodDisruptionBudget', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodDisruptionBudget'}
            body = Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a PodDisruptionBudget """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'deletePolicyV1beta1NamespacedPodDisruptionBudget', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodDisruptionBudget'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified PodDisruptionBudget """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'patchPolicyV1beta1NamespacedPodDisruptionBudget', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodDisruptionBudget'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__policy__v1beta1__namespaces___namespace___poddisruptionbudgets___name___status:
    pth = "/apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets/{name}/status"

    class get:
        """read status of the specified PodDisruptionBudget """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'readPolicyV1beta1NamespacedPodDisruptionBudgetStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodDisruptionBudget'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace status of the specified PodDisruptionBudget """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'replacePolicyV1beta1NamespacedPodDisruptionBudgetStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodDisruptionBudget'}
            body = Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified PodDisruptionBudget """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'patchPolicyV1beta1NamespacedPodDisruptionBudgetStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudget}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodDisruptionBudget'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__policy__v1beta1__poddisruptionbudgets:
    pth = "/apis/policy/v1beta1/poddisruptionbudgets"

    class get:
        """list or watch objects of kind PodDisruptionBudget """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'listPolicyV1beta1PodDisruptionBudgetForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodDisruptionBudgetList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__policy__v1beta1__podsecuritypolicies:
    pth = "/apis/policy/v1beta1/podsecuritypolicies"

    class get:
        """list or watch objects of kind PodSecurityPolicy """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'listPolicyV1beta1PodSecurityPolicy', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicyList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodSecurityPolicy', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a PodSecurityPolicy """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'createPolicyV1beta1PodSecurityPolicy', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodSecurityPolicy', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of PodSecurityPolicy """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'deletePolicyV1beta1CollectionPodSecurityPolicy', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodSecurityPolicy', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__policy__v1beta1__podsecuritypolicies___name_:
    pth = "/apis/policy/v1beta1/podsecuritypolicies/{name}"

    class get:
        """read the specified PodSecurityPolicy """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'readPolicyV1beta1PodSecurityPolicy', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodSecurityPolicy', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodSecurityPolicy'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified PodSecurityPolicy """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'replacePolicyV1beta1PodSecurityPolicy', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodSecurityPolicy', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodSecurityPolicy'}
            body = Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a PodSecurityPolicy """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'deletePolicyV1beta1PodSecurityPolicy', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodSecurityPolicy', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodSecurityPolicy'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified PodSecurityPolicy """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'patchPolicyV1beta1PodSecurityPolicy', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_policy_v1beta1_PodSecurityPolicy}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodSecurityPolicy', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodSecurityPolicy'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__policy__v1beta1__watch__namespaces___namespace___poddisruptionbudgets:
    pth = "/apis/policy/v1beta1/watch/namespaces/{namespace}/poddisruptionbudgets"

    class get:
        """watch individual changes to a list of PodDisruptionBudget. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'watchPolicyV1beta1NamespacedPodDisruptionBudgetList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__policy__v1beta1__watch__namespaces___namespace___poddisruptionbudgets___name_:
    pth = "/apis/policy/v1beta1/watch/namespaces/{namespace}/poddisruptionbudgets/{name}"

    class get:
        """watch changes to an object of kind PodDisruptionBudget. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'watchPolicyV1beta1NamespacedPodDisruptionBudget', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodDisruptionBudget'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__policy__v1beta1__watch__poddisruptionbudgets:
    pth = "/apis/policy/v1beta1/watch/poddisruptionbudgets"

    class get:
        """watch individual changes to a list of PodDisruptionBudget. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'watchPolicyV1beta1PodDisruptionBudgetListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodDisruptionBudget', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__policy__v1beta1__watch__podsecuritypolicies:
    pth = "/apis/policy/v1beta1/watch/podsecuritypolicies"

    class get:
        """watch individual changes to a list of PodSecurityPolicy. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'watchPolicyV1beta1PodSecurityPolicyList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodSecurityPolicy', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__policy__v1beta1__watch__podsecuritypolicies___name_:
    pth = "/apis/policy/v1beta1/watch/podsecuritypolicies/{name}"

    class get:
        """watch changes to an object of kind PodSecurityPolicy. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['policy_v1beta1'], 'operationId': 'watchPolicyV1beta1PodSecurityPolicy', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'policy', 'kind': 'PodSecurityPolicy', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PodSecurityPolicy'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__rbac_authorization_k8s_io__:
    pth = "/apis/rbac.authorization.k8s.io/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization'], 'operationId': 'getRbacAuthorizationAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__rbac_authorization_k8s_io__v1__:
    pth = "/apis/rbac.authorization.k8s.io/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'getRbacAuthorizationV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__rbac_authorization_k8s_io__v1__clusterrolebindings:
    pth = "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings"

    class get:
        """list or watch objects of kind ClusterRoleBinding """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'listRbacAuthorizationV1ClusterRoleBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRoleBindingList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRoleBinding', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a ClusterRoleBinding """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'createRbacAuthorizationV1ClusterRoleBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRoleBinding}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRoleBinding}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRoleBinding}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRoleBinding', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_rbac_v1_ClusterRoleBinding
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_rbac_v1_ClusterRoleBinding
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of ClusterRoleBinding """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'deleteRbacAuthorizationV1CollectionClusterRoleBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRoleBinding', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__rbac_authorization_k8s_io__v1__clusterrolebindings___name_:
    pth = "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/{name}"

    class get:
        """read the specified ClusterRoleBinding """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'readRbacAuthorizationV1ClusterRoleBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRoleBinding}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRoleBinding', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ClusterRoleBinding'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified ClusterRoleBinding """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'replaceRbacAuthorizationV1ClusterRoleBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRoleBinding}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRoleBinding}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRoleBinding', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ClusterRoleBinding'}
            body = Defs.definitions_io_k8s_api_rbac_v1_ClusterRoleBinding
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_rbac_v1_ClusterRoleBinding
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a ClusterRoleBinding """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'deleteRbacAuthorizationV1ClusterRoleBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRoleBinding', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ClusterRoleBinding'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified ClusterRoleBinding """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'patchRbacAuthorizationV1ClusterRoleBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRoleBinding}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRoleBinding}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRoleBinding', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ClusterRoleBinding'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__rbac_authorization_k8s_io__v1__clusterroles:
    pth = "/apis/rbac.authorization.k8s.io/v1/clusterroles"

    class get:
        """list or watch objects of kind ClusterRole """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'listRbacAuthorizationV1ClusterRole', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRoleList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRole', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a ClusterRole """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'createRbacAuthorizationV1ClusterRole', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRole}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRole}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRole}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRole', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_rbac_v1_ClusterRole
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_rbac_v1_ClusterRole
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of ClusterRole """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'deleteRbacAuthorizationV1CollectionClusterRole', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRole', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__rbac_authorization_k8s_io__v1__clusterroles___name_:
    pth = "/apis/rbac.authorization.k8s.io/v1/clusterroles/{name}"

    class get:
        """read the specified ClusterRole """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'readRbacAuthorizationV1ClusterRole', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRole}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRole', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ClusterRole'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified ClusterRole """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'replaceRbacAuthorizationV1ClusterRole', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRole}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRole}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRole', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ClusterRole'}
            body = Defs.definitions_io_k8s_api_rbac_v1_ClusterRole
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_rbac_v1_ClusterRole
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a ClusterRole """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'deleteRbacAuthorizationV1ClusterRole', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRole', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ClusterRole'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified ClusterRole """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'patchRbacAuthorizationV1ClusterRole', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRole}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_rbac_v1_ClusterRole}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRole', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ClusterRole'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__rbac_authorization_k8s_io__v1__namespaces___namespace___rolebindings:
    pth = "/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings"

    class get:
        """list or watch objects of kind RoleBinding """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'listRbacAuthorizationV1NamespacedRoleBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_RoleBindingList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'RoleBinding', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a RoleBinding """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'createRbacAuthorizationV1NamespacedRoleBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_RoleBinding}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_rbac_v1_RoleBinding}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_rbac_v1_RoleBinding}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'RoleBinding', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_rbac_v1_RoleBinding
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_rbac_v1_RoleBinding
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of RoleBinding """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'deleteRbacAuthorizationV1CollectionNamespacedRoleBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'RoleBinding', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__rbac_authorization_k8s_io__v1__namespaces___namespace___rolebindings___name_:
    pth = "/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}"

    class get:
        """read the specified RoleBinding """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'readRbacAuthorizationV1NamespacedRoleBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_RoleBinding}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'RoleBinding', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the RoleBinding'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified RoleBinding """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'replaceRbacAuthorizationV1NamespacedRoleBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_RoleBinding}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_rbac_v1_RoleBinding}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'RoleBinding', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the RoleBinding'}
            body = Defs.definitions_io_k8s_api_rbac_v1_RoleBinding
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_rbac_v1_RoleBinding
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a RoleBinding """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'deleteRbacAuthorizationV1NamespacedRoleBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'RoleBinding', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the RoleBinding'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified RoleBinding """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'patchRbacAuthorizationV1NamespacedRoleBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_RoleBinding}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_rbac_v1_RoleBinding}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'RoleBinding', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the RoleBinding'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__rbac_authorization_k8s_io__v1__namespaces___namespace___roles:
    pth = "/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles"

    class get:
        """list or watch objects of kind Role """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'listRbacAuthorizationV1NamespacedRole', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_RoleList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'Role', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a Role """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'createRbacAuthorizationV1NamespacedRole', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_Role}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_rbac_v1_Role}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_rbac_v1_Role}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'Role', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_rbac_v1_Role
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_rbac_v1_Role
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of Role """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'deleteRbacAuthorizationV1CollectionNamespacedRole', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'Role', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__rbac_authorization_k8s_io__v1__namespaces___namespace___roles___name_:
    pth = "/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles/{name}"

    class get:
        """read the specified Role """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'readRbacAuthorizationV1NamespacedRole', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_Role}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'Role', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Role'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified Role """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'replaceRbacAuthorizationV1NamespacedRole', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_Role}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_rbac_v1_Role}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'Role', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Role'}
            body = Defs.definitions_io_k8s_api_rbac_v1_Role
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_rbac_v1_Role
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a Role """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'deleteRbacAuthorizationV1NamespacedRole', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'Role', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Role'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified Role """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'patchRbacAuthorizationV1NamespacedRole', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_Role}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_rbac_v1_Role}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'Role', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Role'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__rbac_authorization_k8s_io__v1__rolebindings:
    pth = "/apis/rbac.authorization.k8s.io/v1/rolebindings"

    class get:
        """list or watch objects of kind RoleBinding """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'listRbacAuthorizationV1RoleBindingForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_RoleBindingList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'RoleBinding', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__rbac_authorization_k8s_io__v1__roles:
    pth = "/apis/rbac.authorization.k8s.io/v1/roles"

    class get:
        """list or watch objects of kind Role """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'listRbacAuthorizationV1RoleForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_rbac_v1_RoleList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'Role', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__rbac_authorization_k8s_io__v1__watch__clusterrolebindings:
    pth = "/apis/rbac.authorization.k8s.io/v1/watch/clusterrolebindings"

    class get:
        """watch individual changes to a list of ClusterRoleBinding. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'watchRbacAuthorizationV1ClusterRoleBindingList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRoleBinding', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__rbac_authorization_k8s_io__v1__watch__clusterrolebindings___name_:
    pth = "/apis/rbac.authorization.k8s.io/v1/watch/clusterrolebindings/{name}"

    class get:
        """watch changes to an object of kind ClusterRoleBinding. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'watchRbacAuthorizationV1ClusterRoleBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRoleBinding', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ClusterRoleBinding'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__rbac_authorization_k8s_io__v1__watch__clusterroles:
    pth = "/apis/rbac.authorization.k8s.io/v1/watch/clusterroles"

    class get:
        """watch individual changes to a list of ClusterRole. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'watchRbacAuthorizationV1ClusterRoleList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRole', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__rbac_authorization_k8s_io__v1__watch__clusterroles___name_:
    pth = "/apis/rbac.authorization.k8s.io/v1/watch/clusterroles/{name}"

    class get:
        """watch changes to an object of kind ClusterRole. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'watchRbacAuthorizationV1ClusterRole', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'ClusterRole', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the ClusterRole'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__rbac_authorization_k8s_io__v1__watch__namespaces___namespace___rolebindings:
    pth = "/apis/rbac.authorization.k8s.io/v1/watch/namespaces/{namespace}/rolebindings"

    class get:
        """watch individual changes to a list of RoleBinding. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'watchRbacAuthorizationV1NamespacedRoleBindingList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'RoleBinding', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__rbac_authorization_k8s_io__v1__watch__namespaces___namespace___rolebindings___name_:
    pth = "/apis/rbac.authorization.k8s.io/v1/watch/namespaces/{namespace}/rolebindings/{name}"

    class get:
        """watch changes to an object of kind RoleBinding. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'watchRbacAuthorizationV1NamespacedRoleBinding', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'RoleBinding', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the RoleBinding'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__rbac_authorization_k8s_io__v1__watch__namespaces___namespace___roles:
    pth = "/apis/rbac.authorization.k8s.io/v1/watch/namespaces/{namespace}/roles"

    class get:
        """watch individual changes to a list of Role. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'watchRbacAuthorizationV1NamespacedRoleList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'Role', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__rbac_authorization_k8s_io__v1__watch__namespaces___namespace___roles___name_:
    pth = "/apis/rbac.authorization.k8s.io/v1/watch/namespaces/{namespace}/roles/{name}"

    class get:
        """watch changes to an object of kind Role. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'watchRbacAuthorizationV1NamespacedRole', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'Role', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the Role'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__rbac_authorization_k8s_io__v1__watch__rolebindings:
    pth = "/apis/rbac.authorization.k8s.io/v1/watch/rolebindings"

    class get:
        """watch individual changes to a list of RoleBinding. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'watchRbacAuthorizationV1RoleBindingListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'RoleBinding', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__rbac_authorization_k8s_io__v1__watch__roles:
    pth = "/apis/rbac.authorization.k8s.io/v1/watch/roles"

    class get:
        """watch individual changes to a list of Role. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['rbacAuthorization_v1'], 'operationId': 'watchRbacAuthorizationV1RoleListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'rbac.authorization.k8s.io', 'kind': 'Role', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__scheduling_k8s_io__:
    pth = "/apis/scheduling.k8s.io/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['scheduling'], 'operationId': 'getSchedulingAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__scheduling_k8s_io__v1__:
    pth = "/apis/scheduling.k8s.io/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['scheduling_v1'], 'operationId': 'getSchedulingV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__scheduling_k8s_io__v1__priorityclasses:
    pth = "/apis/scheduling.k8s.io/v1/priorityclasses"

    class get:
        """list or watch objects of kind PriorityClass """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['scheduling_v1'], 'operationId': 'listSchedulingV1PriorityClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_scheduling_v1_PriorityClassList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'scheduling.k8s.io', 'kind': 'PriorityClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a PriorityClass """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['scheduling_v1'], 'operationId': 'createSchedulingV1PriorityClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_scheduling_v1_PriorityClass}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_scheduling_v1_PriorityClass}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_scheduling_v1_PriorityClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'scheduling.k8s.io', 'kind': 'PriorityClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_scheduling_v1_PriorityClass
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_scheduling_v1_PriorityClass
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of PriorityClass """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['scheduling_v1'], 'operationId': 'deleteSchedulingV1CollectionPriorityClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'scheduling.k8s.io', 'kind': 'PriorityClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__scheduling_k8s_io__v1__priorityclasses___name_:
    pth = "/apis/scheduling.k8s.io/v1/priorityclasses/{name}"

    class get:
        """read the specified PriorityClass """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['scheduling_v1'], 'operationId': 'readSchedulingV1PriorityClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_scheduling_v1_PriorityClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'scheduling.k8s.io', 'kind': 'PriorityClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityClass'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified PriorityClass """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['scheduling_v1'], 'operationId': 'replaceSchedulingV1PriorityClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_scheduling_v1_PriorityClass}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_scheduling_v1_PriorityClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'scheduling.k8s.io', 'kind': 'PriorityClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityClass'}
            body = Defs.definitions_io_k8s_api_scheduling_v1_PriorityClass
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_scheduling_v1_PriorityClass
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a PriorityClass """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['scheduling_v1'], 'operationId': 'deleteSchedulingV1PriorityClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'scheduling.k8s.io', 'kind': 'PriorityClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityClass'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified PriorityClass """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['scheduling_v1'], 'operationId': 'patchSchedulingV1PriorityClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_scheduling_v1_PriorityClass}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_scheduling_v1_PriorityClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'scheduling.k8s.io', 'kind': 'PriorityClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityClass'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__scheduling_k8s_io__v1__watch__priorityclasses:
    pth = "/apis/scheduling.k8s.io/v1/watch/priorityclasses"

    class get:
        """watch individual changes to a list of PriorityClass. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['scheduling_v1'], 'operationId': 'watchSchedulingV1PriorityClassList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'scheduling.k8s.io', 'kind': 'PriorityClass', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__scheduling_k8s_io__v1__watch__priorityclasses___name_:
    pth = "/apis/scheduling.k8s.io/v1/watch/priorityclasses/{name}"

    class get:
        """watch changes to an object of kind PriorityClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['scheduling_v1'], 'operationId': 'watchSchedulingV1PriorityClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'scheduling.k8s.io', 'kind': 'PriorityClass', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the PriorityClass'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__storage_k8s_io__:
    pth = "/apis/storage.k8s.io/"

    class get:
        """get information of a group """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage'], 'operationId': 'getStorageAPIGroup', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__storage_k8s_io__v1__:
    pth = "/apis/storage.k8s.io/v1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'getStorageV1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__storage_k8s_io__v1__csidrivers:
    pth = "/apis/storage.k8s.io/v1/csidrivers"

    class get:
        """list or watch objects of kind CSIDriver """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'listStorageV1CSIDriver', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSIDriverList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIDriver', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a CSIDriver """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'createStorageV1CSIDriver', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSIDriver}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSIDriver}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSIDriver}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIDriver', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_storage_v1_CSIDriver
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_storage_v1_CSIDriver
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of CSIDriver """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'deleteStorageV1CollectionCSIDriver', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIDriver', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__storage_k8s_io__v1__csidrivers___name_:
    pth = "/apis/storage.k8s.io/v1/csidrivers/{name}"

    class get:
        """read the specified CSIDriver """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'readStorageV1CSIDriver', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSIDriver}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIDriver', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CSIDriver'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified CSIDriver """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'replaceStorageV1CSIDriver', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSIDriver}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSIDriver}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIDriver', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CSIDriver'}
            body = Defs.definitions_io_k8s_api_storage_v1_CSIDriver
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_storage_v1_CSIDriver
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a CSIDriver """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'deleteStorageV1CSIDriver', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSIDriver}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSIDriver}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIDriver', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CSIDriver'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified CSIDriver """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'patchStorageV1CSIDriver', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSIDriver}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSIDriver}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIDriver', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CSIDriver'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__storage_k8s_io__v1__csinodes:
    pth = "/apis/storage.k8s.io/v1/csinodes"

    class get:
        """list or watch objects of kind CSINode """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'listStorageV1CSINode', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSINodeList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSINode', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a CSINode """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'createStorageV1CSINode', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSINode}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSINode}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSINode}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSINode', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_storage_v1_CSINode
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_storage_v1_CSINode
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of CSINode """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'deleteStorageV1CollectionCSINode', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSINode', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__storage_k8s_io__v1__csinodes___name_:
    pth = "/apis/storage.k8s.io/v1/csinodes/{name}"

    class get:
        """read the specified CSINode """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'readStorageV1CSINode', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSINode}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSINode', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CSINode'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified CSINode """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'replaceStorageV1CSINode', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSINode}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSINode}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSINode', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CSINode'}
            body = Defs.definitions_io_k8s_api_storage_v1_CSINode
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_storage_v1_CSINode
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a CSINode """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'deleteStorageV1CSINode', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSINode}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSINode}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSINode', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CSINode'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified CSINode """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'patchStorageV1CSINode', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSINode}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1_CSINode}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSINode', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CSINode'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__storage_k8s_io__v1__storageclasses:
    pth = "/apis/storage.k8s.io/v1/storageclasses"

    class get:
        """list or watch objects of kind StorageClass """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'listStorageV1StorageClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_StorageClassList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'StorageClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a StorageClass """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'createStorageV1StorageClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_StorageClass}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1_StorageClass}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_storage_v1_StorageClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'StorageClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_storage_v1_StorageClass
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_storage_v1_StorageClass
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of StorageClass """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'deleteStorageV1CollectionStorageClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'StorageClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__storage_k8s_io__v1__storageclasses___name_:
    pth = "/apis/storage.k8s.io/v1/storageclasses/{name}"

    class get:
        """read the specified StorageClass """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'readStorageV1StorageClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_StorageClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'StorageClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the StorageClass'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified StorageClass """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'replaceStorageV1StorageClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_StorageClass}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1_StorageClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'StorageClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the StorageClass'}
            body = Defs.definitions_io_k8s_api_storage_v1_StorageClass
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_storage_v1_StorageClass
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a StorageClass """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'deleteStorageV1StorageClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_StorageClass}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_storage_v1_StorageClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'StorageClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the StorageClass'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified StorageClass """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'patchStorageV1StorageClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_StorageClass}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1_StorageClass}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'StorageClass', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the StorageClass'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__storage_k8s_io__v1__volumeattachments:
    pth = "/apis/storage.k8s.io/v1/volumeattachments"

    class get:
        """list or watch objects of kind VolumeAttachment """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'listStorageV1VolumeAttachment', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_VolumeAttachmentList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'VolumeAttachment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a VolumeAttachment """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'createStorageV1VolumeAttachment', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'VolumeAttachment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of VolumeAttachment """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'deleteStorageV1CollectionVolumeAttachment', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'VolumeAttachment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__storage_k8s_io__v1__volumeattachments___name_:
    pth = "/apis/storage.k8s.io/v1/volumeattachments/{name}"

    class get:
        """read the specified VolumeAttachment """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'readStorageV1VolumeAttachment', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'VolumeAttachment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the VolumeAttachment'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace the specified VolumeAttachment """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'replaceStorageV1VolumeAttachment', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'VolumeAttachment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the VolumeAttachment'}
            body = Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a VolumeAttachment """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'deleteStorageV1VolumeAttachment', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'VolumeAttachment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the VolumeAttachment'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified VolumeAttachment """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'patchStorageV1VolumeAttachment', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'VolumeAttachment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the VolumeAttachment'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__storage_k8s_io__v1__volumeattachments___name___status:
    pth = "/apis/storage.k8s.io/v1/volumeattachments/{name}/status"

    class get:
        """read status of the specified VolumeAttachment """
        class R:
            _query = ['pretty']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'readStorageV1VolumeAttachmentStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'VolumeAttachment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the VolumeAttachment'}
        R.pretty = str_dflt
        R.name = name

    class put:
        """replace status of the specified VolumeAttachment """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'replaceStorageV1VolumeAttachmentStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'VolumeAttachment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the VolumeAttachment'}
            body = Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class patch:
        """partially update status of the specified VolumeAttachment """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'patchStorageV1VolumeAttachmentStatus', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1_VolumeAttachment}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'VolumeAttachment', 'version': 'v1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the VolumeAttachment'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__storage_k8s_io__v1__watch__csidrivers:
    pth = "/apis/storage.k8s.io/v1/watch/csidrivers"

    class get:
        """watch individual changes to a list of CSIDriver. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'watchStorageV1CSIDriverList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIDriver', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__storage_k8s_io__v1__watch__csidrivers___name_:
    pth = "/apis/storage.k8s.io/v1/watch/csidrivers/{name}"

    class get:
        """watch changes to an object of kind CSIDriver. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'watchStorageV1CSIDriver', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIDriver', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CSIDriver'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__storage_k8s_io__v1__watch__csinodes:
    pth = "/apis/storage.k8s.io/v1/watch/csinodes"

    class get:
        """watch individual changes to a list of CSINode. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'watchStorageV1CSINodeList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSINode', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__storage_k8s_io__v1__watch__csinodes___name_:
    pth = "/apis/storage.k8s.io/v1/watch/csinodes/{name}"

    class get:
        """watch changes to an object of kind CSINode. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'watchStorageV1CSINode', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSINode', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CSINode'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__storage_k8s_io__v1__watch__storageclasses:
    pth = "/apis/storage.k8s.io/v1/watch/storageclasses"

    class get:
        """watch individual changes to a list of StorageClass. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'watchStorageV1StorageClassList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'StorageClass', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__storage_k8s_io__v1__watch__storageclasses___name_:
    pth = "/apis/storage.k8s.io/v1/watch/storageclasses/{name}"

    class get:
        """watch changes to an object of kind StorageClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'watchStorageV1StorageClass', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'StorageClass', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the StorageClass'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__storage_k8s_io__v1__watch__volumeattachments:
    pth = "/apis/storage.k8s.io/v1/watch/volumeattachments"

    class get:
        """watch individual changes to a list of VolumeAttachment. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'watchStorageV1VolumeAttachmentList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'VolumeAttachment', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__storage_k8s_io__v1__watch__volumeattachments___name_:
    pth = "/apis/storage.k8s.io/v1/watch/volumeattachments/{name}"

    class get:
        """watch changes to an object of kind VolumeAttachment. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1'], 'operationId': 'watchStorageV1VolumeAttachment', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'VolumeAttachment', 'version': 'v1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the VolumeAttachment'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__storage_k8s_io__v1beta1__:
    pth = "/apis/storage.k8s.io/v1beta1/"

    class get:
        """get available resources """
        class R:
            # = {'consumes': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1beta1'], 'operationId': 'getStorageV1beta1APIResources', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList}, '401': {'description': 'Unauthorized'}}}
            pass

class apis__storage_k8s_io__v1beta1__csistoragecapacities:
    pth = "/apis/storage.k8s.io/v1beta1/csistoragecapacities"

    class get:
        """list or watch objects of kind CSIStorageCapacity """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1beta1'], 'operationId': 'listStorageV1beta1CSIStorageCapacityForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacityList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIStorageCapacity', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__storage_k8s_io__v1beta1__namespaces___namespace___csistoragecapacities:
    pth = "/apis/storage.k8s.io/v1beta1/namespaces/{namespace}/csistoragecapacities"

    class get:
        """list or watch objects of kind CSIStorageCapacity """
        class R:
            _query = ['pretty', 'allowWatchBookmarks', 'continue__', 'fieldSelector', 'labelSelector', 'limit', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds', 'watch']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1beta1'], 'operationId': 'listStorageV1beta1NamespacedCSIStorageCapacity', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacityList}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'list', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIStorageCapacity', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.allowWatchBookmarks = True
        R.continue__ = str_dflt
        R.fieldSelector = str_dflt
        R.labelSelector = str_dflt
        R.limit = 0
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0
        R.watch = True

    class post:
        """create a CSIStorageCapacity """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1beta1'], 'operationId': 'createStorageV1beta1NamespacedCSIStorageCapacity', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacity}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacity}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacity}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'post', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIStorageCapacity', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacity
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacity
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete collection of CSIStorageCapacity """
        class R:
            _query = ['pretty', 'continue__', 'dryRun', 'fieldSelector', 'gracePeriodSeconds', 'labelSelector', 'limit', 'orphanDependents', 'propagationPolicy', 'resourceVersion', 'resourceVersionMatch', 'timeoutSeconds']; _path = ['namespace']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1beta1'], 'operationId': 'deleteStorageV1beta1CollectionNamespacedCSIStorageCapacity', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'deletecollection', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIStorageCapacity', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.continue__ = str_dflt
        R.dryRun = str_dflt
        R.fieldSelector = str_dflt
        R.gracePeriodSeconds = 0
        R.labelSelector = str_dflt
        R.limit = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt
        R.resourceVersion = str_dflt
        R.resourceVersionMatch = str_dflt
        R.timeoutSeconds = 0

class apis__storage_k8s_io__v1beta1__namespaces___namespace___csistoragecapacities___name_:
    pth = "/apis/storage.k8s.io/v1beta1/namespaces/{namespace}/csistoragecapacities/{name}"

    class get:
        """read the specified CSIStorageCapacity """
        class R:
            _query = ['pretty']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1beta1'], 'operationId': 'readStorageV1beta1NamespacedCSIStorageCapacity', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacity}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'get', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIStorageCapacity', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CSIStorageCapacity'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name

    class put:
        """replace the specified CSIStorageCapacity """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1beta1'], 'operationId': 'replaceStorageV1beta1NamespacedCSIStorageCapacity', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacity}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacity}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'put', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIStorageCapacity', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CSIStorageCapacity'}
            body = Defs.definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacity
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacity
        R.dryRun = str_dflt
        R.fieldManager = str_dflt

    class delete:
        """delete a CSIStorageCapacity """
        class R:
            _query = ['pretty', 'dryRun', 'gracePeriodSeconds', 'orphanDependents', 'propagationPolicy']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1beta1'], 'operationId': 'deleteStorageV1beta1NamespacedCSIStorageCapacity', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '202': {'description': 'Accepted', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Status}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'delete', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIStorageCapacity', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CSIStorageCapacity'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            gracePeriodSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'gracePeriodSeconds', 'in': 'query', 'descr': 'The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.'}
            orphanDependents = {'uniqueItems': True, 'type': 'boolean', 'name': 'orphanDependents', 'in': 'query', 'descr': 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object\'s finalizers list. Either this field or PropagationPolicy may be set, but not both.'}
            propagationPolicy = {'uniqueItems': True, 'type': 'string', 'name': 'propagationPolicy', 'in': 'query', 'descr': "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions
        R.dryRun = str_dflt
        R.gracePeriodSeconds = 0
        R.orphanDependents = True
        R.propagationPolicy = str_dflt

    class patch:
        """partially update the specified CSIStorageCapacity """
        class R:
            _query = ['pretty', 'dryRun', 'fieldManager', 'force']; _path = ['namespace', 'name']; _body = ['body'];
            # = {'consumes': ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json', 'application/apply-patch+yaml'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'], 'schemes': ['https'], 'tags': ['storage_v1beta1'], 'operationId': 'patchStorageV1beta1NamespacedCSIStorageCapacity', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacity}, '201': {'description': 'Created', 'schema': Defs.definitions_io_k8s_api_storage_v1beta1_CSIStorageCapacity}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'patch', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIStorageCapacity', 'version': 'v1beta1'}}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CSIStorageCapacity'}
            body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
            dryRun = {'uniqueItems': True, 'type': 'string', 'name': 'dryRun', 'in': 'query', 'descr': 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'}
            fieldManager = {'uniqueItems': True, 'type': 'string', 'name': 'fieldManager', 'in': 'query', 'descr': 'fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).'}
            force = {'uniqueItems': True, 'type': 'boolean', 'name': 'force', 'in': 'query', 'descr': 'Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.'}
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.body = Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_Patch
        R.dryRun = str_dflt
        R.fieldManager = str_dflt
        R.force = True

class apis__storage_k8s_io__v1beta1__watch__csistoragecapacities:
    pth = "/apis/storage.k8s.io/v1beta1/watch/csistoragecapacities"

    class get:
        """watch individual changes to a list of CSIStorageCapacity. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1beta1'], 'operationId': 'watchStorageV1beta1CSIStorageCapacityListForAllNamespaces', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIStorageCapacity', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__storage_k8s_io__v1beta1__watch__namespaces___namespace___csistoragecapacities:
    pth = "/apis/storage.k8s.io/v1beta1/watch/namespaces/{namespace}/csistoragecapacities"

    class get:
        """watch individual changes to a list of CSIStorageCapacity. deprecated: use the 'watch' parameter with a list operation instead. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1beta1'], 'operationId': 'watchStorageV1beta1NamespacedCSIStorageCapacityList', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watchlist', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIStorageCapacity', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class apis__storage_k8s_io__v1beta1__watch__namespaces___namespace___csistoragecapacities___name_:
    pth = "/apis/storage.k8s.io/v1beta1/watch/namespaces/{namespace}/csistoragecapacities/{name}"

    class get:
        """watch changes to an object of kind CSIStorageCapacity. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter. """
        class R:
            _query = ['watch', 'timeoutSeconds', 'resourceVersionMatch', 'resourceVersion', 'pretty', 'limit', 'labelSelector', 'fieldSelector', 'continue__', 'allowWatchBookmarks']; _path = ['namespace', 'name'];
            # = {'consumes': ['*/*'], 'produces': ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'], 'schemes': ['https'], 'tags': ['storage_v1beta1'], 'operationId': 'watchStorageV1beta1NamespacedCSIStorageCapacity', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent}, '401': {'description': 'Unauthorized'}}, 'x-kubernetes-action': 'watch', 'x-kubernetes-group-version-kind': {'group': 'storage.k8s.io', 'kind': 'CSIStorageCapacity', 'version': 'v1beta1'}}
            watch = {'uniqueItems': True, 'type': 'boolean', 'name': 'watch', 'in': 'query', 'descr': 'Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.'}
            timeoutSeconds = {'uniqueItems': True, 'type': 'integer', 'name': 'timeoutSeconds', 'in': 'query', 'descr': 'Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.'}
            resourceVersionMatch = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersionMatch', 'in': 'query', 'descr': 'resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            resourceVersion = {'uniqueItems': True, 'type': 'string', 'name': 'resourceVersion', 'in': 'query', 'descr': 'resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset'}
            pretty = {'uniqueItems': True, 'type': 'string', 'name': 'pretty', 'in': 'query', 'descr': "If 'true', then the output is pretty printed."}
            namespace = {'uniqueItems': True, 'type': 'string', 'name': 'namespace', 'in': 'path', 'required': True, 'descr': 'object name and auth scope, such as for teams and projects'}
            name = {'uniqueItems': True, 'type': 'string', 'name': 'name', 'in': 'path', 'required': True, 'descr': 'name of the CSIStorageCapacity'}
            limit = {'uniqueItems': True, 'type': 'integer', 'name': 'limit', 'in': 'query', 'descr': 'limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequen...'}
            labelSelector = {'uniqueItems': True, 'type': 'string', 'name': 'labelSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their labels. Defaults to everything.'}
            fieldSelector = {'uniqueItems': True, 'type': 'string', 'name': 'fieldSelector', 'in': 'query', 'descr': 'A selector to restrict the list of returned objects by their fields. Defaults to everything.'}
            continue__ = {'uniqueItems': True, 'type': 'string', 'name': 'continue', 'in': 'query', 'descr': 'The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the ...'}
            allowWatchBookmarks = {'uniqueItems': True, 'type': 'boolean', 'name': 'allowWatchBookmarks', 'in': 'query', 'descr': 'allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server\'s discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.'}
        R.watch = True
        R.timeoutSeconds = 0
        R.resourceVersionMatch = str_dflt
        R.resourceVersion = str_dflt
        R.pretty = str_dflt
        R.namespace = namespace
        R.name = name
        R.limit = 0
        R.labelSelector = str_dflt
        R.fieldSelector = str_dflt
        R.continue__ = str_dflt
        R.allowWatchBookmarks = True

class logs__:
    pth = "/logs/"

    class get:
        """ """
        class R:
            # = {'schemes': ['https'], 'tags': ['logs'], 'operationId': 'logFileListHandler', 'responses': {'401': {'description': 'Unauthorized'}}}
            pass

class logs___logpath_:
    pth = "/logs/{logpath}"

    class get:
        """ """
        class R:
            _path = ['logpath'];
            # = {'schemes': ['https'], 'tags': ['logs'], 'operationId': 'logFileHandler', 'responses': {'401': {'description': 'Unauthorized'}}}
            logpath = {'uniqueItems': True, 'type': 'string', 'name': 'logpath', 'in': 'path', 'required': True, 'descr': 'path to the log'}
        R.logpath = logpath

class openid__v1__jwks__:
    pth = "/openid/v1/jwks/"

    class get:
        """get service account issuer OpenID JSON Web Key Set (contains public token verification keys) """
        class R:
            # = {'produces': ['application/jwk-set+json'], 'schemes': ['https'], 'tags': ['openid'], 'operationId': 'getServiceAccountIssuerOpenIDKeyset', 'responses': {'200': {'description': 'OK', 'schema': {'type': 'string'}}, '401': {'description': 'Unauthorized'}}}
            pass

class version__:
    pth = "/version/"

    class get:
        """get the code version """
        class R:
            # = {'consumes': ['application/json'], 'produces': ['application/json'], 'schemes': ['https'], 'tags': ['version'], 'operationId': 'getCodeVersion', 'responses': {'200': {'description': 'OK', 'schema': Defs.definitions_io_k8s_apimachinery_pkg_version_Info}, '401': {'description': 'Unauthorized'}}}
            pass

# ─────────────── Tools ─────────────────────
import requests, json, functools, inspect, os
keyw = {'async', 'not', 'while', 'if', 'continue', 'for', 'raise', 'import', 'from', 'except'}

class Tools:
    @staticmethod
    def build_req(meth):
        data, h, q = None, API.hdrs, {}
        g = lambda o, k, d=None: getattr(o, k, d)
        c = globals()[meth.__qualname__.split('.', 1)[0]]
        R = g(meth, 'R')
        if R:
            h['Content-Type'] = m = g(R, '_mime', 'application/json')
            if not 'form' in m and not 'json' in m and g(R, 'content'):
                data = R.content
            p = {a: g(R, a) for a in g(R, '_path', ())}
            pth = c.pth.format(**p)
            for a in g(R, '_query', ()):
                v = g(R, a)
                if v is not None:
                    q[a] = g(R, a)
            b = g(R, 'body')
            if b:
                data = Tools.obj(b)
            f = g(R, '_formData')
            if f:
                data = {k: Tools.obj(g(R, k)) for k in f}
                data = data['form'] if f == ['form'] else data
        return meth.__name__, pth, q, data, h

    @staticmethod
    def obj(def_, is_=isinstance, g=getattr):
        if is_(def_, tuple):
            return def_[0]
        if callable(def_):
            if inspect.isfunction(def_):
                def_ = def_()
        if is_(def_, (float, int, bool, str)):
            return def_
        obj = Tools.obj
        if is_(def_, list):
            return [obj(def_[0])]
        dict_ = lambda d: d.get('__val__', d)
        if is_(def_, dict):
            return dict_({k: obj(v) for k, v in def_.items()})
        R = g(def_, 'R', 0)
        if R:
            return obj(R)
        l = g(def_, '_attrs', [
              i for i in dir(def_) if not i[0] == '_'])
        r = {k: obj(g(def_, k))
                    for k in l if not is_(g(def_, k), dict)}
        return dict_(r)

    @staticmethod
    def send(meth, *args):
        if args:
            meth = args[0]   # ico in line
        env = os.environ.get
        getenv = lambda v: env(v[1:], '') if (v and v[0] == '$') else v

        def repl(s):
            if isinstance(s, str):
                for k in keyw:
                    s = s.replace(f'{k}__', k)
            else:
                s = json.loads(repl(json.dumps(s)))
            return s

        try:
            methd, pth, params, data, h = Tools.build_req(meth)
            params = repl(params)
            host = f'{API.host}'
            if not '://' in host:
                host = 'https://' + host
            url = repl(f'{host}{API.base}{pth}')
            h = {k: getenv(v) for k, v in h.items()}
            kw = {'params': params, 'headers': h, 'timeout': timeout}
            if getenv(API.passw):
                kw['auth'] = (getenv(API.user), getenv(API.passw))
            if getattr(API, 'digest', 0):
                kw['auth'] = requests.auth.HTTPDigestAuth(*kw['auth'])
            if isinstance(data, (list, dict)):
                kw['data'] = repl(data)
            req = getattr(requests, methd)
            if result == 0:   # no send
                return [url, methd, kw]
            if 'json' in h.get('Content-Type') and data is not None:
                kw['data'] = json.dumps(kw['data'])
            req = req(url, **kw)
            if result == 3:
                return req   # show all
            r = {'status': req.status_code}
            try:
                r['resp'] = json.loads(req.text)
            except Exception:
                r['resp'] = req.text
        except Exception as ex:
            r = {'Exception': str(ex)}
        if result == 2:
            r.update(dict(kw))
            r['url'] = url
        return r


    

if __name__ == '__main__':
    import sys, os
    match = '' if len(sys.argv) == 1 else sys.argv[1]
    a, result = ([1], 0) if 'testmode' in os.environ else ([0], 2)
    for m in methods():
        if callable(m) and match in m.__qualname__:
            print(f'Calling {m.__qualname__}', file=sys.stderr)
            if not a[0]:
                y = input('Ok [y/a(lways)/N/q]? ').lower()
                if y == 'q': sys.exit(0)
                if y == 'a': a[0] = 1
                if y not in {'y', 'a'}: continue
            print(json.dumps(Tools.send(m), indent=4, sort_keys=True))
    